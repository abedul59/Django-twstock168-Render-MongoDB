# -*- coding: utf-8 -*-
"""
Created on Mon Apr 18 11:53:09 2022

@author: PCUSER
"""

from django.contrib.auth.decorators import permission_required
from django.views.decorators.csrf import csrf_exempt
from django.shortcuts import render

from myapp.models import Stock6Sign202104
from myapp.models import Stock6Sign202105
from myapp.models import Stock6Sign202106
from myapp.models import Stock6Sign202107
from myapp.models import Stock6Sign202108
from myapp.models import Stock6Sign202109
from myapp.models import Stock6Sign202110
from myapp.models import Stock6Sign202111
from myapp.models import Stock6Sign202112
from myapp.models import Stock6Sign202201
from myapp.models import Stock6Sign202202
from myapp.models import Stock6Sign202203
from myapp.models import Stock6Sign202204
from myapp.models import Stock6Sign202205
from myapp.models import Stock6Sign202206
from myapp.models import Stock6Sign202207
from myapp.models import Stock6Sign202208
from myapp.models import Stock6Sign202209
from myapp.models import Stock6Sign202210
from myapp.models import Stock6Sign202211
from myapp.models import Stock6Sign202212
from myapp.models import Stock6Sign202301
from myapp.models import Stock6Sign202302
from myapp.models import Stock6Sign202303
from myapp.models import Stock6Sign202304
from myapp.models import Stock6Sign202305
from myapp.models import Stock6Sign202306
from myapp.models import Stock6Sign202307
from myapp.models import Stock6Sign202308
from myapp.models import Stock6Sign202309
from myapp.models import Stock6Sign202310
from myapp.models import Stock6Sign202311
from myapp.models import Stock6Sign202312

from myapp.models import Stock6Sign202401
from myapp.models import Stock6Sign202402
from myapp.models import Stock6Sign202403
from myapp.models import Stock6Sign202404
from myapp.models import Stock6Sign202405
from myapp.models import Stock6Sign202406


from myapp.models import USBondYieldDB

from myapp.models import MacroWaveA
from myapp.models import MacroWaveB
from myapp.models import MacroWaveC


from myapp import models

from module import func_usbond

from module import func2
from module import func2x
###################################################################
#################################判斷是否為數字的自創函數
def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        pass
 
    try:
        import unicodedata
        unicodedata.numeric(s)
        return True
    except (TypeError, ValueError):
        pass
 
    return False
####################################台股代號
tseotc_dict = {'台泥': '1101', '亞泥': '1102', '嘉泥': '1103', '環泥': '1104', '幸福': '1108', '信大': '1109', '東泥': '1110', '味全': '1201', '味王': '1203', '大成': '1210', '大飲': '1213', '卜蜂': '1215', '統一': '1216', '愛之味': '1217', '泰山': '1218', '福壽': '1219', '台榮': '1220', '福懋油': '1225', '佳格': '1227', '聯華': '1229', '聯華食': '1231', '大統益': '1232', '天仁': '1233', '黑松': '1234', '興泰': '1235', '宏亞': '1236', '鮮活果汁-KY': '1256', '台塑': '1301', '南亞': '1303', '台聚': '1304', '華夏': '1305', '三芳': '1307', '亞聚': '1308', '台達化': '1309', '台苯': '1310', '國喬': '1312', '聯成': '1313', '中石化': '1314', '達新': '1315', '上曜': '1316', '東陽': '1319', '大洋': '1321', '永裕': '1323', '地球': '1324', '恆大': '1325', '台化': '1326', '再生-KY': '1337', '廣華-KY': '1338', '昭輝': '1339', '勝悅-KY': '1340', '富林-KY': '1341', '八貫': '1342', '遠東新': '1402', '新纖': '1409', '南染': '1410', '宏洲': '1413', '東和': '1414', '廣豐': '1416', '嘉裕': '1417', '東華': '1418', '新紡': '1419', '利華': '1423', '大魯閣': '1432', '福懋': '1434', '中福': '1435', '華友聯': '1436', '勤益控': '1437', '三地開發': '1438', '中和': '1439', '南紡': '1440', '大東': '1441', '名軒': '1442', '立益': '1443', '力麗': '1444', '大宇': '1445', '宏和': '1446', '力鵬': '1447', '佳和': '1449', '年興': '1451', '宏益': '1452', '大將': '1453', '台富': '1454', '集盛': '1455', '怡華': '1456', '宜進': '1457', '聯發': '1459', '宏遠': '1460', '強盛': '1463', '得力': '1464', '偉全': '1465', '聚隆': '1466', '南緯': '1467', '昶和': '1468', '大統新創': '1470', '首利': '1471', '三洋紡': '1472', '台南': '1473', '弘裕': '1474', '業旺': '1475', '儒鴻': '1476', '聚陽': '1477', '士電': '1503', '東元': '1504', '正道': '1506', '永大': '1507', '瑞利': '1512', '中興電': '1513', '亞力': '1514', '力山': '1515', '川飛': '1516', '利奇': '1517', '華城': '1519', '大億': '1521', '堤維西': '1522', '耿鼎': '1524', '江申': '1525', '日馳': '1526', '鑽全': '1527', '恩德': '1528', '樂士': '1529', '亞崴': '1530', '高林股': '1531', '勤美': '1532', '車王電': '1533', '中宇': '1535', '和大': '1536', '廣隆': '1537', '正峰': '1538', '巨庭': '1539', '喬福': '1540', '錩泰': '1541', '伸興': '1558', '中砂': '1560', '倉佑': '1568', '信錦': '1582', '程泰': '1583', '吉茂': '1587', '永冠-KY': '1589', '亞德客-KY': '1590', '英瑞-KY': '1592', '直得': '1597', '岱宇': '1598', '華電': '1603', '聲寶': '1604', '華新': '1605', '華榮': '1608', '大亞': '1609', '中電': '1611', '宏泰': '1612', '三洋電': '1614', '大山': '1615', '億泰': '1616', '榮星': '1617', '合機': '1618', '艾美特-KY': '1626', '中化': '1701', '南僑': '1702', '葡萄王': '1707', '東鹼': '1708', '和益': '1709', '東聯': '1710', '永光': '1711', '興農': '1712', '國化': '1713', '和桐': '1714', '長興': '1717', '中纖': '1718', '生達': '1720', '三晃': '1721', '台肥': '1722', '中碳': '1723', '台硝': '1724', '元禎': '1725', '永記': '1726', '中華化': '1727', '花仙子': '1730', '美吾華': '1731', '毛寶': '1732', '五鼎': '1733', '杏輝': '1734', '日勝化': '1735', '喬山': '1736', '臺鹽': '1737', '寶齡富錦': '1760', '中化生': '1762', '勝一': '1773', '展宇': '1776', '和康生': '1783', '科妍': '1786', '神隆': '1789', '美時': '1795', '台玻': '1802', '寶徠': '1805', '冠軍': '1806', '潤隆': '1808', '中釉': '1809', '和成': '1810', '凱撒衛': '1817', '士紙': '1903', '正隆': '1904', '華紙': '1905', '寶隆': '1906', '永豐餘': '1907', '榮成': '1909', '中鋼': '2002', '東和鋼鐵': '2006', '燁興': '2007', '高興昌': '2008', '第一銅': '2009', '春源': '2010', '春雨': '2012', '中鋼構': '2013', '中鴻': '2014', '豐興': '2015', '官田鋼': '2017', '美亞': '2020', '聚亨': '2022', '燁輝': '2023', '志聯': '2024', '千興': '2025', '大成鋼': '2027', '威致': '2028', '盛餘': '2029', '彰源': '2030', '新光鋼': '2031', '新鋼': '2032', '佳大': '2033', '允強': '2034', '海光': '2038', '上銀': '2049', '川湖': '2059', '橋椿': '2062', '運錩': '2069', '南港': '2101', '泰豐': '2102', '台橡': '2103', '國際中橡': '2104', '正新': '2105', '建大': '2106', '厚生': '2107', '南帝': '2108', '華豐': '2109', '鑫永銓': '2114', '六暉-KY': '2115', '裕隆': '2201', '中華': '2204', '三陽工業': '2206', '和泰車': '2207', '台船': '2208', '裕日車': '2227', '劍麟': '2228', '為升': '2231', '宇隆': '2233', '百達-KY': '2236', '英利-KY': '2239', '艾姆勒': '2241', '宏旭-KY': '2243', '汎德永業': '2247', '光寶科': '2301', '麗正': '2302', '聯電': '2303', '全友': '2305', '台達電': '2308', '金寶': '2312', '華通': '2313', '台揚': '2314', '楠梓電': '2316', '鴻海': '2317', '東訊': '2321', '中環': '2323', '仁寶': '2324', '國巨': '2327', '廣宇': '2328', '華泰': '2329', '台積電': '2330', '精英': '2331', '友訊': '2332', '旺宏': '2337', '光罩': '2338', '光磊': '2340', '茂矽': '2342', '華邦電': '2344', '智邦': '2345', '聯強': '2347', '海悅': '2348', '錸德': '2349', '順德': '2351', '佳世達': '2352', '宏碁': '2353', '鴻準': '2354', '敬鵬': '2355', '英業達': '2356', '華碩': '2357', '廷鑫': '2358', '所羅門': '2359', '致茂': '2360', '藍天': '2362', '矽統': '2363', '倫飛': '2364', '昆盈': '2365', '燿華': '2367', '金像電': '2368', '菱生': '2369', '大同': '2371', '震旦行': '2373', '佳能': '2374', '凱美': '2375', '技嘉': '2376', '微星': '2377', '瑞昱': '2379', '虹光': '2380', '廣達': '2382', '台光電': '2383', '群光': '2385', '精元': '2387', '威盛': '2388', '云辰': '2390', '正崴': '2392', '億光': '2393', '研華': '2395', '友通': '2397', '映泰': '2399', '凌陽': '2401', '毅嘉': '2402', '漢唐': '2404', '浩鑫': '2405', '國碩': '2406', '南亞科': '2408', '友達': '2409', '中華電': '2412', '環科': '2413', '精技': '2414', '錩新': '2415', '圓剛': '2417', '仲琦': '2419', '新巨': '2420', '建準': '2421', '固緯': '2423', '隴華': '2424', '承啟': '2425', '鼎元': '2426', '三商電': '2427', '興勤': '2428', '銘旺科': '2429', '燦坤': '2430', '聯昌': '2431', '互盛電': '2433', '統懋': '2434', '偉詮電': '2436', '翔耀': '2438', '美律': '2439', '太空梭': '2440', '超豐': '2441', '新美齊': '2442', '億麗': '2443', '兆勁': '2444', '京元電子': '2449', '神腦': '2450', '創見': '2451', '凌群': '2453', '聯發科': '2454', '全新': '2455', '奇力新': '2456', '飛宏': '2457', '義隆': '2458', '敦吉': '2459', '建通': '2460', '光群雷': '2461', '良得電': '2462', '盟立': '2464', '麗臺': '2465', '冠西電': '2466', '志聖': '2467', '華經': '2468', '資通': '2471', '立隆電': '2472', '可成': '2474', '鉅祥': '2476', '美隆電': '2477', '大毅': '2478', '敦陽科': '2480', '強茂': '2481', '連宇': '2482', '百容': '2483', '希華': '2484', '兆赫': '2485', '一詮': '2486', '漢平': '2488', '瑞軒': '2489', '吉祥全': '2491', '華新科': '2492', '揚博': '2493', '普安': '2495', '卓越': '2496', '怡利電': '2497', '宏達電': '2498', '國建': '2501', '國產': '2504', '國揚': '2505', '太設': '2506', '全坤建': '2509', '太子': '2511', '龍邦': '2514', '中工': '2515', '新建': '2516', '冠德': '2520', '京城': '2524', '宏璟': '2527', '皇普': '2528', '華建': '2530', '宏盛': '2534', '達欣工': '2535', '宏普': '2536', '聯上發': '2537', '基泰': '2538', '櫻花建': '2539', '愛山林': '2540', '興富發': '2542', '皇昌': '2543', '皇翔': '2545', '根基': '2546', '日勝生': '2547', '華固': '2548', '潤弘': '2597', '益航': '2601', '長榮': '2603', '新興': '2605', '裕民': '2606', '榮運': '2607', '嘉里大榮': '2608', '陽明': '2609', '華航': '2610', '志信': '2611', '中航': '2612', '中櫃': '2613', '東森': '2614', '萬海': '2615', '山隆': '2616', '台航': '2617', '長榮航': '2618', '亞航': '2630', '台灣高鐵': '2633', '漢翔': '2634', '台驊投控': '2636', '慧洋-KY': '2637', '宅配通': '2642', '萬企': '2701', '華園': '2702', '國賓': '2704', '六福': '2705', '第一店': '2706', '晶華': '2707', '遠雄來': '2712', '夏都': '2722', '美食-KY': '2723', '王品': '2727', '雄獅': '2731', '寒舍': '2739', '雲品': '2748', '彰銀': '2801', '京城銀': '2809', '台中銀': '2812', '旺旺保': '2816', '華票': '2820', '中壽': '2823', '台產': '2832', '臺企銀': '2834', '高雄銀': '2836', '聯邦銀': '2838', '台開': '2841', '遠東銀': '2845', '安泰銀': '2849', '新產': '2850', '中再保': '2851', '第一保': '2852', '統一證': '2855', '三商壽': '2867', '華南金': '2880', '富邦金': '2881', '國泰金': '2882', '開發金': '2883', '玉山金': '2884', '元大金': '2885', '兆豐金': '2886', '台新金': '2887', '新光金': '2888', '國票金': '2889', '永豐金': '2890', '中信金': '2891', '第一金': '2892', '王道銀行': '2897', '欣欣': '2901', '遠百': '2903', '匯僑': '2904', '三商': '2905', '高林': '2906', '特力': '2908', '統領': '2910', '麗嬰房': '2911', '統一超': '2912', '農林': '2913', '潤泰全': '2915', '鼎固-KY': '2923', '淘帝-KY': '2929', '客思達-KY': '2936', '凱羿-KY': '2939', '歐格': '3002', '健和興': '3003', '豐達科': '3004', '神基': '3005', '晶豪科': '3006', '大立光': '3008', '華立': '3010', '今皓': '3011', '晟銘電': '3013', '聯陽': '3014', '全漢': '3015', '嘉晶': '3016', '奇鋐': '3017', '同開': '3018', '亞光': '3019', '鴻名': '3021', '威強電': '3022', '信邦': '3023', '憶聲': '3024', '星通': '3025', '禾伸堂': '3026', '盛達': '3027', '增你強': '3028', '零壹': '3029', '德律': '3030', '佰鴻': '3031', '偉訓': '3032', '威健': '3033', '聯詠': '3034', '智原': '3035', '文曄': '3036', '欣興': '3037', '全台': '3038', '遠見': '3040', '揚智': '3041', '晶技': '3042', '科風': '3043', '健鼎': '3044', '台灣大': '3045', '建碁': '3046', '訊舟': '3047', '益登': '3048', '和鑫': '3049', '鈺德': '3050', '力特': '3051', '夆典': '3052', '立萬利': '3054', '蔚華科': '3055', '總太': '3056', '喬鼎': '3057', '立德': '3058', '華晶科': '3059', '銘異': '3060', '建漢': '3062', '日電貿': '3090', '聯傑': '3094', '一零四': '3130', '耀登': '3138', '正達': '3149', '景岳': '3164', '大量': '3167', '景碩': '3189', '全科': '3209', '晟鈦': '3229', '緯創': '3231', '虹冠電': '3257', '昇陽': '3266', '勝德': '3296', '昇貿': '3305', '聯德': '3308', '閎暉': '3311', '弘憶股': '3312', '同泰': '3321', '泰碩': '3338', '麗清': '3346', '奇偶': '3356', '新日興': '3376', '明泰': '3380', '新世紀': '3383', '玉晶光': '3406', '京鼎': '3413', '融程電': '3416', '譁裕': '3419', '台端': '3432', '榮創': '3437', '創意': '3443', '聯鈞': '3450', '晶睿': '3454', '群創': '3481', '誠研': '3494', '維熹': '3501', '揚明光': '3504', '華擎': '3515', '柏騰': '3518', '安馳': '3528', '晶相光': '3530', '台勝科': '3532', '嘉澤': '3533', '晶彩科': '3535', '誠創': '3536', '州巧': '3543', '敦泰': '3545', '聯穎': '3550', '嘉威': '3557', '牧德': '3563', '聯合再生': '3576', '辛耘': '3583', '通嘉': '3588', '艾笛森': '3591', '力銘': '3593', '智易': '3596', '宏致': '3605', '谷崧': '3607', '碩天': '3617', '洋華': '3622', '達邁': '3645', '健策': '3653', '世芯-KY': '3661', '貿聯-KY': '3665', '圓展': '3669', 'TPK-KY': '3673', '新至陞': '3679', '亞太電': '3682', '達能': '3686', '海華': '3694', '大眾控': '3701', '大聯大': '3702', '欣陸': '3703', '合勤控': '3704', '永信': '3705', '神達': '3706', '上緯投控': '3708', '日月光投控': '3711', '永崴投控': '3712', '富采': '3714', '佳醫': '4104', '雃博': '4106', '懷特': '4108', '旭富': '4119', '亞諾法': '4133', '麗豐-KY': '4137', '龍燈-KY': '4141', '國光生': '4142', '全宇生技-KY': '4148', '訊映': '4155', '承業醫': '4164', '佐登-KY': '4190', '炎洲': '4306', '如興': '4414', '利勤': '4426', '廣越': '4438', '冠星-KY': '4439', '東台': '4526', '瑞智': '4532', '拓凱': '4536', '全球傳動': '4540', '銘鈺': '4545', '智伸科': '4551', '力達-KY': '4552', '氣立': '4555', '永新-KY': '4557', '強信-KY': '4560', '穎漢': '4562', '元翎': '4564', '時碩工業': '4566', '鈞興-KY': '4571', '駐龍': '4572', '大銀微系統': '4576', '光隆精密-KY': '4581', '德淵': '4720', '國精化': '4722', '華廣': '4737', '康普': '4739', '台耀': '4746', '三福化': '4755', '材料-KY': '4763', '雙鍵': '4764', '南寶': '4766', '日成-KY': '4807', '遠傳': '4904', '正文': '4906', '聯德控股-KY': '4912', '致伸': '4915', '事欣科': '4916', '新唐': '4919', '泰鼎-KY': '4927', '燦星網': '4930', '太極': '4934', '茂林-KY': '4935', '和碩': '4938', '嘉彰': '4942', '康控-KY': '4943', '凌通': '4952', '光鋐': '4956', '臻鼎-KY': '4958', '誠美材': '4960', '天鈺': '4961', '十銓': '4967', '立積': '4968', '佳凌': '4976', '眾達-KY': '4977', '榮科': '4989', '傳奇': '4994', '鑫禾': '4999', '三星': '5007', '訊連': '5203', '科嘉-KY': '5215', '東科-KY': '5225', '達興材料': '5234', '乙盛-KY': '5243', '虹堡': '5258', '祥碩': '5269', '禾聯碩': '5283', 'jpp-KY': '5284', '界霖': '5285', '豐祥-KY': '5288', '中磊': '5388', '崇越': '5434', '瀚宇博': '5469', '松翰': '5471', '慧友': '5484', '建國': '5515', '隆大': '5519', '工信': '5521', '遠雄': '5522', '順天': '5525', '鄉林': '5531', '皇鼎': '5533', '長虹': '5534', '東明-KY': '5538', '永固-KY': '5546', '遠雄港': '5607', '四維航': '5608', '鳳凰': '5706', '中租-KY': '5871', '上海商銀': '5876', '合庫金': '5880', '台南-KY': '5906', '大洋-KY': '5907', '群益證': '6005', '群益期': '6024', '競國': '6108', '聚碩': '6112', '鎰勝': '6115', '彩晶': '6116', '迎廣': '6117', '達運': '6120', '上福': '6128', '鈞泰': '6131', '金橋': '6133', '富爾特': '6136', '亞翔': '6139', '柏承': '6141', '友勁': '6142', '百一': '6152', '嘉聯益': '6153', '鈞寶': '6155', '華興': '6164', '捷泰': '6165', '凌華': '6166', '宏齊': '6168', '互億': '6172', '瑞儀': '6176', '達麗': '6177', '關貿': '6183', '大豐電': '6184', '豐藝': '6189', '精成科': '6191', '巨路': '6192', '帆宣': '6196', '佳必琪': '6197', '亞弘電': '6201', '盛群': '6202', '詮欣': '6205', '飛捷': '6206', '今國光': '6209', '聯茂': '6213', '精誠': '6214', '和椿': '6215', '居易': '6216', '聚鼎': '6224', '天瀚': '6225', '光鼎': '6226', '尼得科超眾': '6230', '華孚': '6235', '力成': '6239', '迅杰': '6243', '定穎': '6251', '矽格': '6257', '台郡': '6269', '同欣電': '6271', '宏正': '6277', '台表科': '6278', '全國電': '6281', '康舒': '6282', '淳安': '6283', '啟碁': '6285', '聯嘉': '6288', '華上': '6289', '悅城': '6405', '旭隼': '6409', '群電': '6412', '樺漢': '6414', '矽力-KY': '6415', '瑞祺電通': '6416', '光麗-KY': '6431', '迅得': '6438', '光聖': '6442', '元晶': '6443', '鈺邦': '6449', '訊芯-KY': '6451', 'GIS-KY': '6456', '台數科': '6464', '安集': '6477', '晶碩': '6491', '南六': '6504', '台塑化': '6505', '穎崴': '6515', '捷敏-KY': '6525', '愛普': '6531', '晶心科': '6533', '泰福-KY': '6541', '易華電': '6552', '興能高': '6558', '虹揚-KY': '6573', '研揚': '6579', '鋼聯': '6581', '申豐': '6582', '動力-KY': '6591', '和潤企業': '6592', 'ABC-KY': '6598', '帝寶': '6605', '必應': '6625', '基士德-KY': '6641', '科定': '6655', '羅麗芬-KY': '6666', '中揚光': '6668', '緯穎': '6669', '復盛應用': '6670', '三能-KY': '6671', '騰輝電子-KY': '6672', '鋐寶科技': '6674', '旭暉應材': '6698', '惠特': '6706', '嘉基': '6715', '安普新': '6743', '匯僑設計': '6754', '威鋒電子': '6756', 'AES-KY': '6781', '台通': '8011', '矽創': '8016', '尖點': '8021', '昇陽半導體': '8028', '雷虎': '8033', '台虹': '8039', '南電': '8046', '長華*': '8070', '陞泰': '8072', '致新': '8081', '華冠': '8101', '瀚荃': '8103', '錸寶': '8104', '凌巨': '8105', '華東': '8110', '至上': '8112', '振樺電': '8114', '福懋科': '8131', '南茂': '8150', '達方': '8163', '無敵': '8201', '勤誠': '8210', '志超': '8213', '明基材': '8215', '寶一': '8222', '菱光': '8249', '富鼎': '8261', '宇瞻': '8271', '日友': '8341', '建新國際': '8367', '羅昇': '8374', '百和興業-KY': '8404', '福貞-KY': '8411', '可寧衛': '8422', '基勝-KY': '8427', '金麗-KY': '8429', '威宏-KY': '8442', '阿瘦': '8443', '富邦媒': '8454', '柏文': '8462', '潤泰材': '8463', '億豐': '8464', '美吉吉-KY': '8466', '波力-KY': '8467', '山林水': '8473', '東哥遊艇': '8478', '泰昇-KY': '8480', '政伸': '8481', '商億-KY': '8482', '吉源-KY': '8488', '鼎炫-KY': '8499', '台汽電': '8926', '新天地': '8940', '高力': '8996', '泰金寶-DR': '9105', '晨訊科-DR': '912000', '友佳-DR': '912398', '鈺齊-KY': '9802', '台火': '9902', '寶成': '9904', '大華': '9905', '欣巴巴': '9906', '統一實': '9907', '大台北': '9908', '豐泰': '9910', '櫻花': '9911', '偉聯': '9912', '美利達': '9914', '中保科': '9917', '欣天然': '9918', '康那香': '9919', '巨大': '9921', '福興': '9924', '新保': '9925', '新海': '9926', '泰銘': '9927', '中視': '9928', '秋雨': '9929', '中聯資源': '9930', '欣高': '9931', '中鼎': '9933', '成霖': '9934', '慶豐富': '9935', '全國': '9937', '百和': '9938', '宏全': '9939', '信義': '9940', '裕融': '9941', '茂順': '9942', '好樂迪': '9943', '新麗': '9944', '潤泰新': '9945', '三發地產': '9946', '佳龍': '9955', '世紀鋼': '9958', '茂生農經': '1240', '其祥-KY': '1258', '安心': '1259', '德麥': '1264', '漢來美食': '1268', '台翰': '1336', '精華': '1565', '濱川': '1569', '力肯': '1570', '新麥': '1580', '精剛': '1584', '和勤': '1586', '駿吉-KY': '1591', '祺驊': '1593', '川寶': '1595', '宏佳騰': '1599', '台蠟': '1742', '南光': '1752', '生泰': '1777', '合世': '1781', '訊聯': '1784', '光洋科': '1785', '杏昌': '1788', '金穎生技': '1796', '易威': '1799', '寶利徠': '1813', '富喬': '1815', '唐榮公司': '2035', '風青': '2061', '世鎧': '2063', '晉椿': '2064', '世豐': '2065', '世德': '2066', '嘉鋼': '2067', '精湛': '2070', '大甲': '2221', '泰茂': '2230', '謚源': '2235', '綠意': '2596', '大車隊': '2640', '正德': '2641', '捷迅': '2643', '晶悅': '2718', '燦星旅': '2719', '富驛-KY': '2724', '雅茗-KY': '2726', '瓦城': '2729', '六角': '2732', '易飛網': '2734', '高野': '2736', '天蔥': '2740', '山富': '2743', '五福': '2745', '豆府': '2752', '亞洲藏壽司': '2754', '揚秦': '2755', '滿心': '2916', '東凌-KY': '2924', '誠品生活': '2926', '紅馬-KY': '2928', '集雅社': '2937', '泰偉': '3064', '李洲': '3066', '全域': '3067', '協禧': '3071', '天方能源': '3073', '僑威': '3078', '聯亞': '3081', '網龍': '3083', '新零售': '3085', '華義': '3086', '艾訊': '3088', '元炬': '3089', '鴻碩': '3092', '港建': '3093', '及成': '3095', '穩懋': '3105', '好德': '3114', '寶島極': '3115', '進階': '3118', '笙泉': '3122', '昇銳': '3128', '弘塑': '3131', '晶宏': '3141', '新揚科': '3144', '大綜': '3147', '璟德': '3152', '精確': '3162', '波若威': '3163', '亞信': '3169', '新洲': '3171', '基亞': '3176', '公準': '3178', '鑫龍騰': '3188', '和進': '3191', '樺晟': '3202', '佰研': '3205', '志豐': '3206', '耀勝': '3207', '順達': '3211', '茂訊': '3213', '優群': '3217', '大學光': '3218', '倚強': '3219', '台嘉碩': '3221', '三顧': '3224', '至寶電': '3226', '原相': '3227', '金麗科': '3228', '錦明': '3230', '昱捷': '3232', '光環': '3234', '千如': '3236', '海灣': '3252', '鑫創': '3259', '威剛': '3260', '欣銓': '3264', '台星科': '3265', '海德威': '3268', '東碩': '3272', '宇環': '3276', '太普高': '3284', '微端': '3285', '廣寰科': '3287', '點晶': '3288', '宜特': '3289', '東浦': '3290', '鈊象': '3293', '英濟': '3294', '杭特': '3297', '岱稜': '3303', '鼎天': '3306', '佳穎': '3310', '斐成': '3313', '尼克森': '3317', '建舜電': '3322', '加百裕': '3323', '雙鴻': '3324', '旭品': '3325', '幸康': '3332', '泰谷': '3339', '律勝': '3354', '尚立': '3360', '先進光': '3362', '上詮': '3363', '典範': '3372', '熱映': '3373', '精材': '3374', '彬台': '3379', '崇越電': '3388', '旭軟': '3390', '漢科': '3402', '台興': '3426', '哲固': '3434', '類比科': '3438', '聯一光': '3441', '利機': '3444', '由田': '3455', '進泰電子': '3465', '致振': '3466', '安勤': '3479', '力致': '3483', '崧騰': '3484', '森寶': '3489', '單井': '3490', '昇達科': '3491', '長盛': '3492', '陽程': '3498', '環天科': '3499', '位速': '3508', '矽瑪': '3511', '皇龍': '3512', '亞帝歐': '3516', '華盈': '3520', '鴻翊': '3521', '御頂': '3522', '迎輝': '3523', '凡甲': '3526', '聚積': '3527', '力旺': '3529', '先益': '3531', '堡達': '3537', '曜越': '3540', '西柏': '3541', '宇峻': '3546', '兆利': '3548', '世禾': '3551', '同致': '3552', '重鵬': '3555', '禾瑞亞': '3556', '神準': '3558', '其陽': '3564', '逸昌': '3567', '大塚': '3570', '泓格': '3577', '友威科': '3580', '博磊': '3581', '閎康': '3587', '磐儀': '3594', '映興': '3597', '東林': '3609', '鼎翰': '3611', '安可': '3615', '富晶通': '3623', '光頡': '3624', '西勝': '3625', '盈正': '3628', '地心引力': '3629', '新鉅科': '3630', '晟楠': '3631', '研勤': '3632', '駿熠電': '3642', '艾恩特': '3646', '精聯': '3652', '鑫科': '3663', '安瑞-KY': '3664', '光耀': '3666', '康聯訊': '3672', '德微': '3675', '家登': '3680', '榮昌': '3684', '元創精密': '3685', '歐買尬': '3687', '湧德': '3689', '碩禾': '3691', '營邦': '3693', '漢磊': '3707', '鑫聯大投控': '3709', '連展投控': '3710', '新晶投控': '3713', '永日': '4102', '東洋': '4105', '邦特': '4107', '加捷生醫': '4109', '濟生': '4111', '聯上': '4113', '健喬': '4114', '明基醫': '4116', '友華': '4120', '優盛': '4121', '晟德': '4123', '太醫': '4126', '天良': '4127', '中天': '4128', '聯合': '4129', '健亞': '4130', '晶宇': '4131', '曜亞': '4138', '馬光-KY': '4139', '中裕': '4147', '台微體': '4152', '鈺緯': '4153', '康樂-KY': '4154', '太景*-KY': '4157', '創源': '4160', '聿新科': '4161', '智擎': '4162', '鐿鈦': '4163', '松瑞藥': '4167', '醣聯': '4168', '瑞基': '4171', '久裕': '4173', '浩鼎': '4174', '杏一': '4175', '福永生技': '4183', '安克': '4188', '杏國': '4192', '欣大健康': '4198', '中華食': '4205', '環泰': '4207', '信立': '4303', '勝昱': '4304', '世坤': '4305', '東隆興': '4401', '福大': '4402', '新昕纖': '4406', '飛寶企業': '4413', '三圓': '4416', '金洲': '4417', '元勝': '4419', '光明': '4420', '聚紡': '4429', '耀億': '4430', '銘旺實': '4432', '興采': '4433', '健信': '4502', '金雨': '4503', '崇友': '4506', '高鋒': '4510', '福裕': '4513', '永彰': '4523', '方土霖': '4527', '江興鍛': '4528', '淳紳': '4529', '宏易': '4530', '協易機': '4533', '慶騰': '4534', '至興': '4535', '大詠城': '4538', '晟田': '4541', '科嶠': '4542', '萬在': '4543', '桓達': '4549', '長佳': '4550', '橙的': '4554', '旭然': '4556', '健椿': '4561', '百德': '4563', '科際精密': '4568', '捷流閥業': '4580', '唐鋒': '4609', '中美實': '4702', '大恭': '4706', '磐亞': '4707', '永純': '4711', '南璋': '4712', '永捷': '4714', '大立': '4716', '美琪瑪': '4721', '永昕': '4726', '雙美': '4728', '熒茂': '4729', '豪展': '4735', '泰博': '4736', '泓瀚': '4741', '合一': '4743', '皇將': '4744', '合富-KY': '4745', '強生': '4747', '國碳科': '4754', '勤凱科技': '4760', '誠泰科技': '4767', 'VHQ-KY': '4803', '大略-KY': '4804', '昇華': '4806', '聯光通': '4903', '台聯電': '4905', '富宇': '4907', '前鼎': '4908', '新復興': '4909', '德英': '4911', '欣厚-KY': '4924', '新盛力': '4931', '友輝': '4933', '亞電': '4939', '兆遠': '4944', '陞達科技': '4945', '辣椒': '4946', '牧東': '4950', '緯軟': '4953', '譜瑞-KY': '4966', 'IET-KY': '4971', '湯石照明': '4972', '廣穎': '4973', '亞泰': '4974', '華星光': '4979', '科誠': '4987', '環宇-KY': '4991', '晶達': '4995', '榮剛': '5009', '久陽': '5011', '強新': '5013', '建錩': '5014', '華祺': '5015', '松和': '5016', '富強': '5102', '凱衛': '5201', '力新': '5202', '中茂': '5205', '坤悅': '5206', '新鼎': '5209', '寶碩': '5210', '蒙恬': '5211', '凌網': '5212', '亞昕': '5213', '萬達光電': '5220', '安力-KY': '5223', '立凱-KY': '5227', '雷笛克光學': '5230', '智晶': '5245', '天鉞電': '5251', '智崴': '5263', '笙科': '5272', '信驊': '5274', '達輝-KY': '5276', '尚凡': '5278', '大峽谷-KY': '5281', '數字': '5287', '宜鼎': '5289', '邑昇': '5291', '杰力': '5299', '寶得利': '5301', '太欣': '5302', '桂盟': '5306', '系統電': '5309', '天剛': '5310', '寶島科': '5312', '世紀': '5314', '光聯': '5315', '友銓': '5321', '士開': '5324', '華容': '5328', '建榮': '5340', '立衛': '5344', '天揚': '5345', '世界': '5347', '系通': '5348', '鈺創': '5351', '台林': '5353', '佳總': '5355', '協益': '5356', '力麗店': '5364', '中光電': '5371', '合正': '5381', '金利': '5383', '青雲': '5386', '應華': '5392', '慕康生醫': '5398', '中菲': '5403', '國眾': '5410', '台半': '5425', '振發': '5426', '達威': '5432', '東友': '5438', '高技': '5439', '均豪': '5443', '南良': '5450', '佶優': '5452', '昇益': '5455', '宣德': '5457', '同協': '5460', '霖宏': '5464', '富驊': '5465', '凱鈺': '5468', '聰泰': '5474', '德宏': '5475', '智冠': '5478', '新華': '5481', '中美晶': '5483', '通泰': '5487', '松普': '5488', '彩富': '5489', '同亨': '5490', '三聯': '5493', '凱崴': '5498', '永信建': '5508', '德昌': '5511', '力麒': '5512', '三豐': '5514', '雙喜': '5516', '力泰': '5520', '豐謙': '5523', '志嘉': '5529', '龍巖': '5530', '聖暉': '5536', '桓鼎-KY': '5543', '台聯櫃': '5601', '陸海': '5603', '中連貨': '5604', '中菲行': '5609', '劍湖山': '5701', '亞都': '5703', '老爺知': '5704', '日盛金': '5820', '致和證': '5864', '台名': '5878', '德記': '5902', '全家': '5903', '寶雅': '5904', '南仁湖': '5905', '宏遠證': '6015', '康和證': '6016', '大展證': '6020', '大慶證': '6021', '元大期貨': '6023', '福邦證': '6026', '寬魚國際': '6101', '合邦': '6103', '創惟': '6104', '亞元': '6109', '大宇資': '6111', '亞矽': '6113', '久威': '6114', '建達': '6118', '新普': '6121', '擎邦': '6122', '上奇': '6123', '業強': '6124', '廣運': '6125', '信音': '6126', '九豪': '6127', '普誠': '6129', '星寶國際': '6130', '萬旭': '6134', '茂達': '6138', '訊達電腦': '6140', '振曜': '6143', '得利影': '6144', '耕興': '6146', '頎邦': '6147', '驊宏資': '6148', '撼訊': '6150', '晉倫': '6151', '順發': '6154', '松上': '6156', '禾昌': '6158', '欣技': '6160', '捷波': '6161', '華電網': '6163', '久正': '6167', '昱泉': '6169', '統振': '6170', '亞銳士': '6171', '信昌電': '6173', '安碁': '6174', '立敦': '6175', '亞通': '6179', '橘子': '6180', '合晶': '6182', '幃翔': '6185', '新潤': '6186', '萬潤': '6187', '廣明': '6188', '萬泰科': '6190', '育富': '6194', '詩肯': '6195', '凌泰': '6198', '天品': '6199', '海韻電': '6203', '艾華': '6204', '雷科': '6207', '日揚': '6208', '慶生': '6210', '理銘': '6212', '中探針': '6217', '豪勉': '6218', '富旺': '6219', '岳豐': '6220', '晉泰': '6221', '上揚': '6222', '旺矽': '6223', '茂綸': '6227', '全譜': '6228', '研通': '6229', '系微': '6231', '旺玖': '6233', '高僑': '6234', '康呈': '6236', '驊訊': '6237', '松崗': '6240', '易通展': '6241', '立康': '6242', '茂迪': '6244', '立端': '6245', '臺龍': '6246', '淇譽電': '6247', '沛波': '6248', '百徽': '6259', '久元': '6261', '普萊德': '6263', '富裔': '6264', '方土昶': '6265', '泰詠': '6266', '倍微': '6270', '台燿': '6274', '元山': '6275', '安鈦克': '6276', '胡連': '6279', '佳邦': '6284', '元隆': '6287', '良維': '6290', '沛亨': '6291', '迅德': '6292', '智基': '6294', '通訊-KY': '6404', '晶焱': '6411', '韋僑': '6417', '詠昇': '6418', '京晨科': '6419', '易發': '6425', '統新': '6426', '今展科': '6432', '大中': '6435', '廣錠': '6441', '藥華藥': '6446', '紘康': '6457', '益得': '6461', '神盾': '6462', '威潤': '6465', '大樹': '6469', '宇智': '6470', '保瑞': '6472', '弘煜科': '6482', '點序': '6485', '互動': '6486', '環球晶': '6488', '生華科': '6492', '九齊': '6494', '科懋': '6496', '益安': '6499', '雙邦': '6506', '惠光': '6508', '聚和': '6509', '精測': '6510', '啟發電': '6512', '芮特-KY': '6514', '勤崴國際': '6516', '達爾膚': '6523', '明達醫': '6527', '創威': '6530', '瑞耘': '6532', '順藥': '6535', '倉和': '6538', '隆中': '6542', '高端疫苗': '6547', '長科*': '6548', '勝品': '6556', '欣普羅': '6560', '是方': '6561', '宏觀': '6568', '醫揚': '6569', '維田': '6570', '霈方': '6574', '逸達': '6576', '勁豐': '6577', '達邦蛋白': '6578', '東典': '6588', '台康生技': '6589', '普鴻': '6590', '台灣銘板': '6593', '展匯科': '6594', '寬宏藝術': '6596', '富強鑫': '6603', '瀧澤科': '6609', '奈米醫材': '6612', '朋億': '6613', '慧智': '6615', '特昇-KY': '6616', '萬年清': '6624', '泰金-KY': '6629', '均華': '6640', '富致': '6642', 'M31': '6643', '台生材': '6649', '全宇昕': '6651', '天正國際': '6654', '威健生技': '6661', '樂斯科': '6662', '群翊': '6664', '信紘科': '6667', '鈺太': '6679', '鑫創電子': '6680', '雍智科技': '6683', '安碁資訊': '6690', '東捷資訊': '6697', '軒郁': '6703', '長聖': '6712', '應廣': '6716', '亞泰金屬': '6727', '上洋': '6728', '昇佳電子': '6732', '博晟生醫': '6733', '亨泰光': '6747', '智聯服務': '6751', '叡揚': '6752', '達亞': '6762', '台微醫': '6767', '崑鼎': '6803', '邑錡': '7402', '意德士科技': '7556', '佑華': '8024', '鈦昇': '8027', '光菱': '8032', '榮群': '8034', '長園科': '8038', '九暘': '8040', '金山電': '8042', '蜜望實': '8043', '網家': '8044', '星雲': '8047', '德勝': '8048', '晶采': '8049', '廣積': '8050', '安國': '8054', '凱碩': '8059', '東捷': '8064', '來思達': '8066', '志旭': '8067', '全達': '8068', '元太': '8069', '能率網通': '8071', '鉅橡': '8074', '伍豐': '8076', '洛碁': '8077', '永利聯合': '8080', '瑞穎': '8083', '巨虹': '8084', '福華': '8085', '宏捷科': '8086', '華鎂鑫': '8087', '品安': '8088', '康全電訊': '8089', '翔名': '8091', '建暐': '8092', '保銳': '8093', '擎亞': '8096', '常珵': '8097', '大世科': '8099', '大億金茂': '8107', '博大': '8109', '立碁': '8111', '越峰': '8121', '正淩': '8147', '博智': '8155', '天宇': '8171', '智捷': '8176', '加高': '8182', '精星': '8183', '新漢': '8234', '華宏': '8240', '朋程': '8255', '商丞': '8277', '生展': '8279', '三竹': '8284', '泰藝': '8289', '尚茂': '8291', '群聯': '8299', '益張': '8342', '恒耀國際': '8349', '冠好': '8354', '金居': '8358', '千附': '8383', '金益鼎': '8390', '白紗科': '8401', '盛弘': '8403', '金可-KY': '8406', '商之器': '8409', '森田': '8410', '大國鋼': '8415', '實威': '8416', '捷必勝-KY': '8418', '明揚': '8420', '旭源': '8421', '保綠-KY': '8423', '惠普': '8424', '紅木-KY': '8426', '匯鑽科': '8431', '東生華': '8432', '弘帆': '8433', '鉅邁': '8435', '大江': '8436', '大地-KY': '8437', '綠電': '8440', '綠河-KY': '8444', '華研': '8446', '霹靂': '8450', '大拓-KY': '8455', '夠麻吉': '8472', '台境': '8476', '創業家': '8477', '三貝德': '8489', '裕國': '8905', '花王': '8906', '欣雄': '8908', '光隆': '8916', '欣泰': '8917', '沈氏': '8921', '時報': '8923', '大田': '8924', '北基': '8927', '鉅明': '8928', '富堡': '8929', '青鋼': '8930', '大汽電': '8931', '宏大': '8932', '愛地雅': '8933', '邦泰': '8935', '國統': '8936', '合騏': '8937', '明安': '8938', '關中': '8941', '森鉅': '8942', '琉園': '9949', '萬國通': '9950', '皇田': '9951', '邁達康': '9960', '有益': '9962'}

from .forms import NameForm

def viewsGetUSBondYield(request):  #
        #收集資料創建時間
    from django.utils import timezone
    wholetime = str(timezone.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
        
    USBond3mYieldClose, USBond10yYieldClose = func_usbond.getUSBondYield()
    
    

    return render(request, "viewsGetUSBondYield.html", locals())

def viewsGetUSBondYieldAdmin(request):  #
        #收集資料創建時間
    #from django.utils import timezone
    #wholetime = str(timezone.now()) 
    #realtime = wholetime[:16]  #取得獲取資料時間
    
    #收集資料創建時間
    import datetime
    wholetime = str(datetime.datetime.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
    realdate = wholetime[:10] #年月日
        
    USBond3mYieldClose, USBond10yYieldClose = func_usbond.getUSBondYield()
    
        #以下寫入資料庫
    try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
        bond = models.USBondYieldDB.objects.get(cDate=realdate)


        bond.cDate = realdate
        bond.cInvertedYieldCurve10y = USBond10yYieldClose
        bond.cInvertedYieldCurve3m = USBond3mYieldClose
        bond.cIYC10yminus3m = str(round(float(USBond10yYieldClose) - float(USBond3mYieldClose),4))

        bond.save()
            
            ###################


    except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
        bond = models.USBondYieldDB.objects.create(cDate=realdate, cInvertedYieldCurve10y = USBond10yYieldClose, cInvertedYieldCurve3m = USBond3mYieldClose, cIYC10yminus3m = str(round(float(USBond10yYieldClose) - float(USBond3mYieldClose),4)))
        bond.save()     

    return render(request, "viewsGetUSBondYield.html", locals())



def viewsGetMacroWaveAdmin(request):  #
        #收集資料創建時間
    #from django.utils import timezone
    #wholetime = str(timezone.now()) 
    #realtime = wholetime[:16]  #取得獲取資料時間
    
    #收集資料創建時間
    import datetime
    wholetime = str(datetime.datetime.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
    realdate = wholetime[:10] #年月日
        
    #USBond3mYieldClose, USBond10yYieldClose = func_usbond.getUSBondYield()
    USBond3mYieldClose, USBond6mYieldClose, USBond2yYieldClose, USBond3yYieldClose, USBond5yYieldClose, USBond7yYieldClose, USBond10yYieldClose, USBond30yYieldClose = func_usbond.getUSBondYieldALL()

    #個別績效串列 
    #一週 一個月 六個月一年
    Lists3m = func_usbond.getUSBondYield3m()
    Lists6m = func_usbond.getUSBondYield6m()
    Lists2y = func_usbond.getUSBondYield2y()
    Lists30y = func_usbond.getUSBondYield3y()
    Lists4y = func_usbond.getUSBondYield5y()
    Lists7y = func_usbond.getUSBondYield7y()
    Lists10y = func_usbond.getUSBondYield10y()
    Lists30y = func_usbond.getUSBondYield30y()


    
        #以下寫入資料庫
    try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
        bond = models.MacroWaveA.objects.get(cDate=realdate)


        bond.cDate = realdate
        bond.cInvertedYieldCurve10y = USBond10yYieldClose
        bond.cInvertedYieldCurve3m = USBond3mYieldClose
        
        bond.cInvertedYieldCurve6m = USBond6mYieldClose        
        bond.cInvertedYieldCurve2y = USBond2yYieldClose         
        bond.cInvertedYieldCurve3y = USBond3yYieldClose
        bond.cInvertedYieldCurve5y = USBond5yYieldClose
        bond.cInvertedYieldCurve7y = USBond7yYieldClose
        bond.cInvertedYieldCurve30y = USBond30yYieldClose
        
        bond.cIYC10yminus3m = str(round(float(USBond10yYieldClose) - float(USBond3mYieldClose),4))

        bond.save()
            
            ###################
        

    except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
        bond = models.MacroWaveA.objects.create(cDate=realdate, cInvertedYieldCurve10y = USBond10yYieldClose, cInvertedYieldCurve3m = USBond3mYieldClose, cIYC10yminus3m = str(round(float(USBond10yYieldClose) - float(USBond3mYieldClose),4)), cInvertedYieldCurve6m = USBond6mYieldClose,cInvertedYieldCurve2y = USBond2yYieldClose,cInvertedYieldCurve3y = USBond3yYieldClose,cInvertedYieldCurve5y = USBond5yYieldClose,cInvertedYieldCurve7y = USBond7yYieldClose,cInvertedYieldCurve30y = USBond30yYieldClose)
        bond.save()     

    return render(request, "viewsGetMacroWave.html", locals())

def viewsGetMacroWaveBdmin(request):  #Bdmin為正確 有MacroWave A B C
        #收集資料創建時間
    #from django.utils import timezone
    #wholetime = str(timezone.now()) 
    #realtime = wholetime[:16]  #取得獲取資料時間
    

        
    if request.method == "POST":  #假如是以POST方式才處理
        RecesTime = request.POST['RecesTime']  #取得表單輸入內容
        RecesNum = request.POST['RecesNum']  #取得表單輸入內容
        M1bTime= request.POST['M1bTime']  #取得表單輸入內容
        M1bNumYoY = request.POST['M1bNumYoY']  #取得表單輸入內容
        M1bNum = request.POST['M1bNum']  #取得表單輸入內容

        MVTime= request.POST['MVTime']  #取得表單輸入內容
        MVNum = request.POST['MVNum']  #取得表單輸入內容
           
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        realdate = wholetime[:10] #年月日
    
        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            bond = models.MacroWaveB.objects.get(cDate=realdate)
            bond.cDate = realdate
            bond.cRecesTime = RecesTime
            bond.cRecesNum = RecesNum
            bond.cM1bTime = M1bTime
            bond.cM1bNum  = M1bNum        
            bond.cM1bYoY  = M1bNumYoY            
            bond.cMarketVaule = MVNum                
            bond.cMVTime = MVTime   
            try:
                bond.cMVvsM1b = round((float(MVNum)/float(M1bNum))/100,2)  
            except:
                bond.cMVvsM1b = "N/A" 
             

            
            bond.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            bond = models.MacroWaveB.objects.create(cDate=realdate, cRecesTime = RecesTime, cRecesNum = RecesNum, cM1bTime = M1bTime, cM1bNum= M1bNum, cM1bYoY = M1bNumYoY, cMarketVaule = MVNum, cMVTime = MVTime, cMVvsM1b = round((float(MVNum)/float(M1bNum))/100,2))
            bond.save()     
        
        
    else:
        pass
    return render(request, "viewsGetMacroWaveBdmin.html", locals())

def viewsGetMacroWaveCdmin(request):  #Cdmin為正確 有MacroWave A B C
        #收集資料創建時間
    #from django.utils import timezone
    #wholetime = str(timezone.now()) 
    #realtime = wholetime[:16]  #取得獲取資料時間
    

        
    if request.method == "POST":  #假如是以POST方式才處理
        LInum = request.POST['LInum']  #取得表單輸入內容
        LITime = request.POST['LITime']  #取得表單輸入內容
        NewestRate = request.POST['NewestRate']  #取得表單輸入內容
        MCTime2 = request.POST['MCTime2']  #取得表單輸入內容
        MCnum2 = request.POST['MCnum2']  #取得表單輸入內容

        NewestYoY1 = request.POST['NewestYoY1']  #取得表單輸入內容
        NewestYoY2 = request.POST['NewestYoY2']  #取得表單輸入內容

        CPnum = request.POST['CPnum']  #取得表單輸入內容
        CPTime = request.POST['CPTime']  #取得表單輸入內容
           
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        realdate = wholetime[:10] #年月日
    
        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            bond = models.MacroWaveC.objects.get(cDate=realdate)
            bond.cDate = realdate
            bond.cUSLeadingIndicatorTime = LITime
            bond.cUSLeadingIndicator = LInum
            bond.cUSUnemploymentRate = NewestRate
            bond.cUSUnemploymentRateTime = "N/A"
            bond.cMichiganComsumerTime  = MCTime2       
            bond.cMichiganComsumer  = MCnum2           
            bond.cDurableGoodsNewOrder1 = NewestYoY1               
            bond.cDurableGoodsNewOrder2 = NewestYoY2                     
            bond.cChinaPMI = CPnum               
            bond.cChinaPMITime = CPTime
 
             

            
            bond.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            bond = models.MacroWaveC.objects.create(cDate=realdate, cUSLeadingIndicatorTime=LITime, cUSLeadingIndicator=LInum, cUSUnemploymentRate=NewestRate, cMichiganComsumerTime=MCTime2, cMichiganComsumer=MCnum2, cDurableGoodsNewOrder1=NewestYoY1, cDurableGoodsNewOrder2=NewestYoY2, cChinaPMI=CPnum, cChinaPMITime=CPTime, cUSUnemploymentRateTime = "N/A")
            bond.save()     
        
        
    else:
        pass
    return render(request, "viewsGetMacroWaveCdmin.html", locals())


def stock6xapp(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6xapp.html", locals())



@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6(request):  #查詢六大指標，給付費使用者使用
    form = NameForm(request.POST)
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        
        if form.is_valid():
            
            
            mess0 = form.cleaned_data['cStockID']  #取得表單輸入內容
            print(mess0)

            if is_number(mess0) == True:  #是數字
                mess = mess0
            else:
                mess = tseotc_dict[mess0]
            print(mess)
            
            result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
            result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
            result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
            result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

            average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

            stock_name = func2x.GetStockName(mess)

        else:
            form = NameForm()
            print("form is not valid！")
            


    else:
        mess = "台股代號尚未送出！"
        #stock_name = "台股名稱尚未查到！"
        #result1 = "營益率指標尚未計算出來！"
        #result2 = "營收指標尚未計算出來！"
        #result3 = "淨利指標尚未計算出來！"
        #result4 = "EPS指標尚未計算出來！"
        #result5 = "存貨週轉率指標尚未計算出來！"
        #result6 = "現金流量指標尚未計算出來！"
        #average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6Admin(request):  #查詢六大指標，給管理人使用

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容


        #以下收集六大指標的各評分
        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2.stock_Rev(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2.stock_Cashflow(mess)
        
        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
        
        #收集資料創建時間
        from django.utils import timezone
        wholetime = str(timezone.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock, stock_name =func2.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        
        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signQ4 = models.Stock6Sign2020Q4.objects.get(cStockID=mess)


            signQ4.cSign1 = result1
            signQ4.cSign2 = result2
            signQ4.cSign3 = result3
            signQ4.cSign4 = result4
            signQ4.cSign5 = result5
            signQ4.cSign6 = result6
            signQ4.cAverageScore = average6stock
            signQ4.pubtime =realtime

            signQ4.cNewestSeason = newest_Fin_Q
            signQ4.cNewestRev = newest_Rev_month            
            
                                
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore

            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = str(float(avgs07) - float(avgs06))
            signQ4.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            signQ4 = models.Stock6Sign2020Q4.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
            signQ4.save()            
            
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
            #signQ2 = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            #if (sign07.cLossGain == '-5'):
            #avgs06 = float(sign06.cAverageScore)
            #avgsQ2 = float(average6stock)
            
            #lg = avgs07 - avgs06
            #print(lg)

                
            #signQ2.cLossGain =  avgsQ2-avgs06 #不知為何不能用減號-
            #signQ2.save()

            
            #取出6月資料
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
                    
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore
            #計算分數增減
            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = float(avgs07) - float(avgs06)
            #sign07.save()
            

               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6Admin.html", locals())




@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6x(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6x.html", locals())





@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6xAdmin(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)


        stock_name = func2x.GetStockName(mess)


        #收集資料創建時間
        from django.utils import timezone
        wholetime = str(timezone.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        if mess_db == "04":
            DB = Stock6Sign202404
            
        elif mess_db == "05":
            DB = Stock6Sign202405

        elif mess_db == "06":
            DB = Stock6Sign202406

        elif mess_db == "07":
            DB = Stock6Sign202307

        elif mess_db == "08":
            DB = Stock6Sign202308
            
        elif mess_db == "09":
            DB = Stock6Sign202309
            
        elif mess_db == "10":
            DB = Stock6Sign202310

        elif mess_db == "11":
            DB = Stock6Sign202311

        elif mess_db == "12":
            DB = Stock6Sign202312

        elif mess_db == "01":
            DB = Stock6Sign202401

        elif mess_db == "02":
            DB = Stock6Sign202402
            
        elif mess_db == "03":
            DB = Stock6Sign202403            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            sign = DB.objects.get(cStockID=mess)


            sign.cSign1 = result1
            sign.cSign2 = result2
            sign.cSign3 = result3
            sign.cSign4 = result4
            sign.cSign5 = result5
            sign.cSign6 = result6
            sign.cAverageScore = average6stock
            sign.pubtime =realtime

            sign.cNewestSeason = newest_Fin_Q
            sign.cNewestRev = newest_Rev_month            
            
                                
    
            sign.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
       
            sign = DB.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=float(average6stock), pubtime=realtime)
            sign.save() 
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"


        
    
            
    return render(request, "stock6xAdmin.html", locals())





#from .views_monthlyAlterStuff import NowTimeDBs 
from .views_monthlyAlterStuff import DBfunc 
DBv = DBfunc()

#DBv = NowTimeDBs()  #從views_monthlyAlterStuff.py取得每月需要的資料庫變數

#DBv.show() 
#DB = Stock6Sign202203  #每個月更換這裡
DBv.getRightDB()
#DB = DBv.z  #每個月的主要資料庫  #y= 上個月 x = 上上個月


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminGL(request):  #查詢六大指標，給管理人使用

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容



        signY = models.Stock6Sign202403.objects.get(cStockID=mess)
        signZ = models.Stock6Sign202404.objects.get(cStockID=mess)            


        avgsY = float(signY.cAverageScore)
        avgsZ = float(signZ.cAverageScore)
            
        signZ.cLossGain =  round(avgsZ-avgsY,2) #不知為何不能用減號- 可以了
        

        
        signZ.save()            

            

               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminGL.html", locals())

from module import func8
###############################
@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6getOne(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        stock_name =func2.GetStockName(mess) 
        try: #上市股價查詢
        
            dailyprice2107 = float(func8.Daily_Price(mess,'20210802', 4))        
            dailyprice2106 = float(func8.Daily_Price(mess,'20210701', 4))
            dailyprice2105 = float(func8.Daily_Price(mess,'20210601', 4))

            dailyprice2104 = float(func8.Daily_Price(mess,'20210501', 4))
            dailyprice2103 = float(func8.Daily_Price(mess,'20210401', 4))
            dailyprice2102 = float(func8.Daily_Price(mess,'20210301', 4))
            dailyprice2101 = float(func8.Daily_Price(mess,'20210201', 4))
            dailyprice2012 = float(func8.Daily_Price(mess,'20210104', 4))
            dailyprice2011 = float(func8.Daily_Price(mess,'20201201', 4))
            dailyprice2010 = float(func8.Daily_Price(mess,'20201102', 3))
            dailyprice2009 = float(func8.Daily_Price(mess,'20201001', 4))
            dailyprice2008 = float(func8.Daily_Price(mess,'20200901', 7)) 
            dailyprice2007 = float(func8.Daily_Price(mess,'20200801', 5))        
            dailyprice2006 = float(func8.Daily_Price(mess,'20200701', 7))
        except: #上櫃股價查詢
            dailyprice2107 = float(func8.Daily_Price2(mess,'2021-08-02')) 
            dailyprice2106 = float(func8.Daily_Price2(mess,'2021-07-01')) 
            dailyprice2105 = float(func8.Daily_Price2(mess,'2021-06-01'))         
        
            dailyprice2104 = float(func8.Daily_Price2(mess,'2021-05-01')) 
            dailyprice2103 = float(func8.Daily_Price2(mess,'2021-04-01')) 
            dailyprice2102 = float(func8.Daily_Price2(mess,'2021-03-01')) 
            dailyprice2101 = float(func8.Daily_Price2(mess,'2021-02-01')) 
            dailyprice2012 = float(func8.Daily_Price2(mess,'2021-01-04'))            
            dailyprice2011 = float(func8.Daily_Price2(mess,'2020-12-01'))
            dailyprice2010 = float(func8.Daily_Price2(mess,'2020-11-02'))
            dailyprice2009 = float(func8.Daily_Price2(mess,'2020-10-01'))
            dailyprice2008 = float(func8.Daily_Price2(mess,'2020-09-01')) 
            dailyprice2007 = float(func8.Daily_Price2(mess,'2020-08-01'))        
            dailyprice2006 = float(func8.Daily_Price2(mess,'2020-07-01'))

        lg07_06 = str((round((dailyprice2107-dailyprice2106)/dailyprice2106, 4))*100) + '%'             


        lg06_05 = str((round((dailyprice2106-dailyprice2105)/dailyprice2105, 4))*100) + '%'             

        lg05_04 = str((round((dailyprice2105-dailyprice2104)/dailyprice2104, 4))*100) + '%'             

        lg04_03 = str((round((dailyprice2104-dailyprice2103)/dailyprice2103, 4))*100) + '%'             
        lg03_02 = str((round((dailyprice2103-dailyprice2102)/dailyprice2102, 4))*100) + '%'             
        lg02_01 = str((round((dailyprice2102-dailyprice2101)/dailyprice2101, 4))*100) + '%' 
        lg01_12 = str((round((dailyprice2101-dailyprice2012)/dailyprice2012, 4))*100) + '%' 
            
        lg12_11 = str((round((dailyprice2012-dailyprice2011)/dailyprice2011, 4))*100) + '%' 
        lg11_10 = str((round((dailyprice2011-dailyprice2010)/dailyprice2010, 4))*100) + '%' 
        lg10_9 = str((round((dailyprice2010-dailyprice2009)/dailyprice2009, 4))*100) + '%'       
        lg9_8 = str((round((dailyprice2009-dailyprice2008)/dailyprice2008, 4))*100) + '%'
        lg8_7 = str((round((dailyprice2008-dailyprice2007)/dailyprice2007, 4))*100) + '%'
        lg7_6 = str((round((dailyprice2007-dailyprice2006)/dailyprice2006, 4))*100) + '%'
        
        
        
        #https://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=html&date=20200701&stockNo=2330
        
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs06 = models.Stock6Sign202006.objects.get(cStockID = mess)
            s6score = signs06.cAverageScore
            s6sign1 = signs06.cSign1
            s6sign2 = signs06.cSign2
            s6sign3 = signs06.cSign3
            s6sign4 = signs06.cSign4
            s6sign5 = signs06.cSign5
            s6sign6 = signs06.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s6score = None
            s6sign1 = None
            s6sign2 = None
            s6sign3 = None
            s6sign4 = None
            s6sign5 = None
            s6sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq2 = models.Stock6Sign2020Q2.objects.get(cStockID = mess)
            q2score = signsq2.cAverageScore
            q2sign1 = signsq2.cSign1
            q2sign2 = signsq2.cSign2
            q2sign3 = signsq2.cSign3
            q2sign4 = signsq2.cSign4
            q2sign5 = signsq2.cSign5
            q2sign6 = signsq2.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q2score = None
            q2sign2 = None
            q2sign3 = None
            q2sign4 = None
            q2sign5 = None
            q2sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs08 = models.Stock6Sign202008.objects.get(cStockID = mess)
            s8score = signs08.cAverageScore
            s8sign1 = signs08.cSign1
            s8sign2 = signs08.cSign2
            s8sign3 = signs08.cSign3
            s8sign4 = signs08.cSign4
            s8sign5 = signs08.cSign5
            s8sign6 = signs08.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s8score = None
            s8sign1 = None
            s8sign2 = None
            s8sign3 = None
            s8sign4 = None
            s8sign5 = None
            s8sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs09 = models.Stock6Sign202009.objects.get(cStockID = mess)
            s9score = signs09.cAverageScore
            s9sign1 = signs09.cSign1
            s9sign2 = signs09.cSign2
            s9sign3 = signs09.cSign3
            s9sign4 = signs09.cSign4
            s9sign5 = signs09.cSign5
            s9sign6 = signs09.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s9score = None
            s9sign1 = None
            s9sign2 = None
            s9sign3 = None
            s9sign4 = None
            s9sign5 = None
            s9sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq3 = models.Stock6Sign2020Q3.objects.get(cStockID = mess)
            q3score = signsq3.cAverageScore
            q3sign1 = signsq3.cSign1
            q3sign2 = signsq3.cSign2
            q3sign3 = signsq3.cSign3
            q3sign4 = signsq3.cSign4
            q3sign5 = signsq3.cSign5
            q3sign6 = signsq3.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q3score = None
            q3sign1 = None
            q3sign2 = None
            q3sign3 = None
            q3sign4 = None
            q3sign5 = None
            q3sign6 = None
   

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs11 = models.Stock6Sign202011.objects.get(cStockID = mess)
            s11score = signs11.cAverageScore
            s11sign1 = signs11.cSign1
            s11sign2 = signs11.cSign2
            s11sign3 = signs11.cSign3
            s11sign4 = signs11.cSign4
            s11sign5 = signs11.cSign5
            s11sign6 = signs11.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s11score = None
            s11sign1 = None
            s11sign2 = None
            s11sign3 = None
            s11sign4 = None
            s11sign5 = None
            s11sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq4 = models.Stock6Sign2020Q4.objects.get(cStockID = mess)
            q4score = signsq4.cAverageScore
            q4sign1 = signsq4.cSign1
            q4sign2 = signsq4.cSign2
            q4sign3 = signsq4.cSign3
            q4sign4 = signsq4.cSign4
            q4sign5 = signsq4.cSign5
            q4sign6 = signsq4.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q4score = None
            q4sign1 = None
            q4sign2 = None
            q4sign3 = None
            q4sign4 = None
            q4sign5 = None
            q4sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs01 = models.Stock6Sign202101.objects.get(cStockID = mess)
            s1score = signs01.cAverageScore
            s1sign1 = signs01.cSign1
            s1sign2 = signs01.cSign2
            s1sign3 = signs01.cSign3
            s1sign4 = signs01.cSign4
            s1sign5 = signs01.cSign5
            s1sign6 = signs01.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s1score = None
            s1sign1 = None
            s1sign2 = None
            s1sign3 = None
            s1sign4 = None
            s1sign5 = None
            s1sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs02 = models.Stock6Sign202102.objects.get(cStockID = mess)
            s2score = signs02.cAverageScore
            s2sign1 = signs02.cSign1
            s2sign2 = signs02.cSign2
            s2sign3 = signs02.cSign3
            s2sign4 = signs02.cSign4
            s2sign5 = signs02.cSign5
            s2sign6 = signs02.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2score = None
            s2sign1 = None
            s2sign2 = None
            s2sign3 = None
            s2sign4 = None
            s2sign5 = None
            s2sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs03 = models.Stock6Sign202103.objects.get(cStockID = mess)
            s3score = signs03.cAverageScore
            s3sign1 = signs03.cSign1
            s3sign2 = signs03.cSign2
            s3sign3 = signs03.cSign3
            s3sign4 = signs03.cSign4
            s3sign5 = signs03.cSign5
            s3sign6 = signs03.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s3score = None
            s3sign1 = None
            s3sign2 = None
            s3sign3 = None
            s3sign4 = None
            s3sign5 = None
            s3sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs04 = models.Stock6Sign202104.objects.get(cStockID = mess)
            s4score = signs04.cAverageScore
            s4sign1 = signs04.cSign1
            s4sign2 = signs04.cSign2
            s4sign3 = signs04.cSign3
            s4sign4 = signs04.cSign4
            s4sign5 = signs04.cSign5
            s4sign6 = signs04.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s4score = None
            s4sign1 = None
            s4sign2 = None
            s4sign3 = None
            s4sign4 = None
            s4sign5 = None
            s4sign6 = None    

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs05 = models.Stock6Sign202105.objects.get(cStockID = mess)
            s5score = signs05.cAverageScore
            s5sign1 = signs05.cSign1
            s5sign2 = signs05.cSign2
            s5sign3 = signs05.cSign3
            s5sign4 = signs05.cSign4
            s5sign5 = signs05.cSign5
            s5sign6 = signs05.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s5score = None
            s5sign1 = None
            s5sign2 = None
            s5sign3 = None
            s5sign4 = None
            s5sign5 = None
            s5sign6 = None 

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs06 = models.Stock6Sign202106.objects.get(cStockID = mess)
            s2106score = signs06.cAverageScore
            s2106sign1 = signs06.cSign1
            s2106sign2 = signs06.cSign2
            s2106sign3 = signs06.cSign3
            s2106sign4 = signs06.cSign4
            s2106sign5 = signs06.cSign5
            s2106sign6 = signs06.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2106score = None
            s2106sign1 = None
            s2106sign2 = None
            s2106sign3 = None
            s2106sign4 = None
            s2106sign5 = None
            s2106sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs07 = models.Stock6Sign202107.objects.get(cStockID = mess)
            s2107score = signs07.cAverageScore
            s2107sign1 = signs07.cSign1
            s2107sign2 = signs07.cSign2
            s2107sign3 = signs07.cSign3
            s2107sign4 = signs07.cSign4
            s2107sign5 = signs07.cSign5
            s2107sign6 = signs07.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2107score = None
            s2107sign1 = None
            s2107sign2 = None
            s2107sign3 = None
            s2107sign4 = None
            s2107sign5 = None
            s2107sign6 = None
    else:
        mess = "N/A"

        s2107score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOne.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6getOneAdmin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容


        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        stock_name =func2.GetStockName(mess) 


        #############存取過去每個月資料庫資料#####################################

        
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs01 = models.Stock6Sign202101.objects.get(cStockID = mess)
            s1score = signs01.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s1score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs02 = models.Stock6Sign202102.objects.get(cStockID = mess)
            s2score = signs02.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs03 = models.Stock6Sign202103.objects.get(cStockID = mess)
            s3score = signs03.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s3score = 'N/A'            


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs04 = models.Stock6Sign202104.objects.get(cStockID = mess)
            s4score = signs04.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s4score = 'N/A'  

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs05 = models.Stock6Sign202105.objects.get(cStockID = mess)
            s5score = signs05.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s5score = 'N/A' 

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2106 = models.Stock6Sign202106.objects.get(cStockID = mess)
            s2106score = signs2106.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2106score = 'N/A' 
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2107 = models.Stock6Sign202107.objects.get(cStockID = mess)
            s2107score = signs2107.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2107score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2108 = models.Stock6Sign202108.objects.get(cStockID = mess)
            s2108score = signs2108.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2108score = 'N/A'



        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2109 = models.Stock6Sign202109.objects.get(cStockID = mess)
            s2109score = signs2109.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2109score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2110 = models.Stock6Sign202110.objects.get(cStockID = mess)
            s2110score = signs2110.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2110score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2111 = models.Stock6Sign202111.objects.get(cStockID = mess)
            s2111score = signs2111.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2111score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2112 = models.Stock6Sign202112.objects.get(cStockID = mess)
            s2112score = signs2112.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2112score = 'N/A'
            
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2201 = models.Stock6Sign202201.objects.get(cStockID = mess)
            s2201score = signs2201.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2201score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2202 = models.Stock6Sign202202.objects.get(cStockID = mess)
            s2202score = signs2202.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            s2202score = 'N/A'
            
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2203 = models.Stock6Sign202203.objects.get(cStockID = mess)
            s2203score = signs2203.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2203score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2204 = models.Stock6Sign202204.objects.get(cStockID = mess)
            s2204score = signs2204.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2204score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2205 = models.Stock6Sign202205.objects.get(cStockID = mess)
            s2205score = signs2205.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2205score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2206 = models.Stock6Sign202206.objects.get(cStockID = mess)
            s2206score = signs2206.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2206score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2207 = models.Stock6Sign202207.objects.get(cStockID = mess)
            s2207score = signs2207.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2207score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2208 = models.Stock6Sign202208.objects.get(cStockID = mess)
            s2208score = signs2208.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2208score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2209 = models.Stock6Sign202209.objects.get(cStockID = mess)
            s2209score = signs2209.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2209score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2210 = models.Stock6Sign202210.objects.get(cStockID = mess)
            s2210score = signs2210.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2210score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2211 = models.Stock6Sign202211.objects.get(cStockID = mess)
            s2211score = signs2211.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2211score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2212 = models.Stock6Sign202212.objects.get(cStockID = mess)
            s2212score = signs2212.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2212score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2301 = models.Stock6Sign202301.objects.get(cStockID = mess)
            s2301score = signs2301.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2301score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2302 = models.Stock6Sign202302.objects.get(cStockID = mess)
            s2302score = signs2302.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2302score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2303 = models.Stock6Sign202303.objects.get(cStockID = mess)
            s2303score = signs2303.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2303score = 'N/A'
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2304 = models.Stock6Sign202304.objects.get(cStockID = mess)
            s2304score = signs2304.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2304score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2305 = models.Stock6Sign202305.objects.get(cStockID = mess)
            s2305score = signs2305.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2305score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2306 = models.Stock6Sign202306.objects.get(cStockID = mess)
            s2306score = signs2306.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2306score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2307 = models.Stock6Sign202307.objects.get(cStockID = mess)
            s2307score = signs2307.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2307score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2308 = models.Stock6Sign202308.objects.get(cStockID = mess)
            s2308score = signs2308.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2308score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2309 = models.Stock6Sign202309.objects.get(cStockID = mess)
            s2309score = signs2309.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2309score = 'N/A'
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2310 = models.Stock6Sign202310.objects.get(cStockID = mess)
            s2310score = signs2310.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2310score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2311 = models.Stock6Sign202311.objects.get(cStockID = mess)
            s2311score = signs2311.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2311score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2312 = models.Stock6Sign202312.objects.get(cStockID = mess)
            s2312score = signs2312.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2312score = 'N/A'
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2401 = models.Stock6Sign202401.objects.get(cStockID = mess)
            s2401score = signs2401.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2401score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2402 = models.Stock6Sign202402.objects.get(cStockID = mess)
            s2402score = signs2402.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2402score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2403 = models.Stock6Sign202403.objects.get(cStockID = mess)
            s2403score = signs2403.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2403score = 'N/A'
###############################################################
            ########寫入資料庫########################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signs = models.Stock6Sign202404.objects.get(cStockID=mess)
            #signs.sCore2006 = s6score
            #signs.sCore20Q2 = q2score
            #signs.sCore2008 = s8score
            #signs.sCore2009 = s9score 
            #signs.sCore20Q3 = q3score             
            #signs.sCore2011 = s11score 
            #signs.sCore20Q4 = q4score 
            #signs.sCore2101 = s1score 
            #signs.sCore2102 = s2score  
            #signs.sCore2103 = s3score 
            #signs.sCore2104 = s4score 
            #signs.sCore2105 = s5score 
            #signs.sCore2106 = s2106score  #改名稱 加年份
            #signs.sCore2107 = s2107score  #改名稱 加年份
            #signs.sCore2108 = s2108score  #改名稱 加年份
            #signs.sCore2109 = s2109score  #改名稱 加年份
            signs.sCore2110 = s2110score  #改名稱 加年份   
            signs.sCore2111 = s2111score  #改名稱 加年份 
            signs.sCore2112 = s2112score  #改名稱 加年份 
            signs.sCore2201 = s2201score  #改名稱 加年份 
            signs.sCore2202 = s2202score  #改名稱 加年份 
            signs.sCore2203 = s2203score  #改名稱 加年份 
            signs.sCore2204 = s2204score  #改名稱 加年份 
            signs.sCore2205 = s2205score  #改名稱 加年份 
            signs.sCore2206 = s2206score  #改名稱 加年份 
            signs.sCore2207 = s2207score  #改名稱 加年份 
            signs.sCore2208 = s2208score  #改名稱 加年份 
            signs.sCore2209 = s2209score  #改名稱 加年份 
            signs.sCore2210 = s2210score  #改名稱 加年份            
            signs.sCore2211 = s2211score  #改名稱 加年份
            signs.sCore2212 = s2212score  #改名稱 加年份
            signs.sCore2301 = s2301score  #改名稱 加年份
            signs.sCore2302 = s2302score  #改名稱 加年份
            signs.sCore2303 = s2303score  #改名稱 加年份
            signs.sCore2304 = s2304score  #改名稱 加年份
            signs.sCore2305 = s2305score  #改名稱 加年份
            signs.sCore2306 = s2306score  #改名稱 加年份
            signs.sCore2307 = s2307score  #改名稱 加年份            
            signs.sCore2308 = s2308score  #改名稱 加年份  
            signs.sCore2309 = s2309score  #改名稱 加年份  
            signs.sCore2310 = s2310score  #改名稱 加年份  
            signs.sCore2311 = s2311score  #改名稱 加年份  
            signs.sCore2312 = s2312score  #改名稱 加年份              
            signs.sCore2401 = s2401score  #改名稱 加年份 
            signs.sCore2402 = s2402score  #改名稱 加年份 
            signs.sCore2403 = s2403score  #改名稱 加年份 
            signs.save() 
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存   #, sCore2006=s6score, sCore20Q2=q2score, sCore2008=s8score, sCore2009=s9score, sCore20Q3=q3score, sCore2011=s11score, sCore20Q4=q4score, 
            signs = models.Stock6Sign202404.objects.create(cStockID=mess, cStockName=stock_name, sCore2109=s2109score, sCore2110=s2110score, sCore2111=s2111score, sCore2112=s2112score, sCore2201=s2201score, sCore2202=s2202score, sCore2203=s2203score, sCore2204=s2204score, sCore2205=s2205score, sCore2206=s2206score, sCore2207=s2207score, sCore2208=s2208score, sCore2209=s2209score, sCore2210=s2210score, sCore2211=s2211score, sCore2212=s2212score, sCore2301=s2301score, sCore2302=s2302score, sCore2303=s2303score, sCore2304=s2304score, sCore2305=s2305score, sCore2306=s2306score, sCore2307=s2307score, sCore2308=s2308score, sCore2309=s2309score, sCore2310=s2310score, sCore2311=s2311score, sCore2312=s2312score, sCore2401=s2401score, sCore2402=s2402score, sCore2403=s2403score)
            signs.save() 

    else:
        mess = "N/A"

        s2301score = "N/A"        
        s2212score = "N/A"
        s2211score = "N/A"
        s2210score = "N/A"
        s2209score = "N/A"
        s2208score = "N/A"
        s2207score = "N/A"
        s2206score = "N/A"
        s2205score = "N/A"
        s2204score = "N/A"
        s2203score = "N/A"
        s2202score = "N/A"
        s2201score = "N/A"
        s2112score = "N/A"
        s2111score = "N/A"
        s2110score = "N/A"
        s2109score = "N/A"
        s2108score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOneAdmin.html", locals())



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6getOnexAdmin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容


        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        stock_name =func2.GetStockName(mess) 


        #############存取過去每個月資料庫資料#####################################


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2206 = models.Stock6Sign202206.objects.get(cStockID = mess)
            s2206score = signs2206.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2206score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2207 = models.Stock6Sign202207.objects.get(cStockID = mess)
            s2207score = signs2207.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2207score = 'N/A'
###############################################################
            ########寫入資料庫########################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signs = models.Stock6Sign202209.objects.get(cStockID=mess)
            #signs.sCore2006 = s6score

            #signs.sCore2205 = s2205score  #改名稱 加年份 
            signs.sCore2206 = s2206score  #改名稱 加年份 
            signs.sCore2207 = s2207score  #改名稱 加年份 
            
            signs.save() 
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存   #, sCore2006=s6score, sCore20Q2=q2score, sCore2008=s8score, sCore2009=s9score, sCore20Q3=q3score, sCore2011=s11score, sCore20Q4=q4score, 
            signs = models.Stock6Sign202209.objects.create(cStockID=mess, cStockName=stock_name, sCore2206=s2206score, sCore2207=s2207score)

            #signs = models.Stock6Sign202209.objects.create(cStockID=mess, cStockName=stock_name, sCore2101=s1score, sCore2102=s2score, sCore2103=s3score, sCore2104=s4score, sCore2105=s5score, sCore2106=s2106score, sCore2107=s2107score, sCore2108=s2108score, sCore2109=s2109score, sCore2110=s2110score, sCore2111=s2111score, sCore2112=s2112score, sCore2201=s2201score, sCore2202=s2202score, sCore2203=s2203score, sCore2204=s2204score, sCore2205=s2205score, sCore2206=s2206score, sCore2207=s2207score)
            signs.save() 

    else:
        mess = "N/A"

        s2207score = "N/A"
        s2206score = "N/A"
        s2205score = "N/A"

        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOnexAdmin.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6getOneH2VAdmin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['vstockid']  #取得表單輸入內容
        
        vstockname = request.POST['vstockname'] 
        vnewestseason  = request.POST['vnewestseason'] 
        vnewestmonth  = request.POST['vnewestmonth']
        vindi1 =  request.POST['vindi1']
        vindi2 =  request.POST['vindi2']
        vindi3 =  request.POST['vindi3']
        vindi4 =  request.POST['vindi4']
        vindi5 =  request.POST['vindi5']
        vindi6 =  request.POST['vindi6']
        
        vscoreaverage =  request.POST['vscoreaverage'] 
        vgainloss =  request.POST['vgainloss']  
       
        past1mScore = request.POST['past1mscore']
        past2mScore = request.POST['past2mscore']
        past3mScore = request.POST['past3mscore']
        past4mScore = request.POST['past4mscore']
        past5mScore = request.POST['past5mscore']

        past6mScore = request.POST['past6mscore']
        past7mScore = request.POST['past7mscore']
        past8mScore = request.POST['past8mscore']
        past9mScore = request.POST['past9mscore']
        past10mScore = request.POST['past10mscore']

        #未完成
        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        
        
        #stock_name =func2.GetStockName(mess) 
################################################################
        '''
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cStockID = mess
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cStockID = 'N/A'        
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cStockName = vstockname
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cStockName = 'N/A'      

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cNewestSeason = vnewestseason
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cNewestSeason = 'N/A'      

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cNewestMonth = vnewestmonth
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cNewestMonth = 'N/A' 
###########################################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin1 = vindi1
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign1 = 'N/A' 
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin2 = vindi2
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign2 = 'N/A' 
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin3 = vindi3
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign3 = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin4 = vindi4
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign4 = 'N/A' 
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin5 = vindi5
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign5 = 'N/A' 
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cSgin6 = vindi6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cSign6 = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cAverageScore = vscoreaverage
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cAverageScore = 'N/A'
    
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cLossGain = vgainloss
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            cLossGain = 'N/A'
            '''
##########################################################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2110score = past10mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2110score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2111score = past9mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2111score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2112score = past8mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2112score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2201score = past7mScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2201score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2202score = past6mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2202score = 'N/A'


##############            
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2203score = past5mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2203score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2204score = past4mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2204score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2205score = past3mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2205score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2206score = past2mScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2206score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2207score = past1mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2207score = 'N/A'

###############################################################
            ########寫入資料庫########################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signs = models.Stock6Sign202208.objects.get(cStockID=mess)
            
            signs.cStockID = mess
            signs.cStockName = vstockname
            signs.cNewestSeason = vnewestseason
            signs.cNewestRev = vnewestmonth
            signs.cSign1 = vindi1
            signs.cSign2 = vindi2
            signs.cSign3 = vindi3
            signs.cSign4 = vindi4
            signs.cSign5 = vindi5
            signs.cSign6 = vindi6
            signs.cAverageScore = vscoreaverage
            signs.cLossGain = vgainloss

            signs.sCore2110 = s2110score  #改名稱 加年份 
            signs.sCore2111 = s2111score  #改名稱 加年份 
            signs.sCore2112 = s2112score  #改名稱 加年份 
            signs.sCore2201 = s2201score  #改名稱 加年份 
            signs.sCore2202 = s2202score  #改名稱 加年份 


            signs.sCore2203 = s2203score  #改名稱 加年份 
            signs.sCore2204 = s2204score  #改名稱 加年份 
            signs.sCore2205 = s2205score  #改名稱 加年份 
            signs.sCore2206 = s2206score  #改名稱 加年份 
            signs.sCore2207 = s2207score  #改名稱 加年份 
            
            signs.save() 
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            
            signs = models.Stock6Sign202208.objects.create(cStockID=mess, cStockName = vstockname, cNewestSeason = vnewestseason, cNewestRev = vnewestmonth, cSign1 = vindi1, cSign2 = vindi2, cSign3 = vindi3, cSign4 = vindi4, cSign5 = vindi5, cSign6 = vindi6, cAverageScore = vscoreaverage, cLossGain = vgainloss, sCore2110=s2110score, sCore2111=s2111score, sCore2112=s2112score, sCore2201=s2201score, sCore2202=s2202score, sCore2203=s2203score, sCore2204=s2204score, sCore2205=s2205score, sCore2206=s2206score, sCore2207=s2207score)
            signs.save() 

    else:
        mess = "N/A"

        s2207score = "N/A"
        s2206score = "N/A"
        s2205score = "N/A"
        s2204score = "N/A"
        s2203score = "N/A"
        s2202score = "N/A"
        s2201score = "N/A"
        s2112score = "N/A"
        s2111score = "N/A"
        s2110score = "N/A"
        s2109score = "N/A"
        s2108score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOneH2VAdmin.html", locals())




@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6getOneH2V2Admin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['vstockid']  #取得表單輸入內容
        
        vstockname = request.POST['vstockname'] 
        vnewestseason  = request.POST['vnewestseason'] 
        vnewestmonth  = request.POST['vnewestmonth']
        vindi1 =  request.POST['vindi1']
        vindi2 =  request.POST['vindi2']
        vindi3 =  request.POST['vindi3']
        vindi4 =  request.POST['vindi4']
        vindi5 =  request.POST['vindi5']
        vindi6 =  request.POST['vindi6']
        
        vscoreaverage =  request.POST['vscoreaverage'] 
        vgainloss =  request.POST['vgainloss']  
       
        past1mScore = request.POST['past1mscore']
        past2mScore = request.POST['past2mscore']
        past3mScore = request.POST['past3mscore']
        past4mScore = request.POST['past4mscore']
        past5mScore = request.POST['past5mscore']

        past6mScore = request.POST['past6mscore']
        past7mScore = request.POST['past7mscore']
        past8mScore = request.POST['past8mscore']
        past9mScore = request.POST['past9mscore']
        past10mScore = request.POST['past10mscore']


##########################################################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2110score = past9mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2110score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2111score = past8mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2111score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2112score = past7mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2112score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2201score = past6mScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2201score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2202score = past5mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2202score = 'N/A'
##############            
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2203score = past4mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2203score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2204score = past3mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2204score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2205score = past2mScore
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2205score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            s2206score = past1mScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2206score = 'N/A'
            
        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #s2207score = past1mScore
            
        #except:  #針對沒有的股票，抓取資料存入資料庫
            
            #s2207score = 'N/A'

###############################################################
            ########寫入資料庫########################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signs = models.Stock6Sign202207.objects.get(cStockID=mess)
            
            signs.cStockID = mess
            signs.cStockName = vstockname
            signs.cNewestSeason = vnewestseason
            signs.cNewestRev = vnewestmonth
            signs.cSign1 = vindi1
            signs.cSign2 = vindi2
            signs.cSign3 = vindi3
            signs.cSign4 = vindi4
            signs.cSign5 = vindi5
            signs.cSign6 = vindi6
            signs.cAverageScore = vscoreaverage
            signs.cLossGain = vgainloss
            
            #signs.sCore2109 = s2109score  #改名稱 加年份 
            signs.sCore2110 = s2110score  #改名稱 加年份 
            signs.sCore2111 = s2111score  #改名稱 加年份 
            signs.sCore2112 = s2112score  #改名稱 加年份 
            signs.sCore2201 = s2201score  #改名稱 加年份 
            signs.sCore2202 = s2202score  #改名稱 加年份 


            signs.sCore2203 = s2203score  #改名稱 加年份 
            signs.sCore2204 = s2204score  #改名稱 加年份 
            signs.sCore2205 = s2205score  #改名稱 加年份 
            signs.sCore2206 = s2206score  #改名稱 加年份 
            #signs.sCore2207 = s2207score  #改名稱 加年份 
            
            signs.save() 
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            
            signs = models.Stock6Sign202207.objects.create(cStockID=mess, cStockName = vstockname, cNewestSeason = vnewestseason, cNewestRev = vnewestmonth, cSign1 = vindi1, cSign2 = vindi2, cSign3 = vindi3, cSign4 = vindi4, cSign5 = vindi5, cSign6 = vindi6, cAverageScore = vscoreaverage, cLossGain = vgainloss, sCore2110=s2110score, sCore2111=s2111score, sCore2112=s2112score, sCore2201=s2201score, sCore2202=s2202score, sCore2203=s2203score, sCore2204=s2204score, sCore2205=s2205score, sCore2206=s2206score)#, sCore2207=s2207score)
            signs.save() 

    else:
        mess = "N/A"

        #s2207score = "N/A"
        s2206score = "N/A"
        s2205score = "N/A"
        s2204score = "N/A"
        s2203score = "N/A"
        s2202score = "N/A"
        s2201score = "N/A"
        s2112score = "N/A"
        s2111score = "N/A"
        s2110score = "N/A"
        s2109score = "N/A"
        s2108score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOneH2V2Admin.html", locals())