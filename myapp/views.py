from django.shortcuts import render, redirect
from django.http import HttpResponse
#from django.conf import settings
#from django.http import HttpResponseBadRequest, HttpResponseForbidden
from django.views.decorators.csrf import csrf_exempt
from module import func0
from module import func
from module import func2
from module import func2x
from module import func2t
from module import func3
from module import func3x
from module import func4
from module import func4x
from module import func5
from module import func5x2
from module import func6
from module import func7
from module import func8
##################函式位置改寫，一個函式一個檔案，棄用func
from module_PERseg import Price5yDB, Price5y, PERseg, PERsegPEG, PERsegPEGxDB, PERsegStable, PERsegx, PERsegxDB, NetCapDB, PERseg3
from module_Kn import KnQuery, Kn8yPrice

#################
from django.contrib.auth import authenticate
from django.contrib import auth
from django.contrib.auth.models import User

from myapp.models import Stock6Sign
from myapp.models import StockPERseg

from myapp.models import DCStock6Sign202011
from myapp.models import DCStock6Sign2020Q4
from myapp.models import DCStock6Sign202101
from myapp.models import DCStock6Sign202102
from myapp.models import DCStock6Sign202103
from myapp.models import DCStock6Sign202104
from myapp.models import DCStock6Sign202105
from myapp.models import DCStock6Sign202106
from myapp.models import DCStock6Sign202107
from myapp.models import DCStock6Sign202108
from myapp.models import DCStock6Sign202109
from myapp.models import DCStock6Sign202110
from myapp.models import DCStock6Sign202111
from myapp.models import DCStock6Sign202112


from myapp.models import Stock6Sign202005
from myapp.models import Stock6Sign202006

from myapp.models import Stock6Sign2020Q2
from myapp.models import Stock6Sign202008
from myapp.models import Stock6Sign202009
from myapp.models import Stock6Sign2020Q3
from myapp.models import Stock6Sign202011
from myapp.models import Stock6Sign2020Q4
from myapp.models import Stock6Sign202101
from myapp.models import Stock6Sign202102
from myapp.models import Stock6Sign202103
from myapp.models import Stock6Sign202104
from myapp.models import Stock6Sign202105
from myapp.models import Stock6Sign202106
from myapp.models import Stock6Sign202107
from myapp.models import Stock6Sign202108
from myapp.models import Stock6Sign202109
from myapp.models import Stock6Sign202110
from myapp.models import Stock6Sign202111
from myapp.models import Stock6Sign202112
from myapp.models import Stock6Sign202201
from myapp.models import Stock6Sign202202
from myapp.models import Stock6Sign202203
#from myapp.models import Stock6sta2021
#from myapp.models import Stock6Sign202109
#from myapp.models import Stock6Sign202110
#from myapp.models import Stock6Sign202111
#from myapp.models import Stock6Sign202112



from myapp.models import StockPERseg202005
from myapp.models import StockPERseg202006
from myapp.models import StockPERseg2020Q2
from myapp.models import StockPERseg202008
from myapp.models import StockPERseg202009
from myapp.models import StockPERseg2020Q3
from myapp.models import StockPERseg202011
from myapp.models import StockPERseg2020Q4
from myapp.models import StockPERseg202101
from myapp.models import StockPERseg202102
from myapp.models import StockPERseg202103
from myapp.models import StockPERseg202104
from myapp.models import StockPERseg202105
from myapp.models import StockPERseg202106
from myapp.models import StockPERseg202107
from myapp.models import StockPERseg202108
from myapp.models import StockPERseg202109
from myapp.models import StockPERseg202110
from myapp.models import StockPERseg202111
from myapp.models import StockPERseg202112
from myapp.models import StockPERseg202201
from myapp.models import StockPERseg202202
from myapp.models import StockPERseg202203

from myapp.models import EpsProfit2020Q1
from myapp.models import EpsProfit2020Q2
from myapp.models import EpsProfit2020Q3
from myapp.models import EpsProfit2020Q4
from myapp.models import EpsProfit2021Q1
from myapp.models import EpsProfit2021Q2
from myapp.models import EpsProfit2021Q3
from myapp.models import EpsProfit2021Q4

from myapp.models import StockPERsegStable2020
from myapp.models import StockPERsegStable2020Q2
from myapp.models import StockPERsegStable2020Q3
from myapp.models import StockPERsegStable2020Q3x
from myapp.models import StockPERsegStable2020Q4
from myapp.models import StockPERsegStable2021Q1
from myapp.models import StockPERsegStable2021Q2
from myapp.models import StockPERsegStable2021Q3
from myapp.models import StockPERsegStable2021Q4

from myapp.models import EPSachieve
from myapp.models import EPSachieve2020Q2
from myapp.models import EPSachieve2020Q3
from myapp.models import EPSachieve2021Q1
from myapp.models import EPSachieve2021Q2
from myapp.models import EPSachieve2021Q3

from myapp.models import StockCapVar
from myapp.models import StockCapVar2020Q2
from myapp.models import StockCapVar2020Q3
from myapp.models import StockCapVar2020Q4
from myapp.models import StockCapVar2021Q1
from myapp.models import StockCapVar2021Q2
from myapp.models import StockCapVar2021Q3
from myapp.models import StockCapVar2021Q4

from myapp.models import SubCats202011
from myapp.models import SubCats202102
from myapp.models import SubCats202103
from myapp.models import SubCats202104
from myapp.models import SubCats202105
from myapp.models import SubCats202106
from myapp.models import SubCats202107
from myapp.models import SubCats202108
from myapp.models import SubCats202109
from myapp.models import SubCats202110
from myapp.models import SubCats202111
from myapp.models import SubCats202112

from myapp.models import StockFavs_test168
from myapp.models import StockFavDB

from myapp.models import PriEPSPER_DB

#from django.contrib.auth.decorators import login_required
from django.contrib.auth.decorators import permission_required

# Create your views here.
#################################判斷是否為數字的自創函數
def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        pass
 
    try:
        import unicodedata
        unicodedata.numeric(s)
        return True
    except (TypeError, ValueError):
        pass
 
    return False
####################################台股代號
tseotc_dict = {'台泥': '1101', '亞泥': '1102', '嘉泥': '1103', '環泥': '1104', '幸福': '1108', '信大': '1109', '東泥': '1110', '味全': '1201', '味王': '1203', '大成': '1210', '大飲': '1213', '卜蜂': '1215', '統一': '1216', '愛之味': '1217', '泰山': '1218', '福壽': '1219', '台榮': '1220', '福懋油': '1225', '佳格': '1227', '聯華': '1229', '聯華食': '1231', '大統益': '1232', '天仁': '1233', '黑松': '1234', '興泰': '1235', '宏亞': '1236', '鮮活果汁-KY': '1256', '台塑': '1301', '南亞': '1303', '台聚': '1304', '華夏': '1305', '三芳': '1307', '亞聚': '1308', '台達化': '1309', '台苯': '1310', '國喬': '1312', '聯成': '1313', '中石化': '1314', '達新': '1315', '上曜': '1316', '東陽': '1319', '大洋': '1321', '永裕': '1323', '地球': '1324', '恆大': '1325', '台化': '1326', '再生-KY': '1337', '廣華-KY': '1338', '昭輝': '1339', '勝悅-KY': '1340', '富林-KY': '1341', '八貫': '1342', '遠東新': '1402', '新纖': '1409', '南染': '1410', '宏洲': '1413', '東和': '1414', '廣豐': '1416', '嘉裕': '1417', '東華': '1418', '新紡': '1419', '利華': '1423', '大魯閣': '1432', '福懋': '1434', '中福': '1435', '華友聯': '1436', '勤益控': '1437', '三地開發': '1438', '中和': '1439', '南紡': '1440', '大東': '1441', '名軒': '1442', '立益': '1443', '力麗': '1444', '大宇': '1445', '宏和': '1446', '力鵬': '1447', '佳和': '1449', '年興': '1451', '宏益': '1452', '大將': '1453', '台富': '1454', '集盛': '1455', '怡華': '1456', '宜進': '1457', '聯發': '1459', '宏遠': '1460', '強盛': '1463', '得力': '1464', '偉全': '1465', '聚隆': '1466', '南緯': '1467', '昶和': '1468', '大統新創': '1470', '首利': '1471', '三洋紡': '1472', '台南': '1473', '弘裕': '1474', '業旺': '1475', '儒鴻': '1476', '聚陽': '1477', '士電': '1503', '東元': '1504', '正道': '1506', '永大': '1507', '瑞利': '1512', '中興電': '1513', '亞力': '1514', '力山': '1515', '川飛': '1516', '利奇': '1517', '華城': '1519', '大億': '1521', '堤維西': '1522', '耿鼎': '1524', '江申': '1525', '日馳': '1526', '鑽全': '1527', '恩德': '1528', '樂士': '1529', '亞崴': '1530', '高林股': '1531', '勤美': '1532', '車王電': '1533', '中宇': '1535', '和大': '1536', '廣隆': '1537', '正峰': '1538', '巨庭': '1539', '喬福': '1540', '錩泰': '1541', '伸興': '1558', '中砂': '1560', '倉佑': '1568', '信錦': '1582', '程泰': '1583', '吉茂': '1587', '永冠-KY': '1589', '亞德客-KY': '1590', '英瑞-KY': '1592', '直得': '1597', '岱宇': '1598', '華電': '1603', '聲寶': '1604', '華新': '1605', '華榮': '1608', '大亞': '1609', '中電': '1611', '宏泰': '1612', '三洋電': '1614', '大山': '1615', '億泰': '1616', '榮星': '1617', '合機': '1618', '艾美特-KY': '1626', '中化': '1701', '南僑': '1702', '葡萄王': '1707', '東鹼': '1708', '和益': '1709', '東聯': '1710', '永光': '1711', '興農': '1712', '國化': '1713', '和桐': '1714', '長興': '1717', '中纖': '1718', '生達': '1720', '三晃': '1721', '台肥': '1722', '中碳': '1723', '台硝': '1724', '元禎': '1725', '永記': '1726', '中華化': '1727', '花仙子': '1730', '美吾華': '1731', '毛寶': '1732', '五鼎': '1733', '杏輝': '1734', '日勝化': '1735', '喬山': '1736', '臺鹽': '1737', '寶齡富錦': '1760', '中化生': '1762', '勝一': '1773', '展宇': '1776', '和康生': '1783', '科妍': '1786', '神隆': '1789', '美時': '1795', '台玻': '1802', '寶徠': '1805', '冠軍': '1806', '潤隆': '1808', '中釉': '1809', '和成': '1810', '凱撒衛': '1817', '士紙': '1903', '正隆': '1904', '華紙': '1905', '寶隆': '1906', '永豐餘': '1907', '榮成': '1909', '中鋼': '2002', '東和鋼鐵': '2006', '燁興': '2007', '高興昌': '2008', '第一銅': '2009', '春源': '2010', '春雨': '2012', '中鋼構': '2013', '中鴻': '2014', '豐興': '2015', '官田鋼': '2017', '美亞': '2020', '聚亨': '2022', '燁輝': '2023', '志聯': '2024', '千興': '2025', '大成鋼': '2027', '威致': '2028', '盛餘': '2029', '彰源': '2030', '新光鋼': '2031', '新鋼': '2032', '佳大': '2033', '允強': '2034', '海光': '2038', '上銀': '2049', '川湖': '2059', '橋椿': '2062', '運錩': '2069', '南港': '2101', '泰豐': '2102', '台橡': '2103', '國際中橡': '2104', '正新': '2105', '建大': '2106', '厚生': '2107', '南帝': '2108', '華豐': '2109', '鑫永銓': '2114', '六暉-KY': '2115', '裕隆': '2201', '中華': '2204', '三陽工業': '2206', '和泰車': '2207', '台船': '2208', '裕日車': '2227', '劍麟': '2228', '為升': '2231', '宇隆': '2233', '百達-KY': '2236', '英利-KY': '2239', '艾姆勒': '2241', '宏旭-KY': '2243', '汎德永業': '2247', '光寶科': '2301', '麗正': '2302', '聯電': '2303', '全友': '2305', '台達電': '2308', '金寶': '2312', '華通': '2313', '台揚': '2314', '楠梓電': '2316', '鴻海': '2317', '東訊': '2321', '中環': '2323', '仁寶': '2324', '國巨': '2327', '廣宇': '2328', '華泰': '2329', '台積電': '2330', '精英': '2331', '友訊': '2332', '旺宏': '2337', '光罩': '2338', '光磊': '2340', '茂矽': '2342', '華邦電': '2344', '智邦': '2345', '聯強': '2347', '海悅': '2348', '錸德': '2349', '順德': '2351', '佳世達': '2352', '宏碁': '2353', '鴻準': '2354', '敬鵬': '2355', '英業達': '2356', '華碩': '2357', '廷鑫': '2358', '所羅門': '2359', '致茂': '2360', '藍天': '2362', '矽統': '2363', '倫飛': '2364', '昆盈': '2365', '燿華': '2367', '金像電': '2368', '菱生': '2369', '大同': '2371', '震旦行': '2373', '佳能': '2374', '凱美': '2375', '技嘉': '2376', '微星': '2377', '瑞昱': '2379', '虹光': '2380', '廣達': '2382', '台光電': '2383', '群光': '2385', '精元': '2387', '威盛': '2388', '云辰': '2390', '正崴': '2392', '億光': '2393', '研華': '2395', '友通': '2397', '映泰': '2399', '凌陽': '2401', '毅嘉': '2402', '漢唐': '2404', '浩鑫': '2405', '國碩': '2406', '南亞科': '2408', '友達': '2409', '中華電': '2412', '環科': '2413', '精技': '2414', '錩新': '2415', '圓剛': '2417', '仲琦': '2419', '新巨': '2420', '建準': '2421', '固緯': '2423', '隴華': '2424', '承啟': '2425', '鼎元': '2426', '三商電': '2427', '興勤': '2428', '銘旺科': '2429', '燦坤': '2430', '聯昌': '2431', '互盛電': '2433', '統懋': '2434', '偉詮電': '2436', '翔耀': '2438', '美律': '2439', '太空梭': '2440', '超豐': '2441', '新美齊': '2442', '億麗': '2443', '兆勁': '2444', '京元電子': '2449', '神腦': '2450', '創見': '2451', '凌群': '2453', '聯發科': '2454', '全新': '2455', '奇力新': '2456', '飛宏': '2457', '義隆': '2458', '敦吉': '2459', '建通': '2460', '光群雷': '2461', '良得電': '2462', '盟立': '2464', '麗臺': '2465', '冠西電': '2466', '志聖': '2467', '華經': '2468', '資通': '2471', '立隆電': '2472', '可成': '2474', '鉅祥': '2476', '美隆電': '2477', '大毅': '2478', '敦陽科': '2480', '強茂': '2481', '連宇': '2482', '百容': '2483', '希華': '2484', '兆赫': '2485', '一詮': '2486', '漢平': '2488', '瑞軒': '2489', '吉祥全': '2491', '華新科': '2492', '揚博': '2493', '普安': '2495', '卓越': '2496', '怡利電': '2497', '宏達電': '2498', '國建': '2501', '國產': '2504', '國揚': '2505', '太設': '2506', '全坤建': '2509', '太子': '2511', '龍邦': '2514', '中工': '2515', '新建': '2516', '冠德': '2520', '京城': '2524', '宏璟': '2527', '皇普': '2528', '華建': '2530', '宏盛': '2534', '達欣工': '2535', '宏普': '2536', '聯上發': '2537', '基泰': '2538', '櫻花建': '2539', '愛山林': '2540', '興富發': '2542', '皇昌': '2543', '皇翔': '2545', '根基': '2546', '日勝生': '2547', '華固': '2548', '潤弘': '2597', '益航': '2601', '長榮': '2603', '新興': '2605', '裕民': '2606', '榮運': '2607', '嘉里大榮': '2608', '陽明': '2609', '華航': '2610', '志信': '2611', '中航': '2612', '中櫃': '2613', '東森': '2614', '萬海': '2615', '山隆': '2616', '台航': '2617', '長榮航': '2618', '亞航': '2630', '台灣高鐵': '2633', '漢翔': '2634', '台驊投控': '2636', '慧洋-KY': '2637', '宅配通': '2642', '萬企': '2701', '華園': '2702', '國賓': '2704', '六福': '2705', '第一店': '2706', '晶華': '2707', '遠雄來': '2712', '夏都': '2722', '美食-KY': '2723', '王品': '2727', '雄獅': '2731', '寒舍': '2739', '雲品': '2748', '彰銀': '2801', '京城銀': '2809', '台中銀': '2812', '旺旺保': '2816', '華票': '2820', '中壽': '2823', '台產': '2832', '臺企銀': '2834', '高雄銀': '2836', '聯邦銀': '2838', '台開': '2841', '遠東銀': '2845', '安泰銀': '2849', '新產': '2850', '中再保': '2851', '第一保': '2852', '統一證': '2855', '三商壽': '2867', '華南金': '2880', '富邦金': '2881', '國泰金': '2882', '開發金': '2883', '玉山金': '2884', '元大金': '2885', '兆豐金': '2886', '台新金': '2887', '新光金': '2888', '國票金': '2889', '永豐金': '2890', '中信金': '2891', '第一金': '2892', '王道銀行': '2897', '欣欣': '2901', '遠百': '2903', '匯僑': '2904', '三商': '2905', '高林': '2906', '特力': '2908', '統領': '2910', '麗嬰房': '2911', '統一超': '2912', '農林': '2913', '潤泰全': '2915', '鼎固-KY': '2923', '淘帝-KY': '2929', '客思達-KY': '2936', '凱羿-KY': '2939', '歐格': '3002', '健和興': '3003', '豐達科': '3004', '神基': '3005', '晶豪科': '3006', '大立光': '3008', '華立': '3010', '今皓': '3011', '晟銘電': '3013', '聯陽': '3014', '全漢': '3015', '嘉晶': '3016', '奇鋐': '3017', '同開': '3018', '亞光': '3019', '鴻名': '3021', '威強電': '3022', '信邦': '3023', '憶聲': '3024', '星通': '3025', '禾伸堂': '3026', '盛達': '3027', '增你強': '3028', '零壹': '3029', '德律': '3030', '佰鴻': '3031', '偉訓': '3032', '威健': '3033', '聯詠': '3034', '智原': '3035', '文曄': '3036', '欣興': '3037', '全台': '3038', '遠見': '3040', '揚智': '3041', '晶技': '3042', '科風': '3043', '健鼎': '3044', '台灣大': '3045', '建碁': '3046', '訊舟': '3047', '益登': '3048', '和鑫': '3049', '鈺德': '3050', '力特': '3051', '夆典': '3052', '立萬利': '3054', '蔚華科': '3055', '總太': '3056', '喬鼎': '3057', '立德': '3058', '華晶科': '3059', '銘異': '3060', '建漢': '3062', '日電貿': '3090', '聯傑': '3094', '一零四': '3130', '耀登': '3138', '正達': '3149', '景岳': '3164', '大量': '3167', '景碩': '3189', '全科': '3209', '晟鈦': '3229', '緯創': '3231', '虹冠電': '3257', '昇陽': '3266', '勝德': '3296', '昇貿': '3305', '聯德': '3308', '閎暉': '3311', '弘憶股': '3312', '同泰': '3321', '泰碩': '3338', '麗清': '3346', '奇偶': '3356', '新日興': '3376', '明泰': '3380', '新世紀': '3383', '玉晶光': '3406', '京鼎': '3413', '融程電': '3416', '譁裕': '3419', '台端': '3432', '榮創': '3437', '創意': '3443', '聯鈞': '3450', '晶睿': '3454', '群創': '3481', '誠研': '3494', '維熹': '3501', '揚明光': '3504', '華擎': '3515', '柏騰': '3518', '安馳': '3528', '晶相光': '3530', '台勝科': '3532', '嘉澤': '3533', '晶彩科': '3535', '誠創': '3536', '州巧': '3543', '敦泰': '3545', '聯穎': '3550', '嘉威': '3557', '牧德': '3563', '聯合再生': '3576', '辛耘': '3583', '通嘉': '3588', '艾笛森': '3591', '力銘': '3593', '智易': '3596', '宏致': '3605', '谷崧': '3607', '碩天': '3617', '洋華': '3622', '達邁': '3645', '健策': '3653', '世芯-KY': '3661', '貿聯-KY': '3665', '圓展': '3669', 'TPK-KY': '3673', '新至陞': '3679', '亞太電': '3682', '達能': '3686', '海華': '3694', '大眾控': '3701', '大聯大': '3702', '欣陸': '3703', '合勤控': '3704', '永信': '3705', '神達': '3706', '上緯投控': '3708', '日月光投控': '3711', '永崴投控': '3712', '富采': '3714', '佳醫': '4104', '雃博': '4106', '懷特': '4108', '旭富': '4119', '亞諾法': '4133', '麗豐-KY': '4137', '龍燈-KY': '4141', '國光生': '4142', '全宇生技-KY': '4148', '訊映': '4155', '承業醫': '4164', '佐登-KY': '4190', '炎洲': '4306', '如興': '4414', '利勤': '4426', '廣越': '4438', '冠星-KY': '4439', '東台': '4526', '瑞智': '4532', '拓凱': '4536', '全球傳動': '4540', '銘鈺': '4545', '智伸科': '4551', '力達-KY': '4552', '氣立': '4555', '永新-KY': '4557', '強信-KY': '4560', '穎漢': '4562', '元翎': '4564', '時碩工業': '4566', '鈞興-KY': '4571', '駐龍': '4572', '大銀微系統': '4576', '光隆精密-KY': '4581', '德淵': '4720', '國精化': '4722', '華廣': '4737', '康普': '4739', '台耀': '4746', '三福化': '4755', '材料-KY': '4763', '雙鍵': '4764', '南寶': '4766', '日成-KY': '4807', '遠傳': '4904', '正文': '4906', '聯德控股-KY': '4912', '致伸': '4915', '事欣科': '4916', '新唐': '4919', '泰鼎-KY': '4927', '燦星網': '4930', '太極': '4934', '茂林-KY': '4935', '和碩': '4938', '嘉彰': '4942', '康控-KY': '4943', '凌通': '4952', '光鋐': '4956', '臻鼎-KY': '4958', '誠美材': '4960', '天鈺': '4961', '十銓': '4967', '立積': '4968', '佳凌': '4976', '眾達-KY': '4977', '榮科': '4989', '傳奇': '4994', '鑫禾': '4999', '三星': '5007', '訊連': '5203', '科嘉-KY': '5215', '東科-KY': '5225', '達興材料': '5234', '乙盛-KY': '5243', '虹堡': '5258', '祥碩': '5269', '禾聯碩': '5283', 'jpp-KY': '5284', '界霖': '5285', '豐祥-KY': '5288', '中磊': '5388', '崇越': '5434', '瀚宇博': '5469', '松翰': '5471', '慧友': '5484', '建國': '5515', '隆大': '5519', '工信': '5521', '遠雄': '5522', '順天': '5525', '鄉林': '5531', '皇鼎': '5533', '長虹': '5534', '東明-KY': '5538', '永固-KY': '5546', '遠雄港': '5607', '四維航': '5608', '鳳凰': '5706', '中租-KY': '5871', '上海商銀': '5876', '合庫金': '5880', '台南-KY': '5906', '大洋-KY': '5907', '群益證': '6005', '群益期': '6024', '競國': '6108', '聚碩': '6112', '鎰勝': '6115', '彩晶': '6116', '迎廣': '6117', '達運': '6120', '上福': '6128', '鈞泰': '6131', '金橋': '6133', '富爾特': '6136', '亞翔': '6139', '柏承': '6141', '友勁': '6142', '百一': '6152', '嘉聯益': '6153', '鈞寶': '6155', '華興': '6164', '捷泰': '6165', '凌華': '6166', '宏齊': '6168', '互億': '6172', '瑞儀': '6176', '達麗': '6177', '關貿': '6183', '大豐電': '6184', '豐藝': '6189', '精成科': '6191', '巨路': '6192', '帆宣': '6196', '佳必琪': '6197', '亞弘電': '6201', '盛群': '6202', '詮欣': '6205', '飛捷': '6206', '今國光': '6209', '聯茂': '6213', '精誠': '6214', '和椿': '6215', '居易': '6216', '聚鼎': '6224', '天瀚': '6225', '光鼎': '6226', '尼得科超眾': '6230', '華孚': '6235', '力成': '6239', '迅杰': '6243', '定穎': '6251', '矽格': '6257', '台郡': '6269', '同欣電': '6271', '宏正': '6277', '台表科': '6278', '全國電': '6281', '康舒': '6282', '淳安': '6283', '啟碁': '6285', '聯嘉': '6288', '華上': '6289', '悅城': '6405', '旭隼': '6409', '群電': '6412', '樺漢': '6414', '矽力-KY': '6415', '瑞祺電通': '6416', '光麗-KY': '6431', '迅得': '6438', '光聖': '6442', '元晶': '6443', '鈺邦': '6449', '訊芯-KY': '6451', 'GIS-KY': '6456', '台數科': '6464', '安集': '6477', '晶碩': '6491', '南六': '6504', '台塑化': '6505', '穎崴': '6515', '捷敏-KY': '6525', '愛普': '6531', '晶心科': '6533', '泰福-KY': '6541', '易華電': '6552', '興能高': '6558', '虹揚-KY': '6573', '研揚': '6579', '鋼聯': '6581', '申豐': '6582', '動力-KY': '6591', '和潤企業': '6592', 'ABC-KY': '6598', '帝寶': '6605', '必應': '6625', '基士德-KY': '6641', '科定': '6655', '羅麗芬-KY': '6666', '中揚光': '6668', '緯穎': '6669', '復盛應用': '6670', '三能-KY': '6671', '騰輝電子-KY': '6672', '鋐寶科技': '6674', '旭暉應材': '6698', '惠特': '6706', '嘉基': '6715', '安普新': '6743', '匯僑設計': '6754', '威鋒電子': '6756', 'AES-KY': '6781', '台通': '8011', '矽創': '8016', '尖點': '8021', '昇陽半導體': '8028', '雷虎': '8033', '台虹': '8039', '南電': '8046', '長華*': '8070', '陞泰': '8072', '致新': '8081', '華冠': '8101', '瀚荃': '8103', '錸寶': '8104', '凌巨': '8105', '華東': '8110', '至上': '8112', '振樺電': '8114', '福懋科': '8131', '南茂': '8150', '達方': '8163', '無敵': '8201', '勤誠': '8210', '志超': '8213', '明基材': '8215', '寶一': '8222', '菱光': '8249', '富鼎': '8261', '宇瞻': '8271', '日友': '8341', '建新國際': '8367', '羅昇': '8374', '百和興業-KY': '8404', '福貞-KY': '8411', '可寧衛': '8422', '基勝-KY': '8427', '金麗-KY': '8429', '威宏-KY': '8442', '阿瘦': '8443', '富邦媒': '8454', '柏文': '8462', '潤泰材': '8463', '億豐': '8464', '美吉吉-KY': '8466', '波力-KY': '8467', '山林水': '8473', '東哥遊艇': '8478', '泰昇-KY': '8480', '政伸': '8481', '商億-KY': '8482', '吉源-KY': '8488', '鼎炫-KY': '8499', '台汽電': '8926', '新天地': '8940', '高力': '8996', '泰金寶-DR': '9105', '晨訊科-DR': '912000', '友佳-DR': '912398', '鈺齊-KY': '9802', '台火': '9902', '寶成': '9904', '大華': '9905', '欣巴巴': '9906', '統一實': '9907', '大台北': '9908', '豐泰': '9910', '櫻花': '9911', '偉聯': '9912', '美利達': '9914', '中保科': '9917', '欣天然': '9918', '康那香': '9919', '巨大': '9921', '福興': '9924', '新保': '9925', '新海': '9926', '泰銘': '9927', '中視': '9928', '秋雨': '9929', '中聯資源': '9930', '欣高': '9931', '中鼎': '9933', '成霖': '9934', '慶豐富': '9935', '全國': '9937', '百和': '9938', '宏全': '9939', '信義': '9940', '裕融': '9941', '茂順': '9942', '好樂迪': '9943', '新麗': '9944', '潤泰新': '9945', '三發地產': '9946', '佳龍': '9955', '世紀鋼': '9958', '茂生農經': '1240', '其祥-KY': '1258', '安心': '1259', '德麥': '1264', '漢來美食': '1268', '台翰': '1336', '精華': '1565', '濱川': '1569', '力肯': '1570', '新麥': '1580', '精剛': '1584', '和勤': '1586', '駿吉-KY': '1591', '祺驊': '1593', '川寶': '1595', '宏佳騰': '1599', '台蠟': '1742', '南光': '1752', '生泰': '1777', '合世': '1781', '訊聯': '1784', '光洋科': '1785', '杏昌': '1788', '金穎生技': '1796', '易威': '1799', '寶利徠': '1813', '富喬': '1815', '唐榮公司': '2035', '風青': '2061', '世鎧': '2063', '晉椿': '2064', '世豐': '2065', '世德': '2066', '嘉鋼': '2067', '精湛': '2070', '大甲': '2221', '泰茂': '2230', '謚源': '2235', '綠意': '2596', '大車隊': '2640', '正德': '2641', '捷迅': '2643', '晶悅': '2718', '燦星旅': '2719', '富驛-KY': '2724', '雅茗-KY': '2726', '瓦城': '2729', '六角': '2732', '易飛網': '2734', '高野': '2736', '天蔥': '2740', '山富': '2743', '五福': '2745', '豆府': '2752', '亞洲藏壽司': '2754', '揚秦': '2755', '滿心': '2916', '東凌-KY': '2924', '誠品生活': '2926', '紅馬-KY': '2928', '集雅社': '2937', '泰偉': '3064', '李洲': '3066', '全域': '3067', '協禧': '3071', '天方能源': '3073', '僑威': '3078', '聯亞': '3081', '網龍': '3083', '新零售': '3085', '華義': '3086', '艾訊': '3088', '元炬': '3089', '鴻碩': '3092', '港建': '3093', '及成': '3095', '穩懋': '3105', '好德': '3114', '寶島極': '3115', '進階': '3118', '笙泉': '3122', '昇銳': '3128', '弘塑': '3131', '晶宏': '3141', '新揚科': '3144', '大綜': '3147', '璟德': '3152', '精確': '3162', '波若威': '3163', '亞信': '3169', '新洲': '3171', '基亞': '3176', '公準': '3178', '鑫龍騰': '3188', '和進': '3191', '樺晟': '3202', '佰研': '3205', '志豐': '3206', '耀勝': '3207', '順達': '3211', '茂訊': '3213', '優群': '3217', '大學光': '3218', '倚強': '3219', '台嘉碩': '3221', '三顧': '3224', '至寶電': '3226', '原相': '3227', '金麗科': '3228', '錦明': '3230', '昱捷': '3232', '光環': '3234', '千如': '3236', '海灣': '3252', '鑫創': '3259', '威剛': '3260', '欣銓': '3264', '台星科': '3265', '海德威': '3268', '東碩': '3272', '宇環': '3276', '太普高': '3284', '微端': '3285', '廣寰科': '3287', '點晶': '3288', '宜特': '3289', '東浦': '3290', '鈊象': '3293', '英濟': '3294', '杭特': '3297', '岱稜': '3303', '鼎天': '3306', '佳穎': '3310', '斐成': '3313', '尼克森': '3317', '建舜電': '3322', '加百裕': '3323', '雙鴻': '3324', '旭品': '3325', '幸康': '3332', '泰谷': '3339', '律勝': '3354', '尚立': '3360', '先進光': '3362', '上詮': '3363', '典範': '3372', '熱映': '3373', '精材': '3374', '彬台': '3379', '崇越電': '3388', '旭軟': '3390', '漢科': '3402', '台興': '3426', '哲固': '3434', '類比科': '3438', '聯一光': '3441', '利機': '3444', '由田': '3455', '進泰電子': '3465', '致振': '3466', '安勤': '3479', '力致': '3483', '崧騰': '3484', '森寶': '3489', '單井': '3490', '昇達科': '3491', '長盛': '3492', '陽程': '3498', '環天科': '3499', '位速': '3508', '矽瑪': '3511', '皇龍': '3512', '亞帝歐': '3516', '華盈': '3520', '鴻翊': '3521', '御頂': '3522', '迎輝': '3523', '凡甲': '3526', '聚積': '3527', '力旺': '3529', '先益': '3531', '堡達': '3537', '曜越': '3540', '西柏': '3541', '宇峻': '3546', '兆利': '3548', '世禾': '3551', '同致': '3552', '重鵬': '3555', '禾瑞亞': '3556', '神準': '3558', '其陽': '3564', '逸昌': '3567', '大塚': '3570', '泓格': '3577', '友威科': '3580', '博磊': '3581', '閎康': '3587', '磐儀': '3594', '映興': '3597', '東林': '3609', '鼎翰': '3611', '安可': '3615', '富晶通': '3623', '光頡': '3624', '西勝': '3625', '盈正': '3628', '地心引力': '3629', '新鉅科': '3630', '晟楠': '3631', '研勤': '3632', '駿熠電': '3642', '艾恩特': '3646', '精聯': '3652', '鑫科': '3663', '安瑞-KY': '3664', '光耀': '3666', '康聯訊': '3672', '德微': '3675', '家登': '3680', '榮昌': '3684', '元創精密': '3685', '歐買尬': '3687', '湧德': '3689', '碩禾': '3691', '營邦': '3693', '漢磊': '3707', '鑫聯大投控': '3709', '連展投控': '3710', '新晶投控': '3713', '永日': '4102', '東洋': '4105', '邦特': '4107', '加捷生醫': '4109', '濟生': '4111', '聯上': '4113', '健喬': '4114', '明基醫': '4116', '友華': '4120', '優盛': '4121', '晟德': '4123', '太醫': '4126', '天良': '4127', '中天': '4128', '聯合': '4129', '健亞': '4130', '晶宇': '4131', '曜亞': '4138', '馬光-KY': '4139', '中裕': '4147', '台微體': '4152', '鈺緯': '4153', '康樂-KY': '4154', '太景*-KY': '4157', '創源': '4160', '聿新科': '4161', '智擎': '4162', '鐿鈦': '4163', '松瑞藥': '4167', '醣聯': '4168', '瑞基': '4171', '久裕': '4173', '浩鼎': '4174', '杏一': '4175', '福永生技': '4183', '安克': '4188', '杏國': '4192', '欣大健康': '4198', '中華食': '4205', '環泰': '4207', '信立': '4303', '勝昱': '4304', '世坤': '4305', '東隆興': '4401', '福大': '4402', '新昕纖': '4406', '飛寶企業': '4413', '三圓': '4416', '金洲': '4417', '元勝': '4419', '光明': '4420', '聚紡': '4429', '耀億': '4430', '銘旺實': '4432', '興采': '4433', '健信': '4502', '金雨': '4503', '崇友': '4506', '高鋒': '4510', '福裕': '4513', '永彰': '4523', '方土霖': '4527', '江興鍛': '4528', '淳紳': '4529', '宏易': '4530', '協易機': '4533', '慶騰': '4534', '至興': '4535', '大詠城': '4538', '晟田': '4541', '科嶠': '4542', '萬在': '4543', '桓達': '4549', '長佳': '4550', '橙的': '4554', '旭然': '4556', '健椿': '4561', '百德': '4563', '科際精密': '4568', '捷流閥業': '4580', '唐鋒': '4609', '中美實': '4702', '大恭': '4706', '磐亞': '4707', '永純': '4711', '南璋': '4712', '永捷': '4714', '大立': '4716', '美琪瑪': '4721', '永昕': '4726', '雙美': '4728', '熒茂': '4729', '豪展': '4735', '泰博': '4736', '泓瀚': '4741', '合一': '4743', '皇將': '4744', '合富-KY': '4745', '強生': '4747', '國碳科': '4754', '勤凱科技': '4760', '誠泰科技': '4767', 'VHQ-KY': '4803', '大略-KY': '4804', '昇華': '4806', '聯光通': '4903', '台聯電': '4905', '富宇': '4907', '前鼎': '4908', '新復興': '4909', '德英': '4911', '欣厚-KY': '4924', '新盛力': '4931', '友輝': '4933', '亞電': '4939', '兆遠': '4944', '陞達科技': '4945', '辣椒': '4946', '牧東': '4950', '緯軟': '4953', '譜瑞-KY': '4966', 'IET-KY': '4971', '湯石照明': '4972', '廣穎': '4973', '亞泰': '4974', '華星光': '4979', '科誠': '4987', '環宇-KY': '4991', '晶達': '4995', '榮剛': '5009', '久陽': '5011', '強新': '5013', '建錩': '5014', '華祺': '5015', '松和': '5016', '富強': '5102', '凱衛': '5201', '力新': '5202', '中茂': '5205', '坤悅': '5206', '新鼎': '5209', '寶碩': '5210', '蒙恬': '5211', '凌網': '5212', '亞昕': '5213', '萬達光電': '5220', '安力-KY': '5223', '立凱-KY': '5227', '雷笛克光學': '5230', '智晶': '5245', '天鉞電': '5251', '智崴': '5263', '笙科': '5272', '信驊': '5274', '達輝-KY': '5276', '尚凡': '5278', '大峽谷-KY': '5281', '數字': '5287', '宜鼎': '5289', '邑昇': '5291', '杰力': '5299', '寶得利': '5301', '太欣': '5302', '桂盟': '5306', '系統電': '5309', '天剛': '5310', '寶島科': '5312', '世紀': '5314', '光聯': '5315', '友銓': '5321', '士開': '5324', '華容': '5328', '建榮': '5340', '立衛': '5344', '天揚': '5345', '世界': '5347', '系通': '5348', '鈺創': '5351', '台林': '5353', '佳總': '5355', '協益': '5356', '力麗店': '5364', '中光電': '5371', '合正': '5381', '金利': '5383', '青雲': '5386', '應華': '5392', '慕康生醫': '5398', '中菲': '5403', '國眾': '5410', '台半': '5425', '振發': '5426', '達威': '5432', '東友': '5438', '高技': '5439', '均豪': '5443', '南良': '5450', '佶優': '5452', '昇益': '5455', '宣德': '5457', '同協': '5460', '霖宏': '5464', '富驊': '5465', '凱鈺': '5468', '聰泰': '5474', '德宏': '5475', '智冠': '5478', '新華': '5481', '中美晶': '5483', '通泰': '5487', '松普': '5488', '彩富': '5489', '同亨': '5490', '三聯': '5493', '凱崴': '5498', '永信建': '5508', '德昌': '5511', '力麒': '5512', '三豐': '5514', '雙喜': '5516', '力泰': '5520', '豐謙': '5523', '志嘉': '5529', '龍巖': '5530', '聖暉': '5536', '桓鼎-KY': '5543', '台聯櫃': '5601', '陸海': '5603', '中連貨': '5604', '中菲行': '5609', '劍湖山': '5701', '亞都': '5703', '老爺知': '5704', '日盛金': '5820', '致和證': '5864', '台名': '5878', '德記': '5902', '全家': '5903', '寶雅': '5904', '南仁湖': '5905', '宏遠證': '6015', '康和證': '6016', '大展證': '6020', '大慶證': '6021', '元大期貨': '6023', '福邦證': '6026', '寬魚國際': '6101', '合邦': '6103', '創惟': '6104', '亞元': '6109', '大宇資': '6111', '亞矽': '6113', '久威': '6114', '建達': '6118', '新普': '6121', '擎邦': '6122', '上奇': '6123', '業強': '6124', '廣運': '6125', '信音': '6126', '九豪': '6127', '普誠': '6129', '星寶國際': '6130', '萬旭': '6134', '茂達': '6138', '訊達電腦': '6140', '振曜': '6143', '得利影': '6144', '耕興': '6146', '頎邦': '6147', '驊宏資': '6148', '撼訊': '6150', '晉倫': '6151', '順發': '6154', '松上': '6156', '禾昌': '6158', '欣技': '6160', '捷波': '6161', '華電網': '6163', '久正': '6167', '昱泉': '6169', '統振': '6170', '亞銳士': '6171', '信昌電': '6173', '安碁': '6174', '立敦': '6175', '亞通': '6179', '橘子': '6180', '合晶': '6182', '幃翔': '6185', '新潤': '6186', '萬潤': '6187', '廣明': '6188', '萬泰科': '6190', '育富': '6194', '詩肯': '6195', '凌泰': '6198', '天品': '6199', '海韻電': '6203', '艾華': '6204', '雷科': '6207', '日揚': '6208', '慶生': '6210', '理銘': '6212', '中探針': '6217', '豪勉': '6218', '富旺': '6219', '岳豐': '6220', '晉泰': '6221', '上揚': '6222', '旺矽': '6223', '茂綸': '6227', '全譜': '6228', '研通': '6229', '系微': '6231', '旺玖': '6233', '高僑': '6234', '康呈': '6236', '驊訊': '6237', '松崗': '6240', '易通展': '6241', '立康': '6242', '茂迪': '6244', '立端': '6245', '臺龍': '6246', '淇譽電': '6247', '沛波': '6248', '百徽': '6259', '久元': '6261', '普萊德': '6263', '富裔': '6264', '方土昶': '6265', '泰詠': '6266', '倍微': '6270', '台燿': '6274', '元山': '6275', '安鈦克': '6276', '胡連': '6279', '佳邦': '6284', '元隆': '6287', '良維': '6290', '沛亨': '6291', '迅德': '6292', '智基': '6294', '通訊-KY': '6404', '晶焱': '6411', '韋僑': '6417', '詠昇': '6418', '京晨科': '6419', '易發': '6425', '統新': '6426', '今展科': '6432', '大中': '6435', '廣錠': '6441', '藥華藥': '6446', '紘康': '6457', '益得': '6461', '神盾': '6462', '威潤': '6465', '大樹': '6469', '宇智': '6470', '保瑞': '6472', '弘煜科': '6482', '點序': '6485', '互動': '6486', '環球晶': '6488', '生華科': '6492', '九齊': '6494', '科懋': '6496', '益安': '6499', '雙邦': '6506', '惠光': '6508', '聚和': '6509', '精測': '6510', '啟發電': '6512', '芮特-KY': '6514', '勤崴國際': '6516', '達爾膚': '6523', '明達醫': '6527', '創威': '6530', '瑞耘': '6532', '順藥': '6535', '倉和': '6538', '隆中': '6542', '高端疫苗': '6547', '長科*': '6548', '勝品': '6556', '欣普羅': '6560', '是方': '6561', '宏觀': '6568', '醫揚': '6569', '維田': '6570', '霈方': '6574', '逸達': '6576', '勁豐': '6577', '達邦蛋白': '6578', '東典': '6588', '台康生技': '6589', '普鴻': '6590', '台灣銘板': '6593', '展匯科': '6594', '寬宏藝術': '6596', '富強鑫': '6603', '瀧澤科': '6609', '奈米醫材': '6612', '朋億': '6613', '慧智': '6615', '特昇-KY': '6616', '萬年清': '6624', '泰金-KY': '6629', '均華': '6640', '富致': '6642', 'M31': '6643', '台生材': '6649', '全宇昕': '6651', '天正國際': '6654', '威健生技': '6661', '樂斯科': '6662', '群翊': '6664', '信紘科': '6667', '鈺太': '6679', '鑫創電子': '6680', '雍智科技': '6683', '安碁資訊': '6690', '東捷資訊': '6697', '軒郁': '6703', '長聖': '6712', '應廣': '6716', '亞泰金屬': '6727', '上洋': '6728', '昇佳電子': '6732', '博晟生醫': '6733', '亨泰光': '6747', '智聯服務': '6751', '叡揚': '6752', '達亞': '6762', '台微醫': '6767', '崑鼎': '6803', '邑錡': '7402', '意德士科技': '7556', '佑華': '8024', '鈦昇': '8027', '光菱': '8032', '榮群': '8034', '長園科': '8038', '九暘': '8040', '金山電': '8042', '蜜望實': '8043', '網家': '8044', '星雲': '8047', '德勝': '8048', '晶采': '8049', '廣積': '8050', '安國': '8054', '凱碩': '8059', '東捷': '8064', '來思達': '8066', '志旭': '8067', '全達': '8068', '元太': '8069', '能率網通': '8071', '鉅橡': '8074', '伍豐': '8076', '洛碁': '8077', '永利聯合': '8080', '瑞穎': '8083', '巨虹': '8084', '福華': '8085', '宏捷科': '8086', '華鎂鑫': '8087', '品安': '8088', '康全電訊': '8089', '翔名': '8091', '建暐': '8092', '保銳': '8093', '擎亞': '8096', '常珵': '8097', '大世科': '8099', '大億金茂': '8107', '博大': '8109', '立碁': '8111', '越峰': '8121', '正淩': '8147', '博智': '8155', '天宇': '8171', '智捷': '8176', '加高': '8182', '精星': '8183', '新漢': '8234', '華宏': '8240', '朋程': '8255', '商丞': '8277', '生展': '8279', '三竹': '8284', '泰藝': '8289', '尚茂': '8291', '群聯': '8299', '益張': '8342', '恒耀國際': '8349', '冠好': '8354', '金居': '8358', '千附': '8383', '金益鼎': '8390', '白紗科': '8401', '盛弘': '8403', '金可-KY': '8406', '商之器': '8409', '森田': '8410', '大國鋼': '8415', '實威': '8416', '捷必勝-KY': '8418', '明揚': '8420', '旭源': '8421', '保綠-KY': '8423', '惠普': '8424', '紅木-KY': '8426', '匯鑽科': '8431', '東生華': '8432', '弘帆': '8433', '鉅邁': '8435', '大江': '8436', '大地-KY': '8437', '綠電': '8440', '綠河-KY': '8444', '華研': '8446', '霹靂': '8450', '大拓-KY': '8455', '夠麻吉': '8472', '台境': '8476', '創業家': '8477', '三貝德': '8489', '裕國': '8905', '花王': '8906', '欣雄': '8908', '光隆': '8916', '欣泰': '8917', '沈氏': '8921', '時報': '8923', '大田': '8924', '北基': '8927', '鉅明': '8928', '富堡': '8929', '青鋼': '8930', '大汽電': '8931', '宏大': '8932', '愛地雅': '8933', '邦泰': '8935', '國統': '8936', '合騏': '8937', '明安': '8938', '關中': '8941', '森鉅': '8942', '琉園': '9949', '萬國通': '9950', '皇田': '9951', '邁達康': '9960', '有益': '9962'}


'''
@csrf_exempt
@permission_required('myapp.Can_enter_stockPERseg', login_url='/login2/')
def stockPrice5y(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        #mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, H6, L6, eps1N = Price5y.Price5y(mess)
        #, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict =func3.PERseg(mess)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        


        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        #mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPrice5y.html", locals())
    ''

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stockPrice5yAdmin(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        #mess2 = request.POST['monthid']

        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:10]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, H6, L6, eps1N = Price5yDB.Price5yDB(mess)
        #, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict =func3.PERseg(mess)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            seg = models.PriEPSPER_DB.objects.get(cStockID=mess)

        except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            seg = models.PriEPSPER_DB.objects.create(cStockID=mess, cStockName=stock_name, cH2020=H1, cL2020=L1, cH2019=H2, cL2019=L2, cH2018=H3, cL2018=L3, cH2017=H4, cL2017=L4, cH2016=H5, cL2016=L5, cEPS2020=eps1, cEPS2019=eps2, cEPS2018=eps3, cEPS2017=eps4, cEPS2016=eps5, cPER_H2020=PER_H1, cPER_L2020=PER_L1, cPER_H2019=PER_H2, cPER_L2019=PER_L2, cPER_H2018=PER_H3, cPER_L2018=PER_L3, cPER_H2017=PER_H4, cPER_L2017=PER_L4, cPER_H2016=PER_H5, cPER_L2016=PER_L5, pubtime=realtime)
            seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        #mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPrice5yAdmin.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stockNetCapAdmin(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        #mess2 = request.POST['monthid']

        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:10]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)


        Net1, Net2, Net3, Net4, pNet1, pNet2, pNet3, pNet4, cap1, cap2, cap3, cap4, capital_stock, Net4Average, pNet4Average = NetCapDB.NetCapDB(mess)
        #, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict =func3.PERseg(mess)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
           

            #每次都必須更改
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            seg = models.NetCap_DB.objects.get(cStockID=mess)
            seg.cNet21Q3 = Net1
            seg.cNet21Q2 = Net2
            seg.cNet21Q1 = Net3
            seg.cNet20Q4 = Net4
            seg.cCap21Q3 = cap1
            seg.cCap21Q2 = cap2
            seg.cCap21Q1 = cap3
            seg.cCap20Q4 = cap4
            seg.pubtime=realtime
            seg.save()

        except:  #針對沒有的股票，抓取資料存入資料庫
            #每次都必須更改
            seg = models.NetCap_DB.objects.create(cStockID=mess, cStockName=stock_name, cNet21Q3 = Net1,cNet21Q2 = Net2,cNet21Q1 = Net3,cNet20Q4 = Net4,cCap21Q3 = cap1,cCap21Q2 = cap2,cCap21Q1 = cap3,cCap20Q4 = cap4,pubtime=realtime)
            seg.save()
            
            
    else:
        mess = "台股代號尚未送出！"
        #mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockNetCapAdmin.html", locals())

def home(request):
    return render(request,"home.html")
'''
def saytest3(request):
    func.USAStock("TSLA")
    return render(request,"saytest3.html")
'''
####################


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def listallscore(request):
    signs = Stock6Sign.objects.all().order_by('-cAverageScore')
    return render(request, "listallscore.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def listallseg(request):
    segs = StockPERseg.objects.all().order_by('cStockID')
    return render(request, "listallseg.html", locals())


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def listallsegscore(request):
    segs = StockPERseg.objects.all().order_by('-cRisk_reward')
    return render(request, "listallsegscore.html", locals())

#########################################

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def listallEPS(request):
    alleps = EPSachieve.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "listallEPS.html", locals())


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def listallCAP(request):
    caps = StockCapVar.objects.all().order_by('id')
    return render(request, "listallCAP.html", locals())






################
def index2(request):
	if request.user.is_authenticated:
	   name=request.user.username
	return render(request, "index2.html", locals())

def login2(request):  #付費使用者專專用
	if request.method == 'POST':
		name = request.POST['username']
		password = request.POST['password']
		user = auth.authenticate(username=name, password=password)
		if user is not None:


			if user.username == "jonyi729":
				auth.login(request,user)
				return redirect('/usersmain_jonyi/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "hakkai":
				auth.login(request,user)
				return redirect('/usersmain_hakkai/')
                #return redirect('/index/')
				message = '登入成功！'                

			elif user.username == "BOBMAX1":
				auth.login(request,user)
				return redirect('/usersmain_bobmax/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "deno36":
				auth.login(request,user)
				return redirect('/usersmain_deno36/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "donhonlin":
				auth.login(request,user)
				return redirect('/usersmain_donhonlin/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "goldsilver999":
				auth.login(request,user)
				return redirect('/usersmain_goldsilver/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "Hyeth":
				auth.login(request,user)
				return redirect('/usersmain_hyeth/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "magicjohnsonkidd":
				auth.login(request,user)
				return redirect('/usersmain_magicjohn/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "bakylews00":
				auth.login(request,user)
				return redirect('/usersmain_bakylews/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "chengchi":
				auth.login(request,user)
				return redirect('/usersmain_chenchi/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "leecn1009":
				auth.login(request,user)
				return redirect('/usersmain_yuhuahsiao/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "liusnow0988":
				auth.login(request,user)
				return redirect('/usersmain_liusnow/')
                #return redirect('/index/')
				message = '登入成功！'
                
			elif user.username == "KevinLee":
				auth.login(request,user)
				return redirect('/usersmain_kevinlee/')
                #return redirect('/index/')
				message = '登入成功！'

                
                
			elif user.username == "test168":
				auth.login(request,user)
				return redirect('/usersmain_test168/')
                #return redirect('/index/')
				message = '登入成功！'
			elif user.is_active:
				auth.login(request,user)
				return redirect('/usersmain/')
                #return redirect('/index/')
				message = '登入成功！'
			else:
				message = '帳號尚未啟用！'
		else:
			message = '登入失敗！'
	return render(request, "login2.html", locals())
	
def logout2(request):  #付費使用者專專用
	auth.logout(request)
	return redirect('/index/')	

def adduser(request):	
	try:
		user=User.objects.get(username="test")
	except:
		user=None
	if user!=None:
		message = user.username + " 帳號已建立!"
		return HttpResponse(message)
	else:	# 建立 test 帳號			
		user=User.objects.create_user("test","test@test.com.tw","aa123456")
		user.first_name="wen" # 姓名
		user.last_name="lin"  # 姓氏
		user.is_staff=True	# 工作人員狀態
		user.save()
		return redirect('/admin/')


def signup(request):

    if request.method == 'POST':
        username=request.POST['username']
        password=request.POST['password']
        email=request.POST['email']
        first_name = request.POST['first_name']
        last_name = request.POST['last_name']
        #cellphone = request.POST['cellphone']
                		
        user=User.objects.create_user(username,email,password)
        user.first_name = first_name # 名
        user.last_name = last_name  # 姓氏
        #user.cCellphone = cellphone #手機
        user.is_staff = False	# 工作人員狀態
        user.save()
        #message = user.username + " 帳號已建立!，請登入"
        #return HttpResponse(message)
        return redirect('/index/')
    
    return render(request, "signup.html", locals()) 


def example(request):
    
    return render(request,"example.html")
	

   
    
#https://docs.djangoproject.com/en/3.0/topics/auth/default/

        
        
'''
def saytest(request):
    return HttpResponse("Say Test!")

def saytest2(request):
    return HttpResponse(func.yahoo_up())
'''        
######################
#from django.shortcuts import render, redirect
from myapp import models
#from myapp.models import NewsUnit
#from django.contrib.auth import authenticate
#from django.contrib import auth
#from django.contrib import messages
#from django.contrib.auth.models import User
#from django.views.decorators.csrf import ensure_csrf_cookie
#from django import template
import math

page1 = 1

def index(request, pageindex=None):  #首頁
    
	global page1
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.NewsUnit.objects.filter(enabled=True).order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.NewsUnit.objects.filter(enabled=True).order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.NewsUnit.objects.filter(enabled=True).order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.NewsUnit.objects.filter(enabled=True).order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "index.html", locals())

def detail(request, detailid=None):  #詳細頁面
	unit = models.NewsUnit.objects.get(id=detailid)
	category = unit.catego
	title = unit.title
	pubtime = unit.pubtime
	nickname = unit.nickname
	message = unit.message
	unit.press += 1
	unit.save()
	return render(request, "detail.html", locals())

def login(request):  #登入   #管理人專用
	messages = ''  #初始時清除訊息
	if request.method == 'POST':  #如果是以POST方式才處理
		name = request.POST['username'].strip()  #取得輸入帳號
		password = request.POST['password']  #取得輸入密碼
		user1 = authenticate(username=name, password=password)  #驗證
		if user1 is not None:  #驗證通過
			if user1.is_active:  #帳號有效
				auth.login(request, user1)  #登入
				return redirect('/adminmain/')  #開啟管理頁面
			else:  #帳號無效
				messages = '帳號尚未啟用！'
		else:  #驗證未通過
			messages = '登入失敗！'
	return render(request, "login.html", locals())

def logout(request):  #登出  #管理人專用
	auth.logout(request)
	return redirect('/index/')


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def adminmain(request, pageindex=None):  #管理頁面

	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u



	global page1
	pagesize = 20 #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_test168.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "adminmain.html", locals())

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsadd(request):  #新增資料
	message = ''  #清除訊息
	category = request.POST.get('news_type', '')  #取得輸入的類別
	subject = request.POST.get('news_subject', '')
	editor = request.POST.get('news_editor', '')
	content = request.POST.get('news_content', '')
	ok = request.POST.get('news_ok', '')
	if subject=='' or editor=='' or content=='':  #若有欄位未填就顯示訊息
		message = '每一個欄位都要填寫...'
	else:
		if ok=='yes':  #根據ok值設定enabled欄位
			enabled = True
		else:
			enabled = False
		unit = models.NewsUnit.objects.create(catego=category, nickname=editor, title=subject, message=content, enabled=enabled, press=0)
		unit.save()
		return redirect('/adminmain/')
	return render(request, "newsadd.html", locals())

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsedit(request, newsid=None, edittype=None):  #修改資料
	unit = models.NewsUnit.objects.get(id=newsid)  #讀取指定資料
	categories = ["公告", "更新", "活動", "其他"]
	if edittype == None:  #進入修改頁面,顯示原有資料
		type = unit.catego
		subject = unit.title
		editor = unit.nickname
		content = unit.message
		ok = unit.enabled
	elif edittype == '1':  #修改完畢,存檔
		category = request.POST.get('news_type', '')
		subject = request.POST.get('news_subject', '')
		editor = request.POST.get('news_editor', '')
		content = request.POST.get('news_content', '')
		ok = request.POST.get('news_ok', '')
		if ok=='yes':
			enabled = True
		else:
			enabled = False
		unit.catego=category
		unit.nickname=editor
		unit.title=subject
		unit.message=content
		unit.enabled=enabled
		unit.save()
		return redirect('/adminmain/')
	return render(request, "newsedit.html", locals())

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.NewsUnit.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.catego.strip())
		subject = unit.title
		editor = unit.nickname
		content = unit.message
		date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/adminmain/')
	return render(request, "newsdelete.html", locals())

'''
def listone(request):
    try:
        sign = Stock6Sign.objects.get(cStockID="2330")
    except:
        eroormessage = " (讀取錯誤！)"
    return render(request, "listone.html", locals())

@permission_required('myapp.Can_enter_PaidUsersOnly', login_url='/listall/')
def listall(request):
    signs = Stock6Sign.objects.all().order_by('id')
    return render(request, "listall.html", locals())
'''



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login2/')
def UsersListAll(request):
    users = User.objects.all().order_by('-last_login')
    return render(request, "UsersListAll.html", locals())




def usersmain(request, pageindex=None):  #使用者功能首頁
	global page1
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain.html", locals())
####################################################################

def USAStockPic(request, stockid):
        
    func.USAStock(stockid)
    return render(request,"saytest3.html")


def USAStockPicK(request, stockid):
        
    func.USAStockK(stockid)
    return render(request,"saytest4.html") #成功版本mplfinance-0.12.4a0

def USAStockPicK2(request, stockid, xdays):
        
    func.USAStockKx(stockid,xdays)
    return render(request,"saytest4.html") #成功版本mplfinance-0.12.4a0

##############################################
'''
def TWStockPic(request, stockid):
        
    func.TWStock(stockid)
    return render(request,"twstockPIC.html")

def TWStockPicK(request, stockid):
        
    func.TWStockK(stockid)
    return render(request,"twstockPICK.html") #成功版本mplfinance-0.12.4a0

def TWStockPicK2(request, stockid, xdays):
        
    func.TWStockKx(stockid,xdays)
    return render(request,"twstockPICKx.html") #成功版本mplfinance-0.12.4a0
'''
###仿post2
def TWStockPost2(request):
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "該表單尚未送出！"
        mess2 = "該表單尚未送出！2"



    return render(request, "TWStockPost2.html", locals())
    TWKpicShow(mess, mess2)  #一定要在後面，放前面會錯誤


def TWKpicShow(request, stockid, xdays):
    import time
    func.funcTWStockKx(stockid,xdays)
    time.sleep(1)
    
    return render(request,"TWKpicShow.html") #成功版本mplfinance-0.12.4a0

##########################################################
def post(request):
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "該表單尚未送出！"
    return render(request, "post.html", locals())
    func.USAStockPicK(mess)

def post2(request):
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "該表單尚未送出！"
        mess2 = "該表單尚未送出！2"
    return render(request, "post2.html", locals())
    func.USAStockPicK2(mess, mess2)


###################################################################

@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6(request):  #查詢六大指標，給付費使用者使用

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2.stock_Rev(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2.stock_Cashflow(mess)
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        average6stock, stock_name =func2.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        
        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #sign = models.Stock6Sign.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #sign = models.Stock6Sign.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
            #sign.save()
               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6.html", locals())
    #TWStockPicK(mess)        



@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def viewsISQuery(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        IS_Time, ISitem = func0.ISQuery(mess)
        


        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"

    return render(request, "viewsISQuery.html", locals())


@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def viewsBSQuery(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        BS_Time, BSitem = func0.BSQuery(mess)
        


        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"

    return render(request, "viewsBSQuery.html", locals())



@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6xKpic(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['xdays']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        mess2 = "圖形天數尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"

    return render(request, "stock6xKpic.html", locals())
    #TWStockPicK2(mess, mess2)  #引入以下函式，再引用func的函式

#def TWStockPicK2(request, stockid, xdays):
        
    #func.TWStockKx(stockid,xdays)
    #return render(request,"saytest4t.html") #成功版本mplfinance-0.12.4a0



@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6x(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6x.html", locals())
    #TWStockPicK(mess)


@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6xDB(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)

        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        stock_name = func2x.GetStockName(mess)



        if a1N[-2:] == '03':

            try:
                signA = models.Stock6Sign202202.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202201.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202112.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"


        elif a1N[-2:] == '02':

            try:
                signA = models.Stock6Sign202201.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202112.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202111.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"

        elif a1N[-2:] == '01':

            try:
                signA = models.Stock6Sign202112.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202111.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202110.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"



        elif a1N[-2:] == '12':

            try:
                signA = models.Stock6Sign202111.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202110.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202109.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"


        if a1N[-2:] == '11':

            try:
                signA = models.Stock6Sign202110.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202109.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202108.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"
                
        elif a1N[-2:] == '08':

            try:
                signA = models.Stock6Sign202107.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202106.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202105.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"


        elif a1N[-2:] == '07':

            try:
                signA = models.Stock6Sign202106.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202105.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202104.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"

        
        elif a1N[-2:] == '06':

            try:
                signA = models.Stock6Sign202105.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202104.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202103.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"
                
        elif a1N[-2:] == '05':

            try:
                signA = models.Stock6Sign202104.objects.get(cStockID=mess)
                lastmonthAve = signA.cAverageScore  
            
                signB = models.Stock6Sign202103.objects.get(cStockID=mess)
                lastx2monthAve = signB.cAverageScore  

                signC = models.Stock6Sign202102.objects.get(cStockID=mess)
                lastx3monthAve = signC.cAverageScore 
            except:
                lastmonthAve = "N/A"
                lastx2monthAve = "N/A"
                lastx3monthAve = "N/A"                

    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6xDB.html", locals())



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6Admin(request):  #查詢六大指標，給管理人使用

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容


        #以下收集六大指標的各評分
        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2.stock_Rev(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2.stock_Cashflow(mess)
        
        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
        
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock, stock_name =func2.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        
        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signQ4 = models.Stock6Sign2020Q4.objects.get(cStockID=mess)


            signQ4.cSign1 = result1
            signQ4.cSign2 = result2
            signQ4.cSign3 = result3
            signQ4.cSign4 = result4
            signQ4.cSign5 = result5
            signQ4.cSign6 = result6
            signQ4.cAverageScore = average6stock
            signQ4.pubtime =realtime

            signQ4.cNewestSeason = newest_Fin_Q
            signQ4.cNewestRev = newest_Rev_month            
            
                                
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore

            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = str(float(avgs07) - float(avgs06))
            signQ4.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            signQ4 = models.Stock6Sign2020Q4.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
            signQ4.save()            
            
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
            #signQ2 = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            #if (sign07.cLossGain == '-5'):
            #avgs06 = float(sign06.cAverageScore)
            #avgsQ2 = float(average6stock)
            
            #lg = avgs07 - avgs06
            #print(lg)

                
            #signQ2.cLossGain =  avgsQ2-avgs06 #不知為何不能用減號-
            #signQ2.save()

            
            #取出6月資料
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
                    
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore
            #計算分數增減
            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = float(avgs07) - float(avgs06)
            #sign07.save()
            

               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6Admin.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6xAdmin(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        
        result2, ProfitN, Profit, b1N, b2N, b3N, b4N, b5N, b6N, b7N, b8N, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b10p, result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8, newest_Fin_Q = func2x.stock_Prof2_InvTO5(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11, result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2x.stock_NetInc3_EPS4(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2x.stock_Cashflow6(mess)
        result1, RevN, Rev, a1N, a2N, a3N, a4N, a5N, a6N, na1, na2, na3, na4, na5, na6, na9, na10, a7N, na7, newest_Rev_month, luX, nluX_MoM = func2x.stock_Rev1(mess)


        stock_name = func2x.GetStockName(mess)


        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock = func2x.stock6score(mess, result1, result2, result3, result4, result5, result6) #取得六大指標平均

        if mess_db == "05":
            DB = Stock6Sign202105

        elif mess_db == "06":
            DB = Stock6Sign202106

        elif mess_db == "07":
            DB = Stock6Sign202107

        elif mess_db == "08":
            DB = Stock6Sign202108
            
        elif mess_db == "09":
            DB = Stock6Sign202109
            
        elif mess_db == "10":
            DB = Stock6Sign202110

        elif mess_db == "11":
            DB = Stock6Sign202111

        elif mess_db == "12":
            DB = Stock6Sign202112

        elif mess_db == "01":
            DB = Stock6Sign202201

        elif mess_db == "02":
            DB = Stock6Sign202202
            
        elif mess_db == "03":
            DB = Stock6Sign202203            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            sign = DB.objects.get(cStockID=mess)


            sign.cSign1 = result1
            sign.cSign2 = result2
            sign.cSign3 = result3
            sign.cSign4 = result4
            sign.cSign5 = result5
            sign.cSign6 = result6
            sign.cAverageScore = average6stock
            sign.pubtime =realtime

            sign.cNewestSeason = newest_Fin_Q
            sign.cNewestRev = newest_Rev_month            
            
                                
    
            sign.save()
            
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
       
            sign = DB.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=float(average6stock), pubtime=realtime)
            sign.save() 
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營收指標尚未計算出來！"
        result2 = "營益率指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"


        
    
            
    return render(request, "stock6xAdmin.html", locals())



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminGL(request):  #查詢六大指標，給管理人使用

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容



        sign02 = models.Stock6Sign202202.objects.get(cStockID=mess)
        sign03 = models.Stock6Sign202203.objects.get(cStockID=mess)            


        avgs02 = float(sign02.cAverageScore)
        avgs03 = float(sign03.cAverageScore)
            
        sign03.cLossGain =  round(avgs03-avgs02,2) #不知為何不能用減號- 可以了
        
        #signQ2.cNewestSeason = newest_Fin_Q
        #signQ2.cNewestRev = newest_Rev_month
        
        sign03.save()            
            #sign07.Sign1 = result1
            #sign07.Sign2 = result2
            #sign07.Sign3 = result3
            #sign07.Sign4 = result4
            #sign07.Sign5 = result5
            #sign07.Sign6 = result6
            #sign07.cAverageScore = average6stock
            #sign07.pubtime =realtime            
            
                                
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore

            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = str(float(avgs07) - float(avgs06))
            #sign07.save()
            
            ###################


        #except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            #sign = models.Stock6Sign2020Q2.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
            #sign.save()            
            
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
            #signQ2 = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            #if (sign07.cLossGain == '-5'):
            #avgs06 = float(sign06.cAverageScore)
            #avgsQ2 = float(average6stock)
            
            #lg = avgs07 - avgs06
            #print(lg)

                
            #signQ2.cLossGain =  avgsQ2-avgs06 #不知為何不能用減號-
            #signQ2.save()

            
            #取出6月資料
            #sign06 = models.Stock6Sign202006.objects.get(cStockID=mess)
                    
            #avgs06 = sign06.cAverageScore
            #avgs07 = sign07.cAverageScore
            #計算分數增減
            #lg = str(float(avgs07) - float(avgs06))
            #sign07.cLossGain = float(avgs07) - float(avgs06)
            #sign07.save()
            

               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminGL.html", locals())


###############################
@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6getOne(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容

        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        stock_name =func2.GetStockName(mess) 
        try: #上市股價查詢
        
            dailyprice2107 = float(func8.Daily_Price(mess,'20210802', 4))        
            dailyprice2106 = float(func8.Daily_Price(mess,'20210701', 4))
            dailyprice2105 = float(func8.Daily_Price(mess,'20210601', 4))

            dailyprice2104 = float(func8.Daily_Price(mess,'20210501', 4))
            dailyprice2103 = float(func8.Daily_Price(mess,'20210401', 4))
            dailyprice2102 = float(func8.Daily_Price(mess,'20210301', 4))
            dailyprice2101 = float(func8.Daily_Price(mess,'20210201', 4))
            dailyprice2012 = float(func8.Daily_Price(mess,'20210104', 4))
            dailyprice2011 = float(func8.Daily_Price(mess,'20201201', 4))
            dailyprice2010 = float(func8.Daily_Price(mess,'20201102', 3))
            dailyprice2009 = float(func8.Daily_Price(mess,'20201001', 4))
            dailyprice2008 = float(func8.Daily_Price(mess,'20200901', 7)) 
            dailyprice2007 = float(func8.Daily_Price(mess,'20200801', 5))        
            dailyprice2006 = float(func8.Daily_Price(mess,'20200701', 7))
        except: #上櫃股價查詢
            dailyprice2107 = float(func8.Daily_Price2(mess,'2021-08-02')) 
            dailyprice2106 = float(func8.Daily_Price2(mess,'2021-07-01')) 
            dailyprice2105 = float(func8.Daily_Price2(mess,'2021-06-01'))         
        
            dailyprice2104 = float(func8.Daily_Price2(mess,'2021-05-01')) 
            dailyprice2103 = float(func8.Daily_Price2(mess,'2021-04-01')) 
            dailyprice2102 = float(func8.Daily_Price2(mess,'2021-03-01')) 
            dailyprice2101 = float(func8.Daily_Price2(mess,'2021-02-01')) 
            dailyprice2012 = float(func8.Daily_Price2(mess,'2021-01-04'))            
            dailyprice2011 = float(func8.Daily_Price2(mess,'2020-12-01'))
            dailyprice2010 = float(func8.Daily_Price2(mess,'2020-11-02'))
            dailyprice2009 = float(func8.Daily_Price2(mess,'2020-10-01'))
            dailyprice2008 = float(func8.Daily_Price2(mess,'2020-09-01')) 
            dailyprice2007 = float(func8.Daily_Price2(mess,'2020-08-01'))        
            dailyprice2006 = float(func8.Daily_Price2(mess,'2020-07-01'))

        lg07_06 = str((round((dailyprice2107-dailyprice2106)/dailyprice2106, 4))*100) + '%'             


        lg06_05 = str((round((dailyprice2106-dailyprice2105)/dailyprice2105, 4))*100) + '%'             

        lg05_04 = str((round((dailyprice2105-dailyprice2104)/dailyprice2104, 4))*100) + '%'             

        lg04_03 = str((round((dailyprice2104-dailyprice2103)/dailyprice2103, 4))*100) + '%'             
        lg03_02 = str((round((dailyprice2103-dailyprice2102)/dailyprice2102, 4))*100) + '%'             
        lg02_01 = str((round((dailyprice2102-dailyprice2101)/dailyprice2101, 4))*100) + '%' 
        lg01_12 = str((round((dailyprice2101-dailyprice2012)/dailyprice2012, 4))*100) + '%' 
            
        lg12_11 = str((round((dailyprice2012-dailyprice2011)/dailyprice2011, 4))*100) + '%' 
        lg11_10 = str((round((dailyprice2011-dailyprice2010)/dailyprice2010, 4))*100) + '%' 
        lg10_9 = str((round((dailyprice2010-dailyprice2009)/dailyprice2009, 4))*100) + '%'       
        lg9_8 = str((round((dailyprice2009-dailyprice2008)/dailyprice2008, 4))*100) + '%'
        lg8_7 = str((round((dailyprice2008-dailyprice2007)/dailyprice2007, 4))*100) + '%'
        lg7_6 = str((round((dailyprice2007-dailyprice2006)/dailyprice2006, 4))*100) + '%'
        
        
        
        #https://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=html&date=20200701&stockNo=2330
        
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs06 = models.Stock6Sign202006.objects.get(cStockID = mess)
            s6score = signs06.cAverageScore
            s6sign1 = signs06.cSign1
            s6sign2 = signs06.cSign2
            s6sign3 = signs06.cSign3
            s6sign4 = signs06.cSign4
            s6sign5 = signs06.cSign5
            s6sign6 = signs06.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s6score = None
            s6sign1 = None
            s6sign2 = None
            s6sign3 = None
            s6sign4 = None
            s6sign5 = None
            s6sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq2 = models.Stock6Sign2020Q2.objects.get(cStockID = mess)
            q2score = signsq2.cAverageScore
            q2sign1 = signsq2.cSign1
            q2sign2 = signsq2.cSign2
            q2sign3 = signsq2.cSign3
            q2sign4 = signsq2.cSign4
            q2sign5 = signsq2.cSign5
            q2sign6 = signsq2.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q2score = None
            q2sign2 = None
            q2sign3 = None
            q2sign4 = None
            q2sign5 = None
            q2sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs08 = models.Stock6Sign202008.objects.get(cStockID = mess)
            s8score = signs08.cAverageScore
            s8sign1 = signs08.cSign1
            s8sign2 = signs08.cSign2
            s8sign3 = signs08.cSign3
            s8sign4 = signs08.cSign4
            s8sign5 = signs08.cSign5
            s8sign6 = signs08.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s8score = None
            s8sign1 = None
            s8sign2 = None
            s8sign3 = None
            s8sign4 = None
            s8sign5 = None
            s8sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs09 = models.Stock6Sign202009.objects.get(cStockID = mess)
            s9score = signs09.cAverageScore
            s9sign1 = signs09.cSign1
            s9sign2 = signs09.cSign2
            s9sign3 = signs09.cSign3
            s9sign4 = signs09.cSign4
            s9sign5 = signs09.cSign5
            s9sign6 = signs09.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s9score = None
            s9sign1 = None
            s9sign2 = None
            s9sign3 = None
            s9sign4 = None
            s9sign5 = None
            s9sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq3 = models.Stock6Sign2020Q3.objects.get(cStockID = mess)
            q3score = signsq3.cAverageScore
            q3sign1 = signsq3.cSign1
            q3sign2 = signsq3.cSign2
            q3sign3 = signsq3.cSign3
            q3sign4 = signsq3.cSign4
            q3sign5 = signsq3.cSign5
            q3sign6 = signsq3.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q3score = None
            q3sign1 = None
            q3sign2 = None
            q3sign3 = None
            q3sign4 = None
            q3sign5 = None
            q3sign6 = None
   

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs11 = models.Stock6Sign202011.objects.get(cStockID = mess)
            s11score = signs11.cAverageScore
            s11sign1 = signs11.cSign1
            s11sign2 = signs11.cSign2
            s11sign3 = signs11.cSign3
            s11sign4 = signs11.cSign4
            s11sign5 = signs11.cSign5
            s11sign6 = signs11.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s11score = None
            s11sign1 = None
            s11sign2 = None
            s11sign3 = None
            s11sign4 = None
            s11sign5 = None
            s11sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq4 = models.Stock6Sign2020Q4.objects.get(cStockID = mess)
            q4score = signsq4.cAverageScore
            q4sign1 = signsq4.cSign1
            q4sign2 = signsq4.cSign2
            q4sign3 = signsq4.cSign3
            q4sign4 = signsq4.cSign4
            q4sign5 = signsq4.cSign5
            q4sign6 = signsq4.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q4score = None
            q4sign1 = None
            q4sign2 = None
            q4sign3 = None
            q4sign4 = None
            q4sign5 = None
            q4sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs01 = models.Stock6Sign202101.objects.get(cStockID = mess)
            s1score = signs01.cAverageScore
            s1sign1 = signs01.cSign1
            s1sign2 = signs01.cSign2
            s1sign3 = signs01.cSign3
            s1sign4 = signs01.cSign4
            s1sign5 = signs01.cSign5
            s1sign6 = signs01.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s1score = None
            s1sign1 = None
            s1sign2 = None
            s1sign3 = None
            s1sign4 = None
            s1sign5 = None
            s1sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs02 = models.Stock6Sign202102.objects.get(cStockID = mess)
            s2score = signs02.cAverageScore
            s2sign1 = signs02.cSign1
            s2sign2 = signs02.cSign2
            s2sign3 = signs02.cSign3
            s2sign4 = signs02.cSign4
            s2sign5 = signs02.cSign5
            s2sign6 = signs02.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2score = None
            s2sign1 = None
            s2sign2 = None
            s2sign3 = None
            s2sign4 = None
            s2sign5 = None
            s2sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs03 = models.Stock6Sign202103.objects.get(cStockID = mess)
            s3score = signs03.cAverageScore
            s3sign1 = signs03.cSign1
            s3sign2 = signs03.cSign2
            s3sign3 = signs03.cSign3
            s3sign4 = signs03.cSign4
            s3sign5 = signs03.cSign5
            s3sign6 = signs03.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s3score = None
            s3sign1 = None
            s3sign2 = None
            s3sign3 = None
            s3sign4 = None
            s3sign5 = None
            s3sign6 = None

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs04 = models.Stock6Sign202104.objects.get(cStockID = mess)
            s4score = signs04.cAverageScore
            s4sign1 = signs04.cSign1
            s4sign2 = signs04.cSign2
            s4sign3 = signs04.cSign3
            s4sign4 = signs04.cSign4
            s4sign5 = signs04.cSign5
            s4sign6 = signs04.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s4score = None
            s4sign1 = None
            s4sign2 = None
            s4sign3 = None
            s4sign4 = None
            s4sign5 = None
            s4sign6 = None    

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs05 = models.Stock6Sign202105.objects.get(cStockID = mess)
            s5score = signs05.cAverageScore
            s5sign1 = signs05.cSign1
            s5sign2 = signs05.cSign2
            s5sign3 = signs05.cSign3
            s5sign4 = signs05.cSign4
            s5sign5 = signs05.cSign5
            s5sign6 = signs05.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s5score = None
            s5sign1 = None
            s5sign2 = None
            s5sign3 = None
            s5sign4 = None
            s5sign5 = None
            s5sign6 = None 

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs06 = models.Stock6Sign202106.objects.get(cStockID = mess)
            s2106score = signs06.cAverageScore
            s2106sign1 = signs06.cSign1
            s2106sign2 = signs06.cSign2
            s2106sign3 = signs06.cSign3
            s2106sign4 = signs06.cSign4
            s2106sign5 = signs06.cSign5
            s2106sign6 = signs06.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2106score = None
            s2106sign1 = None
            s2106sign2 = None
            s2106sign3 = None
            s2106sign4 = None
            s2106sign5 = None
            s2106sign6 = None


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs07 = models.Stock6Sign202107.objects.get(cStockID = mess)
            s2107score = signs07.cAverageScore
            s2107sign1 = signs07.cSign1
            s2107sign2 = signs07.cSign2
            s2107sign3 = signs07.cSign3
            s2107sign4 = signs07.cSign4
            s2107sign5 = signs07.cSign5
            s2107sign6 = signs07.cSign6
            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s2107score = None
            s2107sign1 = None
            s2107sign2 = None
            s2107sign3 = None
            s2107sign4 = None
            s2107sign5 = None
            s2107sign6 = None
    else:
        mess = "N/A"

        s2107score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOne.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6getOneAdmin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容


        #收集資料創建時間
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        stock_name =func2.GetStockName(mess) 


        #############存取過去每個月資料庫資料#####################################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs06 = models.Stock6Sign202006.objects.get(cStockID = mess)
            s6score = signs06.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s6score = 'N/A'




        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq2 = models.Stock6Sign2020Q2.objects.get(cStockID = mess)
            q2score = signsq2.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q2score = 'N/A'




        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs08 = models.Stock6Sign202008.objects.get(cStockID = mess)
            s8score = signs08.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s8score = 'N/A'




        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs09 = models.Stock6Sign202009.objects.get(cStockID = mess)
            s9score = signs09.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s9score = 'N/A'
   
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq3 = models.Stock6Sign2020Q3.objects.get(cStockID = mess)
            q3score = signsq3.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            q3score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs11 = models.Stock6Sign202011.objects.get(cStockID = mess)
            s11score = signs11.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存         
            s11score = 'N/A'
######
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signsq4 = models.Stock6Sign2020Q4.objects.get(cStockID = mess)
            q4score = signsq4.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
              
            q4score = 'N/A'
        
        
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs01 = models.Stock6Sign202101.objects.get(cStockID = mess)
            s1score = signs01.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s1score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs02 = models.Stock6Sign202102.objects.get(cStockID = mess)
            s2score = signs02.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs03 = models.Stock6Sign202103.objects.get(cStockID = mess)
            s3score = signs03.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s3score = 'N/A'            


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs04 = models.Stock6Sign202104.objects.get(cStockID = mess)
            s4score = signs04.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s4score = 'N/A'  

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs05 = models.Stock6Sign202105.objects.get(cStockID = mess)
            s5score = signs05.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s5score = 'N/A' 

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2106 = models.Stock6Sign202106.objects.get(cStockID = mess)
            s2106score = signs2106.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2106score = 'N/A' 
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2107 = models.Stock6Sign202107.objects.get(cStockID = mess)
            s2107score = signs2107.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2107score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2108 = models.Stock6Sign202108.objects.get(cStockID = mess)
            s2108score = signs2108.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2108score = 'N/A'



        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2109 = models.Stock6Sign202109.objects.get(cStockID = mess)
            s2109score = signs2109.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2109score = 'N/A'


        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2110 = models.Stock6Sign202110.objects.get(cStockID = mess)
            s2110score = signs2110.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2110score = 'N/A'

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2111 = models.Stock6Sign202111.objects.get(cStockID = mess)
            s2111score = signs2111.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2111score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2112 = models.Stock6Sign202112.objects.get(cStockID = mess)
            s2112score = signs2112.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2112score = 'N/A'
            
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2201 = models.Stock6Sign202201.objects.get(cStockID = mess)
            s2201score = signs2201.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2201score = 'N/A'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            signs2202 = models.Stock6Sign202202.objects.get(cStockID = mess)
            s2202score = signs2202.cAverageScore


            
        except:  #針對沒有的股票，抓取資料存入資料庫
            
            s2202score = 'N/A'
###############################################################
            ########寫入資料庫########################
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            signs = models.Stock6Sign202203.objects.get(cStockID=mess)
            signs.sCore2006 = s6score
            signs.sCore20Q2 = q2score
            signs.sCore2008 = s8score
            signs.sCore2009 = s9score 
            signs.sCore20Q3 = q3score             
            signs.sCore2011 = s11score 
            signs.sCore20Q4 = q4score 
            signs.sCore2101 = s1score 
            signs.sCore2102 = s2score  
            signs.sCore2103 = s3score 
            signs.sCore2104 = s4score 
            signs.sCore2105 = s5score 
            signs.sCore2106 = s2106score  #改名稱 加年份
            signs.sCore2107 = s2107score  #改名稱 加年份
            signs.sCore2108 = s2108score  #改名稱 加年份
            signs.sCore2109 = s2109score  #改名稱 加年份
            signs.sCore2110 = s2110score  #改名稱 加年份   
            signs.sCore2111 = s2111score  #改名稱 加年份 
            signs.sCore2112 = s2112score  #改名稱 加年份 
            signs.sCore2201 = s2201score  #改名稱 加年份 
            signs.sCore2202 = s2201score  #改名稱 加年份 
            
            signs.save() 
            ###################


        except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
            signs = models.Stock6Sign202203.objects.create(cStockID=mess, cStockName=stock_name, sCore2006=s6score, sCore20Q2=q2score, sCore2008=s8score, sCore2009=s9score, sCore20Q3=q3score, sCore2011=s11score, sCore20Q4=q4score, sCore2101=s1score, sCore2102=s2score, sCore2103=s3score, sCore2104=s4score, sCore2105=s5score, sCore2106=s2106score, sCore2107=s2107score, sCore2108=s2108score, sCore2109=s2109score, sCore2110=s2110score, sCore2111=s2111score, sCore2112=s2112score, sCore2201=s2201score, sCore2202=s2202score)
            signs.save() 

    else:
        mess = "N/A"

        s2202score = "N/A"
        s2201score = "N/A"
        s2112score = "N/A"
        s2111score = "N/A"
        s2110score = "N/A"
        s2109score = "N/A"
        s2108score = "N/A"
        s2106score = "N/A"
        s5score = "N/A"
        s4score = "N/A"
        s3score = "N/A"
        s2score = "N/A"
        s1score = "N/A"
        q4score = "N/A"
        s11score = "N/A"
        q3score = "N/A"
        s9score = "N/A"
        s8score = "N/A"
        q2score = "N/A"
        s6score = "N/A"
        
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6getOneAdmin.html", locals())

######################回溯之前資料#####################

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminTB1M(request):  #查詢六大指標，給管理人使用 回溯一個月

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        
        
        
        #以下收集六大指標的各評分
        #只有營收func5.其他正常func2
        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func5.stock_RevTB(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2.stock_Cashflow(mess)
     
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock, stock_name =func5.stock6scoreTB2(mess, result1, result2, result3, result4, result5, result6)  #只有回溯營收一個月 TB2
  
    
        #寫入不同資料庫
        if (mess_db == '2105'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202105.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202105.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()    

        elif (mess_db == '2104'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202104.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202104.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()         

       
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminTB1M.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminTB1S(request):  #查詢六大指標，給管理人使用 回溯一季 但 當月

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        #以下收集六大指標的各評分





        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func5.stock_ProfTB(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2.stock_Rev(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func5.stock_NetIncTB(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func5.stock_EPSTB(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func5.stock_InvTOTB(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8 = func5.stock_CashflowTB(mess)  #Func5只有到f8, Func2到f10，請注意。

        #取得六大指標平均分數

        average6stock, stock_name =func5.stock6scoreTB2(mess, result1, result2, result3, result4, result5, result6)  #只有回溯營收一個月 TB2
     
        
        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
   
        
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間

        #寫入不同資料庫
        if (mess_db == '2103'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202103.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202103.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()   

        elif (mess_db == '2102'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202102.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202102.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()         

        elif (mess_db == '2101'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202101.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202101.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()
                


               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminTB1S.html", locals())    


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminTB1S1M(request):  #查詢六大指標，給管理人使用 回溯一季 但 當月

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        #以下收集六大指標的各評分





        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func5.stock_ProfTB(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func5.stock_RevTB(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func5.stock_NetIncTB(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func5.stock_EPSTB(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func5.stock_InvTOTB(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8 = func5.stock_CashflowTB(mess)  #Func5只有到f8, Func2到f10，請注意。

        #取得六大指標平均分數

        average6stock, stock_name =func5.stock6scoreTB2(mess, result1, result2, result3, result4, result5, result6)  #只有回溯營收一個月 TB2
     
        
        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
   
        
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        #寫入不同資料庫
        if (mess_db == '2011'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202011.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202011.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()   

        elif (mess_db == '20q3'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q3.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q3.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()         

        elif (mess_db == '2009'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202009.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202009.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()
                
        elif (mess_db == '2008'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202008.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202008.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()

        elif (mess_db == '20q2'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q2.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()               


        elif (mess_db == '2006'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202006.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202006.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save() 
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminTB1S1M.html", locals())
############


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminTB2M(request):  #查詢六大指標，給管理人使用 回溯2個月

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        #以下收集六大指標的各評分

        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func5x2.stock_RevTBx2(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2.stock_Cashflow(mess)
     

  
     
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數
        average6stock, stock_name =func5x2.stock6scoreTB2x2(mess, result1, result2, result3, result4, result5, result6)  #只有回溯營收一個月 TB2
  
                #寫入不同資料庫
        if (mess_db == '2011'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202011.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202011.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()   
                
        elif (mess_db == '20q3'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q3.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q3.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()         

        elif (mess_db == '2009'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202009.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202009.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()
                
        elif (mess_db == '2008'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202008.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202008.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()

        elif (mess_db == '20q2'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q2.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()               


        elif (mess_db == '2006'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202006.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202006.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save() 
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminTB2M.html", locals())



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stock6AdminTB1S2M(request):  #查詢六大指標，給管理人使用 回溯一季 但 當月

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess_db = request.POST['dbname']  #取得表單輸入內容
        #以下收集六大指標的各評分





        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func5.stock_ProfTB(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func5x2.stock_RevTBx2(mess)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func5.stock_NetIncTB(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func5.stock_EPSTB(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func5.stock_InvTOTB(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8 = func5.stock_CashflowTB(mess)  #Func5只有到f8, Func2到f10，請注意。

        #取得六大指標平均分數

        average6stock, stock_name =func5.stock6scoreTB2(mess, result1, result2, result3, result4, result5, result6)  #只有回溯營收一個月 TB2
     
        
        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
   
        
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #寫入不同資料庫
        if (mess_db == '2011'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202011.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202011.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()           
        
        
        elif (mess_db == '20q3'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q3.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q3.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()         

        elif (mess_db == '2009'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202009.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202009.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()
                
        elif (mess_db == '2008'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202008.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202008.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()

        elif (mess_db == '20q2'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign2020Q2.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign2020Q2.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save()               


        elif (mess_db == '2006'):
            
             #以下寫入資料庫
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
                sign = models.Stock6Sign202006.objects.get(cStockID=mess)


            except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
                sign = models.Stock6Sign202006.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
                sign.save() 
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6AdminTB1S2M.html", locals())














def stock6new(request):  #改良版六大指標，可輸入最新營收YoY
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['newestRev']  #取得表單輸入內容
        
        result1, ProfitN, Profit, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9 = func2.stock_Prof(mess)
        result2, RevN, Rev, b1N, b2N, b3N, b4N, b5N, b6N, b1, b2, b3, b4, b5, b6, b0 = func2.stock_Revnew(mess, mess2)
        result3, NetIncomeN, NetIncome, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8 = func2.stock_NetInc(mess)
        result4, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2.stock_EPS(mess)
        result5, InvTON, InvTO, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2.stock_InvTO(mess)
        result6, CashFlowN, CashFlow, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8 = func2.stock_Cashflow(mess)
        
        stock_description2, average6stock =func2.stock6scorenew(mess, mess2)
        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        result1 = "營益率指標尚未計算出來！"
        result2 = "營收指標尚未計算出來！"
        result3 = "淨利指標尚未計算出來！"
        result4 = "EPS指標尚未計算出來！"
        result5 = "存貨週轉率指標尚未計算出來！"
        result6 = "現金流量指標尚未計算出來！"
        average6stock = "總平均尚未計算出來！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stock6new.html", locals())



def stockprice(request):    #查詢股價
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容

        stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice =func2.stockdef(mess)
        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockprice.html", locals())







@permission_required('myapp.Can_enter_stockPERseg', login_url='/login2/')
def stockPERseg(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =func3.PERseg(mess, mess2)
        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERseg.PERseg(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        
        #H0為今年最高價，Satisf算出距離多少
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg.html", locals())


@permission_required('myapp.Can_enter_stockPERseg', login_url='/login2/')
def stockPERsegx(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)
        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =func3x.PERseg(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        
        #H0為今年最高價，Satisf算出距離多少
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegx.html", locals())


@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERsegxDB(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, eps1N = PERsegxDB.PERsegxDB(mess, mess2)  #, Predict_EPS0
        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =func3x.PERseg(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        
        #H0為今年最高價，Satisf算出距離多少
        '''
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'
            '''

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegxDB.html", locals())

@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg2(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid']
        #mess3 = request.POST['epsid']
        #mess4 = request.POST['pehighid']
        #mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        #Predict_high_price = str(round(float(mess3)*float(mess4),2))
        #Predict_low_price = str(round(float(mess3)*float(mess4),2))
        
        #H0為今年最高價，Satisf算出距離多少
        #Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        #if (float(H0) > Predict_high_price*0.95):
            #highif = 'Yes'
        #else:
            #highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg2.html", locals())

@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg2xDB(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid']
        #mess3 = request.POST['epsid']
        #mess4 = request.POST['pehighid']
        #mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, eps1N = PERsegxDB.PERsegxDB(mess, mess2)  #, Predict_EPS0

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        #Predict_high_price = str(round(float(mess3)*float(mess4),2))
        #Predict_low_price = str(round(float(mess3)*float(mess4),2))
        
        #H0為今年最高價，Satisf算出距離多少
        #Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        #if (float(H0) > Predict_high_price*0.95):
            #highif = 'Yes'
        #else:
            #highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg2xDB.html", locals())


@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg2b(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid2']  #取得表單輸入內容
        mess0 = request.POST['stockid2']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid2']
        mess3 = request.POST['epsid']
        mess4 = request.POST['pehighid']
        mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, openx, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)

        stock_name = func2.GetStockName(mess)
        
        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =func3.PERseg(mess, mess2)
        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  = PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        Predict_high_price2 = round(float(mess3)*float(mess4),2)
        Predict_low_price2 = round(float(mess3)*float(mess5),2)
        
        New_Predict_high_price2 = str(Predict_high_price2)        
        New_Predict_low_price2 = str(Predict_low_price2)
        
        New_yahoo_latest_tradePrice = float(yahoo_latest_tradePrice)

        up_profit2 = round((Predict_high_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)
        down_loss2 = round((Predict_low_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)                      
        New_up_profit2 = str(up_profit2*100) + '%'
        New_down_loss2 = str(down_loss2*100) + '%'

        risk_reward2 = str(round(abs(up_profit2/down_loss2),2))

    else:
        mess3 = "尚未送出！"
        mess4 = "尚未送出！"
        mess5 = "尚未送出！"
        #mess2 = "該表單尚未送出！2"
        
    return render(request, "stockPERseg2b.html", locals())        
@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg2bxDB(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid2']  #取得表單輸入內容
        mess0 = request.POST['stockid2']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid2']
        mess3 = request.POST['epsid']
        mess4 = request.POST['pehighid']
        mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, openx, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)

        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, eps1N = PERsegxDB.PERsegxDB(mess, mess2)  #, Predict_EPS0

        
        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =func3.PERseg(mess, mess2)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  = PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        Predict_high_price2 = round(float(mess3)*float(mess4),2)
        Predict_low_price2 = round(float(mess3)*float(mess5),2)
        
        New_Predict_high_price2 = str(Predict_high_price2)        
        New_Predict_low_price2 = str(Predict_low_price2)
        
        New_yahoo_latest_tradePrice = float(yahoo_latest_tradePrice)

        up_profit2 = round((Predict_high_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)
        down_loss2 = round((Predict_low_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)                      
        New_up_profit2 = str(up_profit2*100) + '%'
        New_down_loss2 = str(down_loss2*100) + '%'

        risk_reward2 = str(round(abs(up_profit2/down_loss2),2))
        



    else:
        mess3 = "尚未送出！"
        mess4 = "尚未送出！"
        mess5 = "尚未送出！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg2bxDB.html", locals())





@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg3(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']
        #mess3 = request.POST['epsid']
        #mess4 = request.POST['pehighid']
        #mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_description, latest_trade_date, openx, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        #Predict_high_price = str(round(float(mess3)*float(mess4),2))
        #Predict_low_price = str(round(float(mess3)*float(mess4),2))
        
        #H0為今年最高價，Satisf算出距離多少
        #Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        #if (float(H0) > Predict_high_price*0.95):
            #highif = 'Yes'
        #else:
            #highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg3.html", locals())

@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg3xDB(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']
        #mess3 = request.POST['epsid']
        #mess4 = request.POST['pehighid']
        #mess5 = request.POST['pelowid']
        #mess6 = request.POST['monthid']
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_description, latest_trade_date, openx, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, eps1N = PERsegxDB.PERsegxDB(mess, mess2)  #, Predict_EPS0

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        #Predict_high_price = str(round(float(mess3)*float(mess4),2))
        #Predict_low_price = str(round(float(mess3)*float(mess4),2))
        
        #H0為今年最高價，Satisf算出距離多少
        #Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        #if (float(H0) > Predict_high_price*0.95):
            #highif = 'Yes'
        #else:
            #highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg3xDB.html", locals())

@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERseg3b(request):   #查詢本益比區間，自設參數
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid2']  #取得表單輸入內容
        mess0 = request.POST['stockid2']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid2']
        
        mess3 = request.POST['netaverage4id']
        
        mess4 = request.POST['pehighid']
        mess5 = request.POST['pelowid']
        
        mess7 = request.POST['revyoyid']

        mess8 = request.POST['stockcapitalid']
    
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_description, latest_trade_date, openx, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, eps1N =PERseg3.PERseg3(mess, mess2, mess7)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average


        pNet4Average2 = str(round(float(mess3)*100,2))+'%'
        
        Net_Predict2 = round(Rev_Predict*float(mess3),6)
        
        Predict_EPS2 = round(Net_Predict2/float(mess8)*10,2)
        #Predict_EPS2 = round(Net_Predict2/capital_stock*10,2)
        
        Predict_high_price2 = round(Predict_EPS2*float(mess4),2)
        Predict_low_price2 = round(Predict_EPS2*float(mess5),2)
        
        New_Predict_high_price2 = str(Predict_high_price2)        
        New_Predict_low_price2 = str(Predict_low_price2)
        
        New_yahoo_latest_tradePrice = float(yahoo_latest_tradePrice)

        up_profit2 = round((Predict_high_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)
        down_loss2 = round((Predict_low_price2 - New_yahoo_latest_tradePrice)/New_yahoo_latest_tradePrice,2)                      
        New_up_profit2 = str(up_profit2*100) + '%'
        New_down_loss2 = str(down_loss2*100) + '%'

        risk_reward2 = str(round(abs(up_profit2/down_loss2),2))        
    
        



    else:
        mess4 = "尚未送出！"
        mess5 = "尚未送出！"
        mess3 = "尚未送出！"
        #mess7 = "尚未送出！"
        #mess8 = "尚未送出！"
        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERseg3b.html", locals())





@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERsegDiv(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name, s2020div, s2019div, s2018div, s2017div, s2016div, s2015div, x2020div, x2019div, x2018div, x2017div, x2016div, x2015div = func4.Dividend(mess)  #, x2014div, s2014div

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =PERsegx.PERsegx(mess, mess2)

        if eps1N == '2020':  #2021/3/14 新增更改  Q4財報已公佈
            
            nH1 = round(float(H1)*(1 + x2020div/10) + s2020div,2)  #還權股價H
            nH2 = round(float(H2)*(1 + x2019div/10) + s2019div,2)
            nH3 = round(float(H3)*(1 + x2018div/10) + s2018div,2)
            nH4 = round(float(H4)*(1 + x2017div/10) + s2017div,2)
            nH5 = round(float(H5)*(1 + x2016div/10) + s2016div,2)
            nH6 = round(float(H6)*(1 + x2015div/10) + s2015div,2)

            nL1 = round(float(L1)*(1 + x2020div/10) + s2020div,2)  #還權股價L
            nL2 = round(float(L2)*(1 + x2019div/10) + s2019div,2)
            nL3 = round(float(L3)*(1 + x2018div/10) + s2018div,2)
            nL4 = round(float(L4)*(1 + x2017div/10) + s2017div,2)
            nL5 = round(float(L5)*(1 + x2016div/10) + s2016div,2)
            nL6 = round(float(L6)*(1 + x2015div/10) + s2015div,2)
        
        #nPER_H1 = round(nH1/float(eps1),2)   #還權後本益比H
            nPER_H1 = round(nH1/float(eps1),2)
            nPER_H2 = round(nH2/float(eps2),2)
            nPER_H3 = round(nH3/float(eps3),2)
            nPER_H4 = round(nH4/float(eps4),2)
            nPER_H5 = round(nH5/float(eps5),2)        

        #nPER_L1 = round(nL1/float(eps1),2)   #還權後本益比L
            nPER_L1 = round(nL1/float(eps1),2)
            nPER_L2 = round(nL2/float(eps2),2)
            nPER_L3 = round(nL3/float(eps3),2)
            nPER_L4 = round(nL4/float(eps4),2)
            nPER_L5 = round(nL5/float(eps5),2)
        
            nPER_H_average = round((nPER_H1 + nPER_H2 + nPER_H3 + nPER_H4 + nPER_H5)/5, 2)
            nPER_L_average = round((nPER_L1 + nPER_L2 + nPER_L3 + nPER_L4 + nPER_L5)/5, 2)
        
            nPER_H = min(nPER_H1, nPER_H_average)
            nPER_L = min(nPER_L1, nPER_L_average)

        elif eps1N == '2019':  #2021/3/14 新增更改  Q4財報未公佈，所以2020EPS尚未出現欄位
            
            nH1 = round(float(H1)*(1 + x2020div/10) + s2020div,2)  #還權股價H
            nH2 = round(float(H2)*(1 + x2019div/10) + s2019div,2)
            nH3 = round(float(H3)*(1 + x2018div/10) + s2018div,2)
            nH4 = round(float(H4)*(1 + x2017div/10) + s2017div,2)
            nH5 = round(float(H5)*(1 + x2016div/10) + s2016div,2)
            nH6 = round(float(H6)*(1 + x2015div/10) + s2015div,2)

            nL1 = round(float(L1)*(1 + x2020div/10) + s2020div,2)  #還權股價L
            nL2 = round(float(L2)*(1 + x2019div/10) + s2019div,2)
            nL3 = round(float(L3)*(1 + x2018div/10) + s2018div,2)
            nL4 = round(float(L4)*(1 + x2017div/10) + s2017div,2)
            nL5 = round(float(L5)*(1 + x2016div/10) + s2016div,2)
            nL6 = round(float(L6)*(1 + x2015div/10) + s2015div,2)
        
        #nPER_H1 = round(nH1/float(eps1),2)   #還權後本益比H
            nPER_H1 = round(nH2/float(eps1),2)
            nPER_H2 = round(nH3/float(eps2),2)
            nPER_H3 = round(nH4/float(eps3),2)
            nPER_H4 = round(nH5/float(eps4),2)
            nPER_H5 = round(nH6/float(eps5),2)        

        #nPER_L1 = round(nL1/float(eps1),2)   #還權後本益比L
            nPER_L1 = round(nL2/float(eps1),2)
            nPER_L2 = round(nL3/float(eps2),2)
            nPER_L3 = round(nL4/float(eps3),2)
            nPER_L4 = round(nL5/float(eps4),2)
            nPER_L5 = round(nL6/float(eps5),2)
        
            nPER_H_average = round((nPER_H1 + nPER_H2 + nPER_H3 + nPER_H4 + nPER_H5)/5, 2)
            nPER_L_average = round((nPER_L1 + nPER_L2 + nPER_L3 + nPER_L4 + nPER_L5)/5, 2)
        
            nPER_H = min(nPER_H1, nPER_H_average)
            nPER_L = min(nPER_L1, nPER_L_average)
        
        #H0為今年最高價，Satisf算出距離多少
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegDiv.html", locals())



#使用PERsegx
@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stockPERsegAdmin(request):   #查詢本益比區間，給管理人使用。
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']

        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #stock_description, latest_trade_date, open, close, high, low, thisYearGain, newest_Rev_month, stock_id_name, yahoo_latest_tradePrice, stock_name = func2.stockdef(mess)
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        #H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N  =func3.PERseg(mess, mess2)
        
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'
            
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            seg = models.StockPERseg202203.objects.get(cStockID=mess)

        except:  #針對沒有的股票，抓取資料存入資料庫
            seg = models.StockPERseg202203.objects.create(cStockID=mess, cStockName=stock_name, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegAdmin.html", locals())


@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERsegPEG(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, epsYoY1, epsYoY2, epsYoY3, epsYoY4, PER_H_YoY1, PER_H_YoY2, PER_H_YoY3, PER_H_YoY4, PEG_H1, PEG_H2, PEG_H3, PEG_H4, PEG_L1, PEG_L2, PEG_L3, PEG_L4, epsYoY0, PEG_H0, PEG_L0, PEG1_PredictPrice, PEG067_PredictPrice, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPSq, PER_Hq, PER_Lq, epsYoYq, PEG_Hq, PEG_Lq, eps1N, L0 =PERsegPEG.PERsegPEG(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        
        #H0為今年最高價，Satisf算出距離多少
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegPEG.html", locals())

@permission_required('myapp.Can_enter_VIPsOnly', login_url='/login2/')
def stockPERsegPEGxDB(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)


        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, epsYoY1, epsYoY2, epsYoY3, epsYoY4, PER_H_YoY1, PER_H_YoY2, PER_H_YoY3, PER_H_YoY4, PEG_H1, PEG_H2, PEG_H3, PEG_H4, PEG_L1, PEG_L2, PEG_L3, PEG_L4, epsYoY0, PEG_H0, PEG_L0, PEG1_PredictPrice, PEG067_PredictPrice, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPSq, PER_Hq, PER_Lq, epsYoYq, PEG_Hq, PEG_Lq, eps1N, L0 =PERsegPEGxDB.PERsegPEGxDB(mess, mess2)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
        '''
        #H0為今年最高價，Satisf算出距離多少
        Satisf = str(round((float(H0) - Predict_high_price)*100/Predict_high_price,2)) + '%'  #今年高點是否出現？滿足比率
        if (float(H0) > Predict_high_price*0.95):
            highif = 'Yes'
        else:
            highif = 'No'
            '''

        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #seg = models.StockPERseg.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg = models.StockPERseg.objects.create(cStockID=mess, cStockName=stock_name, cH1=H1, cL1=L1, cH2=H2, cL2=L2, cH3=H3, cL3=L3, cH4=H4, cL4=L4, cH5=H5, cL5=L5, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, cPER_H=PER_H, cPER_L=PER_L, cYoY6Average=rYoY6Average, cRevYoY=RevYoY, cNet1=Net1, cNet2=Net2, cNet3=Net3, cNet4=Net4, cNet4Average=Net4Average, cRev_Predict=Rev_Predict, cNet_Predict=Net_Predict, cCapital_stock=capital_stock, cPredict_EPS=Predict_EPS, cPredict_high_price=Predict_high_price, cPredict_low_price=Predict_low_price, cLatest_price=yahoo_latest_tradePrice, cNew_up_profit=New_up_profit, cNew_down_loss=New_down_loss, cRisk_reward=risk_reward, pubtime=realtime)
            #seg.save()

        
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        mess2 = "營收月份代號尚未送出！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegPEGxDB.html", locals())

############################################

@permission_required('myapp.Can_enter_stockPERseg', login_url='/login2/')
def stockPERsegStable(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        #mess2 = request.POST['monthid']

        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)

        PER_H1, PER_L1, PER_H2, PER_L2, PER_H3, PER_L3, PER_H4, PER_L4, PER_H5, PER_L5, PER_H_average, PER_L_average, P_Hw1, P_Hw2, P_Hw3, P_Hw4, P_Hw5, P_Lw1, P_Lw2, P_Lw3, P_Lw4, P_Lw5, PER_H_average4, PER_L_average4, P_Hx, P_Lx =func3.PERsegStable2(mess)
        #, pNet1, pNet2, pNet3, pNet4, pNet4Average
        #, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average
                
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"


        #mess2 = "該表單尚未送出！2"
    return render(request, "stockPERsegStable.html", locals())
######################

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def stockPERsegStableAdmin(request):   #查詢本益比區間，給付費使用者使用。
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        #mess2 = request.POST['monthid']

        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        stock_name = func2.GetStockName(mess)

        PER_H1, PER_L1, PER_H2, PER_L2, PER_H3, PER_L3, PER_H4, PER_L4, PER_H5, PER_L5, PER_H_average, PER_L_average, P_Hw1, P_Hw2, P_Hw3, P_Hw4, P_Hw5, P_Lw1, P_Lw2, P_Lw3, P_Lw4, P_Lw5, PER_H_average4, PER_L_average4, P_Hx, P_Lx =func3.PERsegStable2(mess)

        #PER_H1, PER_L1, PER_H2, PER_L2, PER_H3, PER_L3, PER_H4, PER_L4, PER_H5, PER_L5, PER_H_average, PER_L_average, P_Hw1, P_Hw2, P_Hw3, P_Hw4, P_Hw5, P_Lw1, P_Lw2, P_Lw3, P_Lw4, P_Lw5 = func3.PERsegStable(mess)
 
        #PER_H1, PER_L1, PER_H2, PER_L2, PER_H3, PER_L3, PER_H4, PER_L4, PER_H5, PER_L5, PER_H_average, PER_L_average, P_Hw1, P_Hw2, P_Hw3, P_Hw4, P_Hw5, P_Lw1, P_Lw2, P_Lw3, P_Lw4, P_Lw5, PER_H_average4, PER_L_average4, P_Hx, P_Lx = func3.PERsegStable2(mess)
        
                        
        if (-0.3 < P_Hw1 < 0.3 and -0.3 < P_Hw2 < 0.3 and -0.3 < P_Hw3 < 0.3 and -0.3 < P_Hw4 < 0.3 and -0.3 < P_Hw5 < 0.3) and (-0.3 < P_Lw1 < 0.3 and -0.3 < P_Lw2 < 0.3 and -0.3 < P_Lw3 < 0.3 and -0.3 < P_Lw4 < 0.3 and -0.3 < P_Lw5 < 0.3):
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
                sta = models.StockPERsegStable2021Q4.objects.get(cStockID=mess)
        
                sta.cPER_H1=PER_H1
                sta.cPER_H2=PER_H2
                sta.cPER_H3=PER_H3
                sta.cPER_H4=PER_H4
                sta.cPER_H5=PER_H5
                
                sta.cPER_L1=PER_L1
                sta.cPER_L2=PER_L2
                sta.cPER_L3=PER_L3
                sta.cPER_L4=PER_L4
                sta.cPER_L5=PER_L5
                
                sta.cPER_H_average=PER_H_average
                sta.cPER_L_average=PER_L_average
                
                #sta.cP_Hw1=P_Hw1
                #sta.cP_Hw2=P_Hw2
                #sta.cP_Hw3=P_Hw3
                #sta.cP_Hw4=P_Hw4
                #sta.cP_Hw5=P_Hw5

                #sta.cP_Lw1=P_Lw1
                #sta.cP_Lw2=P_Lw2
                #sta.cP_Lw3=P_Lw3
                #sta.cP_Lw4=P_Lw4
                #sta.cP_Lw5=P_Lw5

                sta.pubtime=realtime
                sta.save()
                
                

            except:  #針對沒有的股票，抓取資料存入資料庫
                sta = models.StockPERsegStable2021Q4.objects.create(cStockID=mess, cStockName=stock_name, cPER_H1=PER_H1, cPER_L1=PER_L1, cPER_H2=PER_H2, cPER_L2=PER_L2, cPER_H3=PER_H3, cPER_L3=PER_L3, cPER_H4=PER_H4, cPER_L4=PER_L4, cPER_H5=PER_H5, cPER_L5=PER_L5, cPER_H_average=PER_H_average, cPER_L_average=PER_L_average, pubtime=realtime)
                                                                    #, cP_Hw1=P_Hw1, cP_Hw2=P_Hw2, cP_Hw3=P_Hw3, cP_Hw4=P_Hw4, cP_Hw5=P_Hw5, cP_Lw1=P_Lw1, cP_Lw2=P_Lw2, cP_Lw3=P_Lw3, cP_Lw4=P_Lw4, cP_Lw5=P_Lw5, pubtime=realtime)
                sta.save()

                
                
  
    else:
        mess = "台股代號尚未送出！"


 
    return render(request, "stockPERsegStableAdmin.html", locals())


###############




##################################範例
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202009test(request):
    
    tse1 = ['2330','3034']
    signs = Stock6Sign202009.objects.filter(cStockID__in = tse1).order_by('cStockID')
    return render(request, "stock6listall202009test.html", locals())

################################################################
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6Concepts(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['groupid']  #取得表單輸入內容
        



    else:
        mess = "N/A"


    return render(request, "stock6Concepts.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
#def stock6listall202102Concepts(request, mess):
def stock6listallConcepts(request, mess):
    #拜登概念股
    con1 = ['2330','2454','3034','6488','3661','1304','3665','1536','1414','1444','1752','1701','4735','2101']   
    #5G下游公司概念股
    con2 = ['5299','6435','3317','8261']
    #5G中游公司概念股  
    con3 = ['5388','2345','3380','4906','2332','3062','3704','3234','3419','3596','4977','6674','2314','6426','6470','6152','6285','3163','2485','3491','6530','3081','2317']
    #5G上游公司概念股    
    con4 = ['2330','5274','3105','2379','2383','2313','8086','3152','6278','5439','8358','6274','2454','2455','4991','6269','4958','5469','2367','3044','2449','8039','6213','6451','3037','2368','4968','3450','8213','3221','6191','8046','3189','4971','5475','3363','6153','2316','5349','3016','1815','3707']
    #CCL產業概念股   
    con5 = ['6213','8358','2383','6274']
    #砷化鎵概念股 
    con6 = ['2455','3081','3105','4971','4991','8086']
    #氮化鎵概念股
    con7 = ['6488','3016','2303','5347','3105','4991','3707']
    #記憶體模組廠概念股   
    con8 = ['3260','4967','8271']
    #小米、OPPO鏈概念股    
    con9 = ['2313','2356','2409','2454','3042','3630','4915','4958']
    #NB、伺服器概念股  
    con10 = ['2383','2376','3231','2368','6274','6213','3515','2377','6669','2356','2353','2357']


    #3D列印概念股
    con11 = ['3504','2352','2344','6188','8081','1785','2436','3583','2337','2388','2049','2373','6123','4974','5371','3005','3570','8064','3022','5443','6202','4919','1784','3663','3231','3706','8416','2356','5351','2395','3450','2401','2312','1326','3011','6138','4722','4526','1597','1717','5474','1312','9105']
    #3D感測概念股
    con12 = ['6451','2448','2455','3630','4971','8086','6147','3406','8016','6271','3008','6209','2317','3019','2330','3059','2360','3227','3374','5351','3450','3105','3234']
    #3D顯示概念股    
    con13 = ['3504','4946','5478','3083','3687','2308','2352','6188','6169','3546','6180','4994','2349','2317','2385','3019','6161','5203','5312','3034','2376','2362','1813','5371','6220','2353','2454','2323','2301','8183','1504','3050','1409','3231','3046','2324','6150','2357','2489','8215','3086','2377','2409','3545','3481','6111','3293','5474','2465','6225','3073']
    #3T概念股
    con14 = ['2455','8086','4147','2823','2891','3105','1760','4162','2886','2882']
    #4K2K電視概念股 
    con15 = ['5283','2448','8081','2379','6147','3541','2317','5234','3034','5371','6512','5347','2353','6278','2454','4933','3535','6176','2357','2489','2409','3481','8150','6432']
    
    #5G概念股
    con16 = ['3324','4909','3338','6153','8011','4989','6451','3596','3443','8358','3289','2455','4977','6230','2314','8046','5274','4968','4971','8086','6426','2368','3025','2379','2345','6588','8112','3081','6147','5388','4958','8016','3711','3163','3008','6530','8155','6269','6510','2317','3528','3062','2383','4939','3035','2330','2316','3045','2412','6672','6190','5289','6245','8299','6263','3363','4991','3152','6213','6568','8028','4915','2353','2454','3587','4904','2059','2301','8039','5469','2449','3558','3221','2444','2382','2419','6166','6146','3231','2356','4927','4979','3491','2395','3450','6470','3694','3380','2498','6257','3704','3189','4576','2324','5439','6683','2485','3682','6274','6415','3105','6285','3144','6411','3042','2357','3419','4526','3037','3481','3466','4906','3645','2332','3234','8101','5349']
    #802.11ac概念股
    con17 = ['3596','2455','8086','2379','2345','5388','3062','6263','3152','3047','6216','2454','2449','3558','6146','6470','3694','3380','8176','2498','3704','3105','6285','2357','4906','2332']
    #ABC概念股
    con18 = ['3443','6230','2345','6214','2330','2454','2382','8099','2356','3661']
    #Amazon概念股
    con19 = ['3443','3362','3630','3141','2345','2436','3008','3259','3035','2330','6290','3023','2439','4919','2356','5351','2395','8069','6412','3661','3094']
    #AMD概念股
    con20 = ['3017','6435','3653','8358','3048','8046','3533','3041','2405','3711','5299','2303','2364','2388','3035','2330','2363','3515','2376','5410','6265','3005','2353','6118','2449','2382','3033','3231','2356','5351','2331','6412','3317','6150','6138','6411','6113','2357','2377','6171','3037','5269','3032','6669']

    #AMOLED概念股
    con21 = ['5245','8383','8112','2349','2464','3049','5443','6196','8096','6456','3673','2409','3481']
    #Apple iPhone 8系列概念股
    con22 = ['6153','2308','2344','2313','8086','8383','5457','2392','3406','4958','3008','6269','2317','3311','6462','2330','2354','2464','4938','6664','3149','2360','2439','2454','4966','3227','2301','5443','3374','2449','2382','3231','2610','3189','6456','3105','3042','3673','2409','3037','4943']
    #Apple iPhone SE2概念股
    con23 = ['2455','2313','6147','3406','3008','2317','2383','2337','2330','4938','2439','6278','3105','3042','3673']
    #Apple iPhone XR系列概念股
    con24 = ['2313','3308','6147','4958','6121','3008','6269','2317','2330','2354','4938','2439','3037']
    #Apple iPhone XS/Max系列概念股
    con25 = ['2313','3008','2317','2330','2354','2412','3045','4938','4904','2430']
    #Apple Pay概念股
    con26 = ['3687','3048','2379','6180','2436','5490','2330','6206','8114','2482','2454','6202','2458','2881','2838','2891','2887','8103','2884','6285','2882','6155','3529','8105','3094']


    DB = Stock6Sign202203

    if (mess == "con1"):
        Xgroup = '拜登概念股'
        signs = DB.objects.filter(cStockID__in = con1).order_by('-cAverageScore')                
    elif (mess == "con2"):
        Xgroup = '5G下游公司概念股'
        signs = DB.objects.filter(cStockID__in = con2).order_by('-cAverageScore')
    elif (mess == "con3"):
        Xgroup = '5G中游公司概念股'
        signs = DB.objects.filter(cStockID__in = con3).order_by('-cAverageScore')
    elif (mess == "con4"):
        Xgroup = '5G上游公司概念股'
        signs = DB.objects.filter(cStockID__in = con4).order_by('-cAverageScore')
    elif (mess == "con5"):
        Xgroup = 'CCL產業概念股'
        signs = DB.objects.filter(cStockID__in = con5).order_by('-cAverageScore')
    elif (mess == "con6"):
        Xgroup = '氮化鎵概念股'
        signs = DB.objects.filter(cStockID__in = con6).order_by('-cAverageScore')
    elif (mess == "con7"):
        Xgroup = '氮化鎵概念股'
        signs = DB.objects.filter(cStockID__in = con7).order_by('-cAverageScore')
    elif (mess == "con8"):
        Xgroup = '記憶體模組廠概念股'
        signs = DB.objects.filter(cStockID__in = con8).order_by('-cAverageScore')
    elif (mess == "con9"):
        Xgroup = '小米、OPPO鏈概念股'
        signs = DB.objects.filter(cStockID__in = con9).order_by('-cAverageScore')
    elif (mess == "con10"):
        Xgroup = 'NB、伺服器概念股'
        signs = DB.objects.filter(cStockID__in = con10).order_by('-cAverageScore')


    elif (mess == "con11"):
        Xgroup = '3D列印概念股'
        signs = DB.objects.filter(cStockID__in = con11).order_by('-cAverageScore')                
    elif (mess == "con12"):
        Xgroup = '3D感測概念股'
        signs = DB.objects.filter(cStockID__in = con12).order_by('-cAverageScore')
    elif (mess == "con13"):
        Xgroup = '3D顯示概念股 '
        signs = DB.objects.filter(cStockID__in = con13).order_by('-cAverageScore')
    elif (mess == "con14"):
        Xgroup = '3T概念股'
        signs = DB.objects.filter(cStockID__in = con14).order_by('-cAverageScore')
    elif (mess == "con15"):
        Xgroup = '4K2K電視概念股 '
        signs = DB.objects.filter(cStockID__in = con15).order_by('-cAverageScore')
    elif (mess == "con16"):
        Xgroup = '5G概念股'
        signs = DB.objects.filter(cStockID__in = con16).order_by('-cAverageScore')
    elif (mess == "con17"):
        Xgroup = '802.11ac概念股'
        signs = DB.objects.filter(cStockID__in = con17).order_by('-cAverageScore')
    elif (mess == "con18"):
        Xgroup = 'ABC概念股'
        signs = DB.objects.filter(cStockID__in = con18).order_by('-cAverageScore')
    elif (mess == "con19"):
        Xgroup = 'Amazon概念股'
        signs = DB.objects.filter(cStockID__in = con19).order_by('-cAverageScore')
    elif (mess == "con20"):
        Xgroup = 'AMD概念股'
        signs = DB.objects.filter(cStockID__in = con20).order_by('-cAverageScore')


    elif (mess == "con21"):
        Xgroup = 'AMOLED概念股'
        signs = DB.objects.filter(cStockID__in = con21).order_by('-cAverageScore')                
    elif (mess == "con22"):
        Xgroup = 'Apple iPhone 8系列概念股'
        signs = DB.objects.filter(cStockID__in = con22).order_by('-cAverageScore')
    elif (mess == "con23"):
        Xgroup = 'Apple iPhone SE2概念股'
        signs = DB.objects.filter(cStockID__in = con23).order_by('-cAverageScore')
    elif (mess == "con24"):
        Xgroup = 'Apple iPhone XR系列概念股'
        signs = DB.objects.filter(cStockID__in = con24).order_by('-cAverageScore')
    elif (mess == "con25"):
        Xgroup = 'Apple iPhone XS/Max系列概念股'
        signs = DB.objects.filter(cStockID__in = con25).order_by('-cAverageScore')
    elif (mess == "con26"):
        Xgroup = 'Apple Pay概念股'
        signs = DB.objects.filter(cStockID__in = con26).order_by('-cAverageScore')



    
################################################指標1平均
    sumX1 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign1 == "AA"):
            score = 4
        elif (sign.cSign1 == "A"):
            score = 3
        elif (sign.cSign1 == "BB"):
            score = 2
        elif (sign.cSign1 == "B"):
            score = 1
        elif (sign.cSign1 == "C"):
            score = 0
        
        sumX1 += score
        lenX += 1        
    aveX1 = round(sumX1/lenX ,2)            

################################################指標2平均
    sumX2 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign2 == "AA"):
            score = 4
        elif (sign.cSign2 == "A"):
            score = 3
        elif (sign.cSign2 == "BB"):
            score = 2
        elif (sign.cSign2 == "B"):
            score = 1
        elif (sign.cSign2 == "C"):
            score = 0
        
        sumX2 += score
        lenX += 1        
    aveX2 = round(sumX2/lenX ,2)  

################################################指標3平均
    sumX3 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign3 == "AA"):
            score = 4
        elif (sign.cSign3 == "A"):
            score = 3
        elif (sign.cSign3 == "BB"):
            score = 2
        elif (sign.cSign3 == "B"):
            score = 1
        elif (sign.cSign3 == "C"):
            score = 0
        
        sumX3 += score
        lenX += 1        
    aveX3 = round(sumX3/lenX ,2)
    
################################################指標4平均
    sumX4 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign4 == "AA"):
            score = 4
        elif (sign.cSign4 == "A"):
            score = 3
        elif (sign.cSign4 == "BB"):
            score = 2
        elif (sign.cSign4 == "B"):
            score = 1
        elif (sign.cSign4 == "C"):
            score = 0
        
        sumX4 += score
        lenX += 1        
    aveX4 = round(sumX4/lenX ,2)
    
################################################指標5平均
    sumX5 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign5 == "AA"):
            score = 4
        elif (sign.cSign5 == "A"):
            score = 3
        elif (sign.cSign5 == "BB"):
            score = 2
        elif (sign.cSign5 == "B"):
            score = 1
        elif (sign.cSign5 == "C"):
            score = 0
        else:
            continue
        
        sumX5 += score
        lenX += 1        
    aveX5 = round(sumX5/lenX ,2)

################################################指標6平均
    sumX6 = 0
    lenX = 0
    
    for sign in signs:
        if (sign.cSign6 == "AA"):
            score = 4
        elif (sign.cSign6 == "A"):
            score = 3
        elif (sign.cSign6 == "BB"):
            score = 2
        elif (sign.cSign6 == "B"):
            score = 1
        elif (sign.cSign6 == "C"):
            score = 0
        
        sumX6 += score
        lenX += 1        
    aveX6 = round(sumX6/lenX ,2)              


################################################2021/12月評分的平均
    sumXscore12 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2112 == "N/A":
                continue
            else:
                sumXscore12 += float(sign.sCore2112)
                lenX += 1        
    aveXscore12 = round(sumXscore12/lenX ,2)

################################################2021/11月評分的平均
    sumXscore11 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2111 == "N/A":
                continue
            else:
                sumXscore11 += float(sign.sCore2111)
                lenX += 1        
    aveXscore11 = round(sumXscore11/lenX ,2)

################################################2021/10月評分的平均
    sumXscore10 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2110 == "N/A":
                continue
            else:
                sumXscore10 += float(sign.sCore2110)
                lenX += 1        
    aveXscore10 = round(sumXscore10/lenX ,2)
################################################2021/9月評分的平均
    sumXscore09 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2109 == "N/A":
                continue
            else:
                sumXscore09 += float(sign.sCore2109)
                lenX += 1        
    aveXscore09 = round(sumXscore09/lenX ,2)




################################################2021/8月評分的平均
    sumXscore08 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2108 == "N/A":
                continue
            else:
                sumXscore08 += float(sign.sCore2108)
                lenX += 1        
    aveXscore08 = round(sumXscore08/lenX ,2)





################################################2021/7月評分的平均
    sumXscore07 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2107 == "N/A":
                continue
            else:
                sumXscore07 += float(sign.sCore2107)
                lenX += 1        
    aveXscore07 = round(sumXscore07/lenX ,2)



################################################2021/6月評分的平均
    sumXscore06 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2106 == "N/A":
                continue
            else:
                sumXscore06 += float(sign.sCore2106)
                lenX += 1        
    aveXscore06 = round(sumXscore06/lenX ,2)
    


    return render(request, "stock6listallConcepts.html", locals())




def stock6SubCats(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['groupid']  #取得表單輸入內容
        
    else:
        mess = "N/A"


    return render(request, "stock6SubCats.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listallSubCats(request, mess):
#def stock6listall202102SubCats(request, mess):

    
    DB = Stock6Sign202203

    if (mess == "sub1"):
        sub1 = ['1537','3211','3323','3625','4931','5227','6121','6558','8038','8171']
        Xgroup = '3C二次電池'
        signs = DB.objects.filter(cStockID__in = sub1).order_by('-cAverageScore')                
    elif (mess == "sub2"):
        sub2 = ['2347','2373','2414','2430','2433','2450','2937','3494','3709','5410','6118','6123','6154','6281','8067']
        Xgroup = '3C通路'
        signs = DB.objects.filter(cStockID__in = sub2).order_by('-cAverageScore')
    elif (mess == "sub3"):
        sub3 = ['2312','2317','2324','2356','2382','3231','3701','3706','4938']
        Xgroup = '電子-PC EMS'
        signs = DB.objects.filter(cStockID__in = sub3).order_by('-cAverageScore')
    elif (mess == "sub4"):
        sub4 = ['3144','3354','4939','8039']
        Xgroup = '電子-PCB原材料 FCCL'
        signs = DB.objects.filter(cStockID__in = sub4).order_by('-cAverageScore')
    elif (mess == "sub5"):
        sub5 = ['2329','2369','2441','2449','3264','3265','3372','3374','3567','3711','5344','6147','6239','6257','6261','6451','6525','6552','8110','8131','8150']
        Xgroup = 'IC封測'
        signs = DB.objects.filter(cStockID__in = sub5).order_by('-cAverageScore')
    elif (mess == "sub6"):
        sub6 = ['2363','2379','2388','2401','2436','2454','2458','3006','3014','3034','3035','3041','3094','3122','3141','3169','3227','3228','3257','3259','3268','3288','3317','3438','3443','3527','3529','3530','3545','3556','3588','3661','4919','4945','4952','4961','4966','4968','5269','5272','5274','5299','5302','5314','5351','5468','5471','5487','6104','6129','6138','6198','6202','6229','6233','6237','6243','6291','6411','6415','6435','6457','6462','6485','6494','6531','6533','6568','6594','6643','6679','6716','6732','8016','8024','8040','8054','8081','8084','8261','8299']
        Xgroup = 'IC設計'
        signs = DB.objects.filter(cStockID__in = sub6).order_by('-cAverageScore')
    elif (mess == "sub7"):
        sub7 = ['3189','6683','8046']
        Xgroup = '主機板-IC載板'
        signs = DB.objects.filter(cStockID__in = sub7).order_by('-cAverageScore')
    elif (mess == "sub8"):
        sub8 = ['2351','5285','6548']
        Xgroup = 'IC導線架'
        signs = DB.objects.filter(cStockID__in = sub8).order_by('-cAverageScore')
    elif (mess == "sub9"):
        sub9 = ['2409','2438','3051','3481','3523','3666','3685','4933','4935','4960','5234','5245','6116','6405','6698','8069','8104','8215','8240']
        Xgroup = 'LCD'
        signs = DB.objects.filter(cStockID__in = sub9).order_by('-cAverageScore')
    elif (mess == "sub10"):
        sub10 = ['3038','5315','5432','6167','8049','8105']
        Xgroup = 'LCD-其他'
        signs = DB.objects.filter(cStockID__in = sub10).order_by('-cAverageScore')


    elif (mess == "sub11"):
        sub11 = ['6191','6266','6278','8183']
        Xgroup = 'PCB'
        signs = DB.objects.filter(cStockID__in = sub11).order_by('-cAverageScore')                
    elif (mess == "sub12"):
        sub12 = ['3115','3305','3631','4989','5498','6217','6223','8021','8074','8358']
        Xgroup = 'PCB材-其他'
        signs = DB.objects.filter(cStockID__in = sub12).order_by('-cAverageScore')
    elif (mess == "sub13"):
        sub13 = ['2353','2357']
        Xgroup = 'PC品牌'
        signs = DB.objects.filter(cStockID__in = sub13).order_by('-cAverageScore')
    elif (mess == "sub14"):
        sub14 = ['2301','2365','2385','2387','2482','3054','3272','3541','3642','4915','4924','6128','6143','6188','6277','6283','8047','8163','9105']
        Xgroup = 'PC週邊'
        signs = DB.objects.filter(cStockID__in = sub14).order_by('-cAverageScore')
    elif (mess == "sub15"):
        sub15 = ['3521','3611','3652','4987','5258','5490','6206','8076','8114']
        Xgroup = '主機板-POS'
        signs = DB.objects.filter(cStockID__in = sub15).order_by('-cAverageScore')
    elif (mess == "sub16"):
        sub16 = ['1515','1527','1528','1530','1538','1539','1540','1541','1570','1583','1591','4510','4513','4526','4533','4534','4562','4563','6603','6609','6654','8455','912398']
        Xgroup = '工具機'
        signs = DB .objects.filter(cStockID__in = sub16).order_by('-cAverageScore')
    elif (mess == "sub17"):
        sub17 = ['2395','2397','3022','3064','3088','3416','3479','3564','3577','3594','4916','6160','6166','6245','6414','6441','6569','6570','6577','6579','6680','8050','8234']
        Xgroup = '主機板-工業電腦'
        signs = DB.objects.filter(cStockID__in = sub17).order_by('-cAverageScore')
    elif (mess == "sub18"):
        sub18 = ['1325','6504','8480','8929','9919','9944']
        Xgroup = '不織布'
        signs = DB.objects.filter(cStockID__in = sub18).order_by('-cAverageScore')
    elif (mess == "sub19"):
        sub19 = ['1584','2025','2027','2032','2035','2069','5009','5014','9962']
        Xgroup = '不鏽鋼'
        signs = DB.objects.filter(cStockID__in = sub19).order_by('-cAverageScore')
    elif (mess == "sub20"):
        sub20 = ['2062','3557','4950','6616','6629','8066','8426','8427','8444','8464','8482','8941','9911','9924','9934','9935']
        Xgroup = '五金及家具'
        signs = DB.objects.filter(cStockID__in = sub20).order_by('-cAverageScore')


    elif (mess == "sub21"):
        sub21 = ['2455','3081','3105','4971','4991','8086']
        Xgroup = '化合物SEMI'
        signs = DB.objects.filter(cStockID__in = sub21).order_by('-cAverageScore')                
    elif (mess == "sub22"):
        sub22 = ['1314','1710','1718']
        Xgroup = '化纖'
        signs = DB.objects.filter(cStockID__in = sub22).order_by('-cAverageScore')
    elif (mess == "sub23"):
        sub23 = ['8908','8917','9908','9918','9926','9931']
        Xgroup = '天然氣'
        signs = DB.objects.filter(cStockID__in = sub23).order_by('-cAverageScore')
    elif (mess == "sub24"):
        sub24 = ['3073','3713','6477']
        Xgroup = '太陽能系統'
        signs = DB.objects.filter(cStockID__in = sub24).order_by('-cAverageScore')
    elif (mess == "sub25"):
        sub25 = ['2406','3686']
        Xgroup = '太陽能晶圓'
        signs = DB.objects.filter(cStockID__in = sub25).order_by('-cAverageScore')
    elif (mess == "sub26"):
        sub26 = ['3576','4934','6244','6443']
        Xgroup = '太陽能電池'
        signs = DB.objects.filter(cStockID__in = sub26).order_by('-cAverageScore')

################################################指標1平均
    sumX1 = 0
    lenX1 = 0
    
    for sign in signs:
        if (sign.cSign1 == "AA"):
            score = 4
        elif (sign.cSign1 == "A"):
            score = 3
        elif (sign.cSign1 == "BB"):
            score = 2
        elif (sign.cSign1 == "B"):
            score = 1
        elif (sign.cSign1 == "C"):
            score = 0        
        elif (sign.cSign1 == "N/A" or ""):
            score = 0
            #LenX1 = LenX1 - 1 #反抵銷下面的lenX += 1
        
                
        sumX1 += score
        
        #if (sign.cSign1 == "N/A" or ""):
            #lenX1 += 0
        #else:
        lenX1 += 1 
        
    try:
        aveX1 = round(sumX1/lenX1 ,2)
    except:
        aveX1 = "N/A"            

################################################指標2平均
    sumX2 = 0
    lenX2 = 0
    
    for sign in signs:
        if (sign.cSign2 == "AA"):
            score = 4
        elif (sign.cSign2 == "A"):
            score = 3
        elif (sign.cSign2 == "BB"):
            score = 2
        elif (sign.cSign2 == "B"):
            score = 1
        elif (sign.cSign2 == "C"):
            score = 0
        
        elif (sign.cSign2 == "N/A" or ""):
            score = 0
            #LenX = LenX - 1 #反抵銷下面的lenX += 1
        
        sumX2 += score
        
        #if (sign.cSign2 == "N/A" or ""):
            #lenX2 += 0
        #else:
        lenX2 += 1
            
    try:
        aveX2 = round(sumX2/lenX2 ,2)  
    except:
        aveX2 = "N/A"

################################################指標3平均
    sumX3 = 0
    lenX3 = 0
    
    for sign in signs:
        if (sign.cSign3 == "AA"):
            score = 4
        elif (sign.cSign3 == "A"):
            score = 3
        elif (sign.cSign3 == "BB"):
            score = 2
        elif (sign.cSign3 == "B"):
            score = 1
        elif (sign.cSign3 == "C"):
            score = 0
        
        elif sign.cSign3 == "N/A" or "":
            score = 0
        
        sumX3 += score
        
        #if (sign.cSign3 == "N/A" or ""):
            #lenX3 += 0
        #else:
        lenX3 += 1
            
    try:
        aveX3 = round(sumX3/lenX3 ,2)
    except:
        aveX3 = "N/A"
    
################################################指標4平均
    sumX4 = 0
    lenX4 = 0
    
    for sign in signs:
        if (sign.cSign4 == "AA"):
            score = 4
        elif (sign.cSign4 == "A"):
            score = 3
        elif (sign.cSign4 == "BB"):
            score = 2
        elif (sign.cSign4 == "B"):
            score = 1
        elif (sign.cSign4 == "C"):
            score = 0
        
        elif (sign.cSign4 == "N/A" or ""):
            score = 0
        
        sumX4 += score
        
        #if (sign.cSign4 == "N/A" or ""):
            #lenX4 += 0
        #else:
        lenX4 += 1 
            
    try:
        aveX4 = round(sumX4/lenX4 ,2)
    except:
        aveX4 = "N/A"
    
################################################指標5平均
    sumX5 = 0
    lenX5 = 0
    
    for sign in signs:
        if (sign.cSign5 == "AA"):
            score = 4
        elif (sign.cSign5 == "A"):
            score = 3
        elif (sign.cSign5 == "BB"):
            score = 2
        elif (sign.cSign5 == "B"):
            score = 1
        elif (sign.cSign5 == "C"):
            score = 0
        elif (sign.cSign5 == "不評分"):
            score = 0
        
        elif (sign.cSign5 == "N/A" or ""):
            score = 0
        
        sumX5 += score
        
        #if (sign.cSign5 == "N/A" or "" or "不評分"):
            #lenX5 += 0
        #else:
        lenX5 += 1
            
    try:
        aveX5 = round(sumX5/lenX5 ,2)
    except:
        aveX5 = "N/A"

################################################指標6平均
    sumX6 = 0
    lenX6 = 0
    
    for sign in signs:
        if (sign.cSign6 == "AA"):
            score = 4
        elif (sign.cSign6 == "A"):
            score = 3
        elif (sign.cSign6 == "BB"):
            score = 2
        elif (sign.cSign6 == "B"):
            score = 1
        elif (sign.cSign6 == "C"):
            score = 0

        elif (sign.cSign6 == "N/A" or ""):
            score = 0
        
        sumX6 += score
        
        #if (sign.cSign6 == "N/A" or ""):
            #lenX6 += 0
        #else:
        lenX6 += 1
                  
    try:
        aveX6 = round(sumX6/lenX6 ,2)  
    except:
        aveX6 = "N/A"            

################################################本月份評分的平均
    sumXcAverageScore= 0
    lenXave = 0
    
    for sign in signs:
            if sign.cAverageScore == "N/A" or "":
                continue
            else:
                try:
                    sumXcAverageScore += float(sign.cAverageScore)
                    lenXave += 1
                except:
                    pass
    try:
        aveXcAverageScore = round(sumXcAverageScore/lenXave ,2)
    except:
        aveXcAverageScore = "N/A"
        
        
################################################2021/12月評分的平均
    sumXscore12 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2112 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore12 += float(sign.sCore2112)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore12 = round(sumXscore12/lenX ,2)
    except:
        aveXscore12 = "N/A"        
################################################2021/11月評分的平均
    sumXscore11 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2111 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore11 += float(sign.sCore2111)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore11 = round(sumXscore11/lenX ,2)
    except:
        aveXscore11 = "N/A"
################################################2021/10月評分的平均
    sumXscore10 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2110 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore10 += float(sign.sCore2110)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore10 = round(sumXscore10/lenX ,2)
    except:
        aveXscore10 = "N/A"
################################################2021/9月評分的平均
    sumXscore09 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2109 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore09 += float(sign.sCore2109)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore09 = round(sumXscore09/lenX ,2)
    except:
        aveXscore09 = "N/A"



################################################2021/8月評分的平均
    sumXscore08 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2108 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore08 += float(sign.sCore2108)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore08 = round(sumXscore08/lenX ,2)
    except:
        aveXscore08 = "N/A"
################################################2021/7月評分的平均
    sumXscore07 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2107 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore07 += float(sign.sCore2107)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore07 = round(sumXscore07/lenX ,2)
    except:
        aveXscore07 = "N/A"

################################################2021/6月評分的平均
    sumXscore06 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2106 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore06 += float(sign.sCore2106)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore06 = round(sumXscore06/lenX ,2)
    except:
        aveXscore06 = "N/A"

################################################2021/5月評分的平均
    sumXscore05 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2105 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore05 += float(sign.sCore2105)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore05 = round(sumXscore05/lenX ,2)
    except:
        aveXscore05 = "N/A"


################################################2021/4月評分的平均
    sumXscore04 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2104 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore04 += float(sign.sCore2104)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore04 = round(sumXscore04/lenX ,2)
    except:
        aveXscore04 = "N/A"


################################################2021/3月評分的平均
    sumXscore03 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2103 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore03 += float(sign.sCore2103)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore03 = round(sumXscore03/lenX ,2)
    except:
        aveXscore03 = "N/A"
################################################2月評分的平均
    sumXscore02 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2102 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore02 += float(sign.sCore2102)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore02 = round(sumXscore02/lenX ,2)
    except:
        aveXscore02 = "N/A"

################################################1月評分的平均
    sumXscore01 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2101 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore01 += float(sign.sCore2101)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore01 = round(sumXscore01/lenX ,2)
    except:
        aveXscore01 = "N/A"





    return render(request, "stock6listallSubCats.html", locals())


def stock6SubCatsAdmin(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['groupid']  #取得表單輸入內容
        mess_db1 = request.POST['dbname1']  #取得表單輸入內容        
        mess_db2 = request.POST['dbname2']  #取得表單輸入內容 
    else:
        mess = "N/A"
        mess_db1 = "N/A"
        mess_db2 = "N/A"

    return render(request, "stock6SubCatsAdmin.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
#def stock6listall202102SubCatsAdmin(request, mess):
def stock6listallSubCatsAdmin(request, mess, mess_db1, mess_db2):

    if mess_db1 == "05":    ########選擇取出的六大指標資料庫
        DB = Stock6Sign202105    
    elif mess_db1 == "06":
        DB = Stock6Sign202106
    elif mess_db1 == "07":
        DB = Stock6Sign202107
    elif mess_db1 == "08":
        DB = Stock6Sign202108
    elif mess_db1 == "09":
        DB = Stock6Sign202109
    elif mess_db1 == "10":
        DB = Stock6Sign202110
    elif mess_db1 == "11":
        DB = Stock6Sign202111
    elif mess_db1 == "12":
        DB = Stock6Sign202112
    elif mess_db1 == "01":
        DB = Stock6Sign202201
    elif mess_db1 == "02":
        DB = Stock6Sign202202
    elif mess_db1 == "03":
        DB = Stock6Sign202203        
###########################################        
    if (mess == "sub1"):
        sub1 = ['1537','3211','3323','3625','4931','5227','6121','6558','8038','8171']
        Xgroup = '3C二次電池'
        signs = DB.objects.filter(cStockID__in = sub1).order_by('-cAverageScore')                
    elif (mess == "sub2"):
        sub2 = ['2347','2373','2414','2430','2433','2450','2937','3494','3709','5410','6118','6123','6154','6281','8067']
        Xgroup = '3C通路'
        signs = DB.objects.filter(cStockID__in = sub2).order_by('-cAverageScore')
    elif (mess == "sub3"):
        sub3 = ['2312','2317','2324','2356','2382','3231','3701','3706','4938']
        Xgroup = '電子-PC EMS'
        signs = DB.objects.filter(cStockID__in = sub3).order_by('-cAverageScore')
    elif (mess == "sub4"):
        sub4 = ['3144','3354','4939','8039']
        Xgroup = '電子-PCB原材料 FCCL'
        signs = DB.objects.filter(cStockID__in = sub4).order_by('-cAverageScore')
    elif (mess == "sub5"):
        sub5 = ['2329','2369','2441','2449','3264','3265','3372','3374','3567','3711','5344','6147','6239','6257','6261','6451','6525','6552','8110','8131','8150']
        Xgroup = 'IC封測'
        signs = DB.objects.filter(cStockID__in = sub5).order_by('-cAverageScore')
    elif (mess == "sub6"):
        sub6 = ['2363','2379','2388','2401','2436','2454','2458','3006','3014','3034','3035','3041','3094','3122','3141','3169','3227','3228','3257','3259','3268','3288','3317','3438','3443','3527','3529','3530','3545','3556','3588','3661','4919','4945','4952','4961','4966','4968','5269','5272','5274','5299','5302','5314','5351','5468','5471','5487','6104','6129','6138','6198','6202','6229','6233','6237','6243','6291','6411','6415','6435','6457','6462','6485','6494','6531','6533','6568','6594','6643','6679','6716','6732','8016','8024','8040','8054','8081','8084','8261','8299']
        Xgroup = 'IC設計'
        signs = DB.objects.filter(cStockID__in = sub6).order_by('-cAverageScore')
    elif (mess == "sub7"):
        sub7 = ['3189','6683','8046']
        Xgroup = '主機板-IC載板'
        signs = DB.objects.filter(cStockID__in = sub7).order_by('-cAverageScore')
    elif (mess == "sub8"):
        sub8 = ['2351','5285','6548']
        Xgroup = 'IC導線架'
        signs = DB.objects.filter(cStockID__in = sub8).order_by('-cAverageScore')
    elif (mess == "sub9"):
        sub9 = ['2409','2438','3051','3481','3523','3666','3685','4933','4935','4960','5234','5245','6116','6405','6698','8069','8104','8215','8240']
        Xgroup = 'LCD'
        signs = DB.objects.filter(cStockID__in = sub9).order_by('-cAverageScore')
    elif (mess == "sub10"):
        sub10 = ['3038','5315','5432','6167','8049','8105']
        Xgroup = 'LCD-其他'
        signs = DB.objects.filter(cStockID__in = sub10).order_by('-cAverageScore')


    elif (mess == "sub11"):
        sub11 = ['6191','6266','6278','8183']
        Xgroup = 'PCB'
        signs = DB.objects.filter(cStockID__in = sub11).order_by('-cAverageScore')                
    elif (mess == "sub12"):
        sub12 = ['3115','3305','3631','4989','5498','6217','6223','8021','8074','8358']
        Xgroup = 'PCB材-其他'
        signs = DB.objects.filter(cStockID__in = sub12).order_by('-cAverageScore')
    elif (mess == "sub13"):
        sub13 = ['2353','2357']
        Xgroup = 'PC品牌'
        signs = DB.objects.filter(cStockID__in = sub13).order_by('-cAverageScore')
    elif (mess == "sub14"):
        sub14 = ['2301','2365','2385','2387','2482','3054','3272','3541','3642','4915','4924','6128','6143','6188','6277','6283','8047','8163','9105']
        Xgroup = 'PC週邊'
        signs = DB.objects.filter(cStockID__in = sub14).order_by('-cAverageScore')
    elif (mess == "sub15"):
        sub15 = ['3521','3611','3652','4987','5258','5490','6206','8076','8114']
        Xgroup = '主機板-POS'
        signs = DB.objects.filter(cStockID__in = sub15).order_by('-cAverageScore')
    elif (mess == "sub16"):
        sub16 = ['1515','1527','1528','1530','1538','1539','1540','1541','1570','1583','1591','4510','4513','4526','4533','4534','4562','4563','6603','6609','6654','8455','912398']
        Xgroup = '工具機'
        signs = DB.objects.filter(cStockID__in = sub16).order_by('-cAverageScore')
    elif (mess == "sub17"):
        sub17 = ['2395','2397','3022','3064','3088','3416','3479','3564','3577','3594','4916','6160','6166','6245','6414','6441','6569','6570','6577','6579','6680','8050','8234']
        Xgroup = '主機板-工業電腦'
        signs = DB.objects.filter(cStockID__in = sub17).order_by('-cAverageScore')
    elif (mess == "sub18"):
        sub18 = ['1325','6504','8480','8929','9919','9944']
        Xgroup = '不織布'
        signs = DB.objects.filter(cStockID__in = sub18).order_by('-cAverageScore')
    elif (mess == "sub19"):
        sub19 = ['1584','2025','2027','2032','2035','2069','5009','5014','9962']
        Xgroup = '不鏽鋼'
        signs = DB.objects.filter(cStockID__in = sub19).order_by('-cAverageScore')
    elif (mess == "sub20"):
        sub20 = ['2062','3557','4950','6616','6629','8066','8426','8427','8444','8464','8482','8941','9911','9924','9934','9935']
        Xgroup = '五金及家具'
        signs = DB.objects.filter(cStockID__in = sub20).order_by('-cAverageScore')


    elif (mess == "sub21"):
        sub21 = ['2455','3081','3105','4971','4991','8086']
        Xgroup = '化合物SEMI'
        signs = DB.objects.filter(cStockID__in = sub21).order_by('-cAverageScore')                
    elif (mess == "sub22"):
        sub22 = ['1314','1710','1718']
        Xgroup = '化纖'
        signs = DB.objects.filter(cStockID__in = sub22).order_by('-cAverageScore')
    elif (mess == "sub23"):
        sub23 = ['8908','8917','9908','9918','9926','9931']
        Xgroup = '天然氣'
        signs = DB.objects.filter(cStockID__in = sub23).order_by('-cAverageScore')
    elif (mess == "sub24"):
        sub24 = ['3073','3713','6477']
        Xgroup = '太陽能系統'
        signs = DB.objects.filter(cStockID__in = sub24).order_by('-cAverageScore')
    elif (mess == "sub25"):
        sub25 = ['2406','3686']
        Xgroup = '太陽能晶圓'
        signs = DB.objects.filter(cStockID__in = sub25).order_by('-cAverageScore')
    elif (mess == "sub26"):
        sub26 = ['3576','4934','6244','6443']
        Xgroup = '太陽能電池'
        signs = DB.objects.filter(cStockID__in = sub26).order_by('-cAverageScore')

################################################指標1平均
    sumX1 = 0
    lenX1 = 0
    
    for sign in signs:
        if (sign.cSign1 == "AA"):
            score = 4
        elif (sign.cSign1 == "A"):
            score = 3
        elif (sign.cSign1 == "BB"):
            score = 2
        elif (sign.cSign1 == "B"):
            score = 1
        elif (sign.cSign1 == "C"):
            score = 0        
        elif (sign.cSign1 == "N/A" or ""):
            score = 0
            #LenX1 = LenX1 - 1 #反抵銷下面的lenX += 1
        
                
        sumX1 += score
        
        #if (sign.cSign1 == "N/A" or ""):
            #lenX1 += 0
        #else:
        lenX1 += 1 
        
    try:
        aveX1 = round(sumX1/lenX1 ,2)
    except:
        aveX1 = "N/A"            

################################################指標2平均
    sumX2 = 0
    lenX2 = 0
    
    for sign in signs:
        if (sign.cSign2 == "AA"):
            score = 4
        elif (sign.cSign2 == "A"):
            score = 3
        elif (sign.cSign2 == "BB"):
            score = 2
        elif (sign.cSign2 == "B"):
            score = 1
        elif (sign.cSign2 == "C"):
            score = 0
        
        elif (sign.cSign2 == "N/A" or ""):
            score = 0
            #LenX = LenX - 1 #反抵銷下面的lenX += 1
        
        sumX2 += score
        
        #if (sign.cSign2 == "N/A" or ""):
            #lenX2 += 0
        #else:
        lenX2 += 1
            
    try:
        aveX2 = round(sumX2/lenX2 ,2)  
    except:
        aveX2 = "N/A"

################################################指標3平均
    sumX3 = 0
    lenX3 = 0
    
    for sign in signs:
        if (sign.cSign3 == "AA"):
            score = 4
        elif (sign.cSign3 == "A"):
            score = 3
        elif (sign.cSign3 == "BB"):
            score = 2
        elif (sign.cSign3 == "B"):
            score = 1
        elif (sign.cSign3 == "C"):
            score = 0
        
        elif sign.cSign3 == "N/A" or "":
            score = 0
        
        sumX3 += score
        
        #if (sign.cSign3 == "N/A" or ""):
            #lenX3 += 0
        #else:
        lenX3 += 1
            
    try:
        aveX3 = round(sumX3/lenX3 ,2)
    except:
        aveX3 = "N/A"
    
################################################指標4平均
    sumX4 = 0
    lenX4 = 0
    
    for sign in signs:
        if (sign.cSign4 == "AA"):
            score = 4
        elif (sign.cSign4 == "A"):
            score = 3
        elif (sign.cSign4 == "BB"):
            score = 2
        elif (sign.cSign4 == "B"):
            score = 1
        elif (sign.cSign4 == "C"):
            score = 0
        
        elif (sign.cSign4 == "N/A" or ""):
            score = 0
        
        sumX4 += score
        
        #if (sign.cSign4 == "N/A" or ""):
            #lenX4 += 0
        #else:
        lenX4 += 1 
            
    try:
        aveX4 = round(sumX4/lenX4 ,2)
    except:
        aveX4 = "N/A"
    
################################################指標5平均
    sumX5 = 0
    lenX5 = 0
    
    for sign in signs:
        if (sign.cSign5 == "AA"):
            score = 4
        elif (sign.cSign5 == "A"):
            score = 3
        elif (sign.cSign5 == "BB"):
            score = 2
        elif (sign.cSign5 == "B"):
            score = 1
        elif (sign.cSign5 == "C"):
            score = 0
        elif (sign.cSign5 == "不評分"):
            score = 0
        
        elif (sign.cSign5 == "N/A" or ""):
            score = 0
        
        sumX5 += score
        
        #if (sign.cSign5 == "N/A" or "" or "不評分"):
            #lenX5 += 0
        #else:
        lenX5 += 1
            
    try:
        aveX5 = round(sumX5/lenX5 ,2)
    except:
        aveX5 = "N/A"

################################################指標6平均
    sumX6 = 0
    lenX6 = 0
    
    for sign in signs:
        if (sign.cSign6 == "AA"):
            score = 4
        elif (sign.cSign6 == "A"):
            score = 3
        elif (sign.cSign6 == "BB"):
            score = 2
        elif (sign.cSign6 == "B"):
            score = 1
        elif (sign.cSign6 == "C"):
            score = 0

        elif (sign.cSign6 == "N/A" or ""):
            score = 0
        
        sumX6 += score
        
        #if (sign.cSign6 == "N/A" or ""):
            #lenX6 += 0
        #else:
        lenX6 += 1
                  
    try:
        aveX6 = round(sumX6/lenX6 ,2)  
    except:
        aveX6 = "N/A"            

################################################本月份評分的平均
    sumXcAverageScore= 0
    lenXave = 0
    
    for sign in signs:
            if sign.cAverageScore == "N/A" or "":
                continue
            else:
                try:
                    sumXcAverageScore += float(sign.cAverageScore)
                    lenXave += 1
                except:
                    pass
    try:
        aveXcAverageScore = round(sumXcAverageScore/lenXave ,2)
    except:
        aveXcAverageScore = "N/A"

################################################1月評分的平均
    sumXscore01 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2201 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore01 += float(sign.sCore2201)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore01 = round(sumXscore01/lenX ,2)
    except:
        aveXscore01 = "N/A" 
################################################2021/12月評分的平均
    sumXscore12 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2112 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore12 += float(sign.sCore2112)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore12 = round(sumXscore12/lenX ,2)
    except:
        aveXscore12 = "N/A"        
################################################2021/11月評分的平均
    sumXscore11 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2111 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore11 += float(sign.sCore2111)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore11 = round(sumXscore11/lenX ,2)
    except:
        aveXscore11 = "N/A"        
################################################2021/10月評分的平均
    sumXscore10 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2110 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore10 += float(sign.sCore2110)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore10 = round(sumXscore10/lenX ,2)
    except:
        aveXscore10 = "N/A"
################################################2021/9月評分的平均
    sumXscore09 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2109 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore09 += float(sign.sCore2109)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore09 = round(sumXscore09/lenX ,2)
    except:
        aveXscore09 = "N/A"
################################################2021/8月評分的平均
    sumXscore08 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2108 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore08 += float(sign.sCore2108)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore08 = round(sumXscore08/lenX ,2)
    except:
        aveXscore08 = "N/A"


################################################2021/7月評分的平均
    sumXscore07 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2107 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore07 += float(sign.sCore2107)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore07 = round(sumXscore07/lenX ,2)
    except:
        aveXscore07 = "N/A"

################################################2021/6月評分的平均
    sumXscore06 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2106 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore06 += float(sign.sCore2106)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore06 = round(sumXscore06/lenX ,2)
    except:
        aveXscore06 = "N/A"
################################################2021/5月評分的平均
    sumXscore05 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2105 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore05 += float(sign.sCore2105)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore05 = round(sumXscore05/lenX ,2)
    except:
        aveXscore05 = "N/A"

################################################2021/4月評分的平均
    sumXscore04 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2104 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore04 += float(sign.sCore2104)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore04 = round(sumXscore04/lenX ,2)
    except:
        aveXscore04 = "N/A"


################################################2021/3月評分的平均
    sumXscore03 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2103 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore03 += float(sign.sCore2103)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore03 = round(sumXscore03/lenX ,2)
    except:
        aveXscore03 = "N/A"
################################################2月評分的平均
    sumXscore02 = 0
    lenX = 0
    
    for sign in signs:
            if sign.sCore2102 == "N/A" or "":
                continue
            else:
                try:
                    sumXscore02 += float(sign.sCore2102)
                    lenX += 1   
                except:
                    pass
    try:
        aveXscore02 = round(sumXscore02/lenX ,2)
    except:
        aveXscore02 = "N/A"


  


####################################################################寫入資料庫
    import datetime
    wholetime = str(datetime.datetime.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數


    if mess_db2 == "04":    ########選擇寫入的六大指標評分平均資料庫
        DB2 = SubCats202104   
    elif mess_db2 == "05":
        DB2 = SubCats202105
    elif mess_db2 == "06":
        DB2 = SubCats202106


    try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
        sign = DB2.objects.get(cSubCatName=Xgroup)



            ###################


    except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
        sign = DB2.objects.create(cSubCatName=Xgroup, cScore2105=aveXscore05, cScore2104=aveXscore04, cScore2103=aveXscore03, cScore2102=aveXscore02, cScore2101=aveXscore01, pubtime=realtime)
                                  #, cScore2012=aveXscoreq4, cScore2011=aveXscore11, cScore20Q3=aveXscoreq3, cScore2009=aveXscore09, cScore2008=aveXscore08, cScore20Q2=aveXscoreq2, cScore2006=aveXscore06, pubtime=realtime)
        sign.save()



    return render(request, "stock6listallSubCatsAdmin.html", locals())


#子產業趨勢平均總表
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202011(request):
    subs = SubCats202011.objects.all().order_by('id')
    return render(request, "SubCatslistall202011.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202102(request):
    subs = SubCats202102.objects.all().order_by('id')
    return render(request, "SubCatslistall202102.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202103(request):
    subs = SubCats202103.objects.all().order_by('id')
    return render(request, "SubCatslistall202103.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202104(request):
    subs = SubCats202104.objects.all().order_by('id')
    return render(request, "SubCatslistall202104.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202105(request):
    subs = SubCats202105.objects.all().order_by('id')
    return render(request, "SubCatslistall202105.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202106(request):
    subs = SubCats202106.objects.all().order_by('id')
    return render(request, "SubCatslistall202106.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202107(request):
    subs = SubCats202107.objects.all().order_by('id')
    return render(request, "SubCatslistall202107.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202108(request):
    subs = SubCats202108.objects.all().order_by('id')
    return render(request, "SubCatslistall202108.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202109(request):
    subs = SubCats202109.objects.all().order_by('id')
    return render(request, "SubCatslistall202109.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202110(request):
    subs = SubCats202110.objects.all().order_by('id')
    return render(request, "SubCatslistall202110.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202111(request):
    subs = SubCats202111.objects.all().order_by('id')
    return render(request, "SubCatslistall202111.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def SubCatslistall202112(request):
    subs = SubCats202112.objects.all().order_by('id')
    return render(request, "SubCatslistall202112.html", locals())
###################################################

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6TSE(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['groupid']  #取得表單輸入內容
        



    else:
        mess = "N/A"


    return render(request, "stock6TSE.html", locals())





@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
#def stock6listall202102tse(request, mess):
def stock6listalltse(request, mess):
    #上市化學工業
    tse1 = ['1708','1709','1710','1711','1712','1713','1714','1717','1718','1721','1722','1723','1724','1725','1726','1727','1730','1732','1735','1773','1776','3708','4720','4722','4725','4739','4755','4763','4764','4766']
    #上市水泥工業
    tse2 = ['1101','1102','1103','1104','1108','1109','1110']
    #上市紡織工業    
    tse3 = ['1402','1409','1410','1413','1414','1417','1418','1419','1423','1434','1439','1440','1441','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1472','1473','1474','1475','1476','1477','4414','4426','4438','4439']
    #上市半導體工業    
    tse4 = ['2302','2303','2329','2330','2337','2338','2342','2344','2351','2363','2369','2379','2388','2401','2408','2434','2436','2441','2449','2451','2454','2458','2481','3006','3014','3016','3034','3035','3041','3054','3094','3189','3257','3413','3443','3530','3532','3536','3545','3583','3588','3661','3686','3711','4919','4952','4961','4967','4968','5269','5285','5305','5471','6202','6239','6243','6257','6271','6415','6451','6525','6531','6533','6552','6573','8016','8028','8081','8110','8131','8150','8261','8271']
    #上市生技醫療業    
    tse5 = ['1598','1701','1707','1720','1731','1733','1734','1736','1760','1762','1783','1786','1789','1795','3164','3705','4104','4106','4108','4119','4133','4137','4141','4142','4144','4148','4155','4164','4190','4737','4746','6491','6541','6598','6666']
    #上市光電業    
    tse6 = ['2323','2340','2349','2374','2393','2406','2409','2426','2438','2448','2466','2486','2489','2491','2499','3008','3019','3024','3031','3038','3049','3050','3051','3059','3149','3356','3383','3406','3437','3454','3481','3504','3535','3543','3563','3576','3591','3622','3669','3673','3698','4934','4935','4942','4956','4960','4976','5234','5243','5484','6116','6120','6131','6164','6168','6176','6209','6225','6226','6278','6289','6405','6431','6443','6456','6477','6668','6706','8104','8105','8215']
    #上市汽車業    
    tse7 = ['1319','1338','1339','1512','1521','1522','1524','1525','1533','1536','1568','1587','1592','2115','2201','2204','2206','2207','2227','2228','2231','2233','2236','2239','2243','2497','3346','4551','4557','4581','6288','6605']
    #上市其他     
    tse8 = ['1416','1435','1437','1516','2062','2348','2358','2443','2496','2514','2904','3040','3557','4536','5284','5871','6184','6464','6504','6581','6592','6625','6641','6655','6670','6671','6754','8033','8341','8404','8411','8422','8427','8442','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8497','8499','9802','9902','9904','9905','9907','9910','9911','9914','9917','9919','9921','9924','9925','9927','9928','9929','9930','9933','9934','9935','9938','9939','9940','9941','9942','9944','9945','9955']
    #上市其他電子    
    tse9 = ['2312','2317','2354','2359','2360','2373','2390','2404','2423','2433','2461','2464','2474','2477','2482','2488','2495','3018','3030','3043','3305','3450','3518','3617','3665','5225','6139','6192','6196','6201','6215','6283','6409','6558','6698','8021','8201']
    #上市油電燃氣業    
    tse10 = ['2616','6505','8926','9908','9918','9926','9931','9937']


    #上市玻璃陶瓷
    tse11 = ['1802','1806','1809','1810','1817']
    #上市食品工業
    tse12 = ['1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1702','1737']
    #上市航運業    
    tse13 = ['2208','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2615','2617','2618','2630','2633','2634','2636','2637','2642','5607','5608','8367']
    #上市通信網路 
    tse14 = ['2314','2321','2332','2345','2412','2419','2439','2444','2450','2455','2485','2498','3025','3027','3045','3047','3062','3311','3380','3419','3596','3682','3694','3704','4904','4906','4977','5388','6136','6142','6152','6216','6285','6416','6442','6674','8011','8101']
    #上市造紙工業   
    tse15 = ['1903','1904','1905','1906','1907','1909','1432']
    #上市貿易百貨    
    tse16 = ['1432','2601','2614','2901','2903','2905','2906','2908','2910','2911','2912','2913','2915','2929','2936','2939','4807','5906','5907','8429','8443','8454']
    #上市塑膠工業   
    tse17 = ['1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1321','1323','1324','1325','1326','1337','1340','1341','4306']
    #上市資訊服務   
    tse18 = ['2427','2453','2468','2471','2480','3029','3130','4994','5203','6112','6183','6214']
    #上市電子通路 
    tse19 = ['2347','2414','2430','2459','3010','3028','3033','3036','3048','3055','3209','3312','3528','3702','5434','6189','6281','8070','8072','8112']
    #上市電子零組件 
    tse20 = ['1471','1582','2059','2308','2313','2316','2327','2328','2355','2367','2368','2375','2383','2385','2392','2402','2413','2415','2420','2421','2428','2429','2431','2440','2456','2457','2460','2462','2467','2472','2476','2478','2483','2484','2492','2493','3003','3011','3015','3021','3023','3026','3032','3037','3042','3044','3058','3090','3229','3296','3308','3321','3338','3376','3432','3501','3533','3550','3593','3605','3607','3645','3653','3679','4545','4912','4915','4927','4943','4958','4989','4999','5469','6108','6115','6133','6141','6153','6155','6165','6191','6197','6205','6213','6224','6251','6269','6282','6412','6449','6672','6715','8039','8046','8103','8213','8249']

    #上市電腦及週邊設備業
    tse21 = ['2301','2305','2324','2331','2352','2353','2356','2357','2362','2364','2365','2376','2377','2380','2382','2387','2395','2397','2399','2405','2417','2424','2425','2442','2465','3002','3005','3013','3017','3022','3046','3057','3060','3231','3416','3494','3515','3701','3706','3712','4916','4938','5215','5258','5264','6117','6128','6166','6172','6206','6230','6235','6277','6414','6579','6591','6669','8114','8163','8210','9912','3645','3653','3679','4545','4912','4915','4927','4943','4958','4989','4999','5469','6108','6115','6133','6141','6153','6155','6165','6191','6197','6205','6213','6224','6251','6269','6282','6412','6449','6672','6715','8039','8046','8103','8213','8249']
    #上市電器電纜
    tse22 = ['1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','4930','5283']
    #上市電機機械    
    tse23 = ['1503','1504','1506','1507','1513','1514','1515','1517','1519','1526','1527','1528','1529','1530','1531','1532','1535','1537','1538','1539','1540','1541','1558','1560','1583','1589','1590','2049','2241','2371','3167','4526','4532','4540','4552','4555','4560','4562','4564','4566','4571','4572','4576','5288','8222','8374','8996']
    #上市橡膠工業
    tse24 = ['2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','6582']
    #上市鋼鐵工業   
    tse25 = ['2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2069','3004','5007','5538','9958']
    #上市觀光事業    
    tse26 = ['2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','5706','8462','8940','9943']

    DB = Stock6Sign202203  #每個月更換這裡

    if (mess == "tse1"):
        Xgroup = '上市化學工業'
        signs = DB.objects.filter(cStockID__in = tse1).order_by('-cAverageScore')                
    elif (mess == "tse2"):
        Xgroup = '上市水泥工業'
        signs = DB.objects.filter(cStockID__in = tse2).order_by('-cAverageScore')
    elif (mess == "tse3"):
        Xgroup = '上市紡織工業'
        signs = DB.objects.filter(cStockID__in = tse3).order_by('-cAverageScore')
    elif (mess == "tse4"):
        Xgroup = '上市半導體工業'
        signs = DB.objects.filter(cStockID__in = tse4).order_by('-cAverageScore')
    elif (mess == "tse5"):
        Xgroup = '上市生技醫療業'
        signs = DB.objects.filter(cStockID__in = tse5).order_by('-cAverageScore')
    elif (mess == "tse6"):
        Xgroup = '上市光電業'
        signs = DB.objects.filter(cStockID__in = tse6).order_by('-cAverageScore')
    elif (mess == "tse7"):
        Xgroup = '上市汽車業'
        signs = DB.objects.filter(cStockID__in = tse7).order_by('-cAverageScore')
    elif (mess == "tse8"):
        Xgroup = '上市其他'
        signs = DB.objects.filter(cStockID__in = tse8).order_by('-cAverageScore')
    elif (mess == "tse9"):
        Xgroup = '上市其他電子'
        signs = DB.objects.filter(cStockID__in = tse9).order_by('-cAverageScore')
    elif (mess == "tse10"):
        Xgroup = '上市油電燃氣業'
        signs = DB.objects.filter(cStockID__in = tse10).order_by('-cAverageScore')


    elif (mess == "tse11"):
        Xgroup = '上市玻璃陶瓷'
        signs = DB.objects.filter(cStockID__in = tse11).order_by('-cAverageScore')                
    elif (mess == "tse12"):
        Xgroup = '上市食品工業'
        signs = DB.objects.filter(cStockID__in = tse12).order_by('-cAverageScore')
    elif (mess == "tse13"):
        Xgroup = '上市航運業'
        signs = DB.objects.filter(cStockID__in = tse13).order_by('-cAverageScore')
    elif (mess == "tse14"):
        Xgroup = '上市通信網路'
        signs = DB.objects.filter(cStockID__in = tse14).order_by('-cAverageScore')
    elif (mess == "tse15"):
        Xgroup = '上市造紙工業'
        signs = DB.objects.filter(cStockID__in = tse15).order_by('-cAverageScore')
    elif (mess == "tse16"):
        Xgroup = '上市貿易百貨'
        signs = DB.objects.filter(cStockID__in = tse16).order_by('-cAverageScore')
    elif (mess == "tse17"):
        Xgroup = '上市塑膠工業'
        signs = DB.objects.filter(cStockID__in = tse17).order_by('-cAverageScore')
    elif (mess == "tse18"):
        Xgroup = '上市資訊服務'
        signs = DB.objects.filter(cStockID__in = tse18).order_by('-cAverageScore')
    elif (mess == "tse19"):
        Xgroup = '上市電子通路'
        signs = DB.objects.filter(cStockID__in = tse19).order_by('-cAverageScore')
    elif (mess == "tse20"):
        Xgroup = '上市電子零組件'
        signs = DB.objects.filter(cStockID__in = tse20).order_by('-cAverageScore')


    elif (mess == "tse21"):
        Xgroup = '上市電腦及週邊設備業'
        signs = DB.objects.filter(cStockID__in = tse21).order_by('-cAverageScore')                
    elif (mess == "tse22"):
        Xgroup = '上市電器電纜'
        signs = DB.objects.filter(cStockID__in = tse22).order_by('-cAverageScore')
    elif (mess == "tse23"):
        Xgroup = '上市電機機械'
        signs = DB.objects.filter(cStockID__in = tse23).order_by('-cAverageScore')
    elif (mess == "tse24"):
        Xgroup = '上市橡膠工業'
        signs = DB.objects.filter(cStockID__in = tse24).order_by('-cAverageScore')
    elif (mess == "tse25"):
        Xgroup = '上市鋼鐵工業'
        signs = DB.objects.filter(cStockID__in = tse25).order_by('-cAverageScore')
    elif (mess == "tse26"):
        Xgroup = '上市觀光事業'
        signs = DB.objects.filter(cStockID__in = tse26).order_by('-cAverageScore')



    return render(request, "stock6listalltse.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6OTC(request):

    
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['groupid']  #取得表單輸入內容
        



    else:
        mess = "N/A"


    return render(request, "stock6OTC.html", locals())





@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
#def stock6listall202102otc(request, mess):
def stock6listallotc(request, mess):
    #上櫃化學工業
    otc1 = ['1742','4702','4706','4707','4711','4714','4716','4721','4741','4754','4767','6506','6509']
    #上櫃文化創意產業
    otc2 = ['2926','3064','3083','3086','3293','3546','3629','4803','4806','4946','5263','5478','6101','6111','6144','6169','6180','6294','6482','6542','6596','8446','8450','8489','8923','9949']
    #上櫃紡織工業    
    otc3 = ['4401','4402','4406','4413','4417','4419','4420','4429','4432','4433']
    #上櫃半導體工業    
    otc4 = ['3073','3105','3122','3141','3169','3219','3227','3228','3259','3260','3264','3265','3268','3317','3372','3374','3438','3527','3529','3555','3556','3567','3581','3675','3680','3707','4966','4971','4973','4991','5272','5274','5299','5302','5314','5344','5347','5351','5425','5468','5483','5487','6103','6104','6129','6138','6147','6182','6198','6223','6229','6233','6237','6261','6287','6291','6411','6435','6457','6462','6485','6488','6494','6510','6532','6548','6568','6594','6640','6643','6679','6683','6716','6732','8024','8040','8054','8086','8088','8277','8299']
    #上櫃生技醫療業    
    otc5 = ['1565','1593','1752','1777','1781','1784','1788','1799','1813','3118','3176','3205','3218','4102','4105','4107','4109','4111','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4173','4174','4175','4183','4188','4192','4198','4726','4728','4735','4736','4743','4744','4745','4747','4911','5312','6130','6242','6446','6461','6469','6472','6492','6496','6499','6523','6527','6535','6547','6569','6574','6576','6589','6612','6615','6649','6662','8279','8403','8406','8409','8432','8436']
    #上櫃光電業    
    otc6 = ['3066','3128','3230','3297','3339','3362','3434','3441','3455','3490','3516','3523','3531','3615','3623','3630','3666','3685','3691','3713','4729','4933','4944','4972','4995','5220','5230','5245','5251','5281','5315','5371','5392','5432','5443','6125','6167','6222','6234','6244','6246','6419','6556','6560','7402','8049','8064','8069','8087','8111','8240']
    #上櫃農業科技    
    otc7 = ['1240','4171','6508','6578']
    #上櫃其他     
    otc8 = ['1584','2221','2640','3284','4430','4529','4541','4556','4950','5276','5306','5398','5450','5481','5530','6179','6199','6236','6616','6624','6629','6803','8342','8390','8401','8418','8420','8421','8423','8426','8435','8437','8440','8444','8476','8905','8906','8916','8921','8924','8928','8929','8932','8933','8934','8935','8936','8937','8938','8942']
    #上櫃其他電子    
    otc9 = ['1785','3067','3093','3131','3285','3289','3303','3324','3373','3402','3498','3508','3541','3551','3552','3580','3587','3628','3642','3663','4554','4760','5205','5383','5452','5489','5493','5536','6146','6151','6187','6247','6275','6438','6512','6613','6654','6667','8047','8085','8092','8183','8383','8431','8455']
    #上櫃油電燃氣業    
    otc10 = ['8908','8917','8927','8931']


    #上櫃電子商務
    otc11 = ['3085','3687','5278','5287','8044','8472','8477']
    #上櫃食品工業
    otc12 = ['1258','1264','1796','4205','4207','4712']
    #上櫃觀光事業   
    otc13 = ['1259','1268','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2928','3252','3522','4804','5301','5364','5701','5703','5704','8077']
    #上櫃通信網路 
    otc14 = ['3081','3095','3152','3163','3221','3234','3306','3363','3466','3491','3499','3558','3564','3632','3664','3672','3684','4903','4905','4908','4909','4979','5348','5353','6109','6143','6163','6170','6190','6218','6241','6245','6263','6417','6426','6465','6470','6486','6514','6530','6561','6588','8034','8048','8059','8097','8171','8176']
    #上櫃造紙工業   
    otc15 = ['2916','2924','2937','3171','5902','5903','5904','5905','6195','8066','8433','8941','9960']
    #上櫃貿易百貨    
    otc16 = ['1432','2601','2614','2901','2903','2905','2906','2908','2910','2911','2912','2913','2915','2929','2936','2939','4807','5906','5907','8429','8443','8454']
    #上櫃塑膠工業   
    otc17 = ['4303','4304','4305','8354','9950']
    #上櫃資訊服務   
    otc18 = ['3147','3570','4953','5201','5202','5209','5210','5211','5212','5310','5403','5410','6140','6148','6221','6231','6240','6404','6516','6590','6593','6690','6697','8099','8284','8416']
    #上櫃電子通路 
    otc19 = ['3224','3232','3360','3444','6113','6118','6154','6227','6265','6270','8032','8067','8068','8084','8096']
    #上櫃電子零組件 
    otc20 = ['1333','1336','1595','1815','3078','3089','3092','3114','3115','3144','3191','3202','3206','3207','3217','3236','3276','3288','3290','3294','3310','3313','3322','3332','3354','3388','3390','3465','3484','3492','3511','3512','3520','3526','3537','3548','3597','3609','3624','3631','3646','3689','3710','4542','4939','4974','5227','5291','5309','5321','5328','5340','5345','5349','5355','5381','5439','5457','5460','5464','5475','5488','5498','6114','6124','6126','6127','6134','6156','6158','6173','6174','6175','6185','6194','6203','6204','6207','6208','6210','6217','6220','6259','6266','6274','6279','6284','6290','6292','6418','6432','6538','6642','6664','8038','8042','8043','8071','8074','8080','8091','8093','8109','8121','8147','8155','8182','8289','8291','8358']

    #上櫃電腦及週邊設備業
    otc21 = ['1569','3071','3088','3211','3213','3272','3287','3323','3325','3479','3483','3521','3540','3577','3594','3611','3625','3652','3693','3709','4924','4931','4987','5223','5289','5304','5356','5386','5426','5438','5465','5474','5490','6121','6123','6150','6160','6161','6188','6228','6276','6441','6570','6577','6680','8050','8076','8234','8410']
    #上櫃電器電纜
    otc22 = ['2061','4609']
    #上櫃電機機械    
    otc23 = ['1570','1580','1586','1591','1597','1599','2066','2067','2070','2230','2235','3162','3178','3226','3379','3426','4502','4503','4506','4510','4513','4523','4527','4528','4530','4533','4534','4535','4538','4543','4549','4550','4561','4563','4568','4580','6122','6425','6603','6609','8027','8083','8107','8255','9951']
    #上櫃橡膠工業
    otc24 = ['5102']
    #上櫃鋼鐵工業   
    otc25 = ['2035','2063','2064','2065','5009','5011','5013','5014','5015','5016','6248','8349','8415','8930','9962']

    DB = Stock6Sign202203

    if (mess == "otc1"):
        Xgroup = '上櫃化學工業'
        signs = DB.objects.filter(cStockID__in = otc1).order_by('-cAverageScore')                
    elif (mess == "otc2"):
        Xgroup = '上櫃文化創意產業'
        signs = DB.objects.filter(cStockID__in = otc2).order_by('-cAverageScore')
    elif (mess == "otc3"):
        Xgroup = '上櫃紡織工業'
        signs = DB.objects.filter(cStockID__in = otc3).order_by('-cAverageScore')
    elif (mess == "otc4"):
        Xgroup = '上櫃半導體工業'
        signs = DB.objects.filter(cStockID__in = otc4).order_by('-cAverageScore')
    elif (mess == "otc5"):
        Xgroup = '上櫃生技醫療業'
        signs = DB.objects.filter(cStockID__in = otc5).order_by('-cAverageScore')
    elif (mess == "otc6"):
        Xgroup = '上櫃光電業'
        signs = DB.objects.filter(cStockID__in = otc6).order_by('-cAverageScore')
    elif (mess == "otc7"):
        Xgroup = '上櫃農業科技'
        signs = DB.objects.filter(cStockID__in = otc7).order_by('-cAverageScore')
    elif (mess == "otc8"):
        Xgroup = '上櫃其他'
        signs = DB.objects.filter(cStockID__in = otc8).order_by('-cAverageScore')
    elif (mess == "otc9"):
        Xgroup = '上櫃其他電子'
        signs = DB.objects.filter(cStockID__in = otc9).order_by('-cAverageScore')
    elif (mess == "otc10"):
        Xgroup = '上櫃油電燃氣業'
        signs = DB.objects.filter(cStockID__in = otc10).order_by('-cAverageScore')


    elif (mess == "otc11"):
        Xgroup = '上櫃電子商務'
        signs = DB.objects.filter(cStockID__in = otc11).order_by('-cAverageScore')                
    elif (mess == "otc12"):
        Xgroup = '上櫃食品工業'
        signs = DB.objects.filter(cStockID__in = otc12).order_by('-cAverageScore')
    elif (mess == "otc13"):
        Xgroup = '上櫃航運業'
        signs = DB.objects.filter(cStockID__in = otc13).order_by('-cAverageScore')
    elif (mess == "otc14"):
        Xgroup = '上櫃通信網路'
        signs = DB.objects.filter(cStockID__in = otc14).order_by('-cAverageScore')
    elif (mess == "otc15"):
        Xgroup = '上櫃造紙工業'
        signs = DB.objects.filter(cStockID__in = otc15).order_by('-cAverageScore')
    elif (mess == "otc16"):
        Xgroup = '上櫃貿易百貨'
        signs = DB.objects.filter(cStockID__in = otc16).order_by('-cAverageScore')
    elif (mess == "otc17"):
        Xgroup = '上櫃塑膠工業'
        signs = DB.objects.filter(cStockID__in = otc17).order_by('-cAverageScore')
    elif (mess == "otc18"):
        Xgroup = '上櫃資訊服務'
        signs = DB.objects.filter(cStockID__in = otc18).order_by('-cAverageScore')
    elif (mess == "otc19"):
        Xgroup = '上櫃電子通路'
        signs = DB.objects.filter(cStockID__in = otc19).order_by('-cAverageScore')
    elif (mess == "otc20"):
        Xgroup = '上櫃電子零組件'
        signs = DB.objects.filter(cStockID__in = otc20).order_by('-cAverageScore')


    elif (mess == "otc21"):
        Xgroup = '上櫃電腦及週邊設備業'
        signs = DB.objects.filter(cStockID__in = otc21).order_by('-cAverageScore')                
    elif (mess == "otc22"):
        Xgroup = '上櫃電器電纜'
        signs = DB.objects.filter(cStockID__in = otc22).order_by('-cAverageScore')
    elif (mess == "otc23"):
        Xgroup = '上櫃電機機械'
        signs = DB.objects.filter(cStockID__in = otc23).order_by('-cAverageScore')
    elif (mess == "otc24"):
        Xgroup = '上櫃橡膠工業'
        signs = DB.objects.filter(cStockID__in = otc24).order_by('-cAverageScore')
    elif (mess == "otc25"):
        Xgroup = '上櫃鋼鐵工業'
        signs = DB.objects.filter(cStockID__in = otc25).order_by('-cAverageScore')



    return render(request, "stock6listallotc.html", locals())




############################################################六大指標資料庫
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202005(request):
    signs = Stock6Sign202005.objects.all().order_by('id')
    return render(request, "stock6listall202005.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202006(request):
    signs = Stock6Sign202006.objects.all().order_by('cStockID')
    return render(request, "stock6listall202006.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q2(request):
    signs = Stock6Sign2020Q2.objects.all().order_by('cStockID')
    return render(request, "stock6listall2020Q2.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202008(request):
    signs = Stock6Sign202008.objects.all().order_by('cStockID')
    return render(request, "stock6listall202008.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202009(request):
    signs = Stock6Sign202009.objects.all().order_by('cStockID')
    return render(request, "stock6listall202009.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q3(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q3.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q3.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign2020Q3.objects.all().order_by('cStockID')
    return render(request, "stock6listall2020Q3.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202011(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign202011.objects.all().order_by('cStockID')
    return render(request, "stock6listall202011.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q4(request):
    '''
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign2020Q4.objects.all().order_by('cStockID')
    return render(request, "stock6listall2020Q4.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202101(request):
    '''
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign202101.objects.all().order_by('cStockID')
    return render(request, "stock6listall202101.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202102(request):
    '''
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign202102.objects.all().order_by('cStockID')
    return render(request, "stock6listall202102.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202103(request):

    
    signs = Stock6Sign202103.objects.all().order_by('cStockID')
    return render(request, "stock6listall202103.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202104(request):

    
    signs = Stock6Sign202104.objects.all().order_by('cStockID')
    return render(request, "stock6listall202104.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202105(request):

    
    signs = Stock6Sign202105.objects.all().order_by('cStockID')
    return render(request, "stock6listall202105.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202106(request):

    
    signs = Stock6Sign202106.objects.all().order_by('cStockID')
    return render(request, "stock6listall202106.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202107(request):

    
    signs = Stock6Sign202107.objects.all().order_by('cStockID')
    return render(request, "stock6listall202107.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202108(request):

    
    signs = Stock6Sign202108.objects.all().order_by('cStockID')
    return render(request, "stock6listall202108.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202109(request):

    
    signs = Stock6Sign202109.objects.all().order_by('cStockID')
    return render(request, "stock6listall202109.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202110(request):

    
    signs = Stock6Sign202110.objects.all().order_by('cStockID')
    return render(request, "stock6listall202110.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202111(request):

    
    signs = Stock6Sign202111.objects.all().order_by('cStockID')
    return render(request, "stock6listall202111.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202112(request):

    
    signs = Stock6Sign202112.objects.all().order_by('cStockID')
    return render(request, "stock6listall202112.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202201(request):

    
    signs = Stock6Sign202201.objects.all().order_by('cStockID')
    return render(request, "stock6listall202201.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202202(request):

    
    signs = Stock6Sign202202.objects.all().order_by('cStockID')
    return render(request, "stock6listall202202.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202203(request):

    
    signs = Stock6Sign202203.objects.all().order_by('cStockID')
    return render(request, "stock6listall202203.html", locals())
#################################################
'''
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6sta202105(request):
    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202105.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202105.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    
    import datetime
    wholetime = str(datetime.datetime.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數


    #if mess_db2 == "04":    ########選擇寫入的六大指標評分平均資料庫
        #DB2 = SubCats202104   
    #elif mess_db2 == "05":
        #DB2 = SubCats202105



    try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
        sign = Stock6sta2021.objects.get(cTime="2021/05")






    except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
        sign = Stock6sta2021.objects.create(cTime="2021/05", cOver3p=threeCategLength, cOver2p=twoCategLength, cOver1p=oneCategLength, cOver0p=zeroCategLength, cMorep=gainCategLength, cSamep=tieCategLength, cLessp=lossCategLength, pubtime=realtime)
        sign.save()

    
    signs = Stock6Sign202105.objects.all().order_by('cStockID')
    return render(request, "stock6sta202105.html", locals())
#################################################

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6sta202106(request):
    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202106.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202106.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    
    import datetime
    wholetime = str(datetime.datetime.now()) 
    realtime = wholetime[:16]  #取得獲取資料時間
        #取得六大指標平均分數


    #if mess_db2 == "04":    ########選擇寫入的六大指標評分平均資料庫
        #DB2 = SubCats202104   
    #elif mess_db2 == "05":
        #DB2 = SubCats202105



    try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
        sign = Stock6sta2021.objects.get(cTime="2021/06")






    except:  #針對沒有的股票，抓取資料存入資料庫
            #先創建7月資料，儲存
        sign = Stock6sta2021.objects.create(cTime="2021/06", cOver3p=threeCategLength, cOver2p=twoCategLength, cOver1p=oneCategLength, cOver0p=zeroCategLength, cMorep=gainCategLength, cSamep=tieCategLength, cLessp=lossCategLength, pubtime=realtime)
        sign.save()

    
    signs = Stock6Sign202106.objects.all().order_by('cStockID')
    return render(request, "stock6sta202106.html", locals())

#################################################
@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6sta2021(request):


    
    signs = Stock6sta2021.objects.all().order_by('cTime')
    return render(request, "stock6sta2021.html", locals())
    '''


########################################################################

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202005score(request):
    signs = Stock6Sign202005.objects.all().order_by('-cAverageScore')
    return render(request, "stock6listall202005score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202006score(request):
    signs = Stock6Sign202006.objects.all().order_by('-cAverageScore')
    return render(request, "stock6listall202006score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q2score(request):
    signs = Stock6Sign2020Q2.objects.all().order_by('-cAverageScore')
    return render(request, "stock6listall2020Q2score.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202008score(request):
    signs = Stock6Sign202008.objects.all().order_by('-cAverageScore')
    return render(request, "stock6listall202008score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202009score(request):
    signs = Stock6Sign202009.objects.all().order_by('-cAverageScore')
    return render(request, "stock6listall202009score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q3score(request):
    '''
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q3.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q3.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''

    #twoCateg = []
    #oneCateg = []
    #zeroCateg = []
    

        
        #aveScore = float(sign.cAverageScore)
        #aStockID = str(sign.cStockID)
        

            
        #elif 3 > (float(sign.cAverageScore)) >= 2:
            #twoCateg.append(sign.cStockID) 
            
        #elif 2 > (float(sign.cAverageScore)) >= 1:
            #oneCateg.append(sign.cStockID) 
            
        #elif 1 > (float(sign.cAverageScore)) >= 0:
            #zeroCateg.append(sign.cStockID)


    #threeCategLength = len(threeCateg)   
    #twoCategLength = len(twoCateg)   
    #oneCategLength = len(oneCateg)      
    #zeroCategLength = len(zeroCateg)       
    signs = Stock6Sign2020Q3.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall2020Q3score.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202011score(request):
    '''
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass

    '''
    signs = Stock6Sign202011.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202011score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall2020Q4score(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign2020Q4.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall2020Q4score.html", locals())    


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202101score(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign202101.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202101score.html", locals()) 


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202102score(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign2020Q4.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = Stock6Sign202102.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202102score.html", locals()) 

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202103score(request):

    signs = Stock6Sign202103.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202103score.html", locals()) 


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202104score(request):

    signs = Stock6Sign202104.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202104score.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202105score(request):

    signs = Stock6Sign202105.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202105score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202106score(request):

    signs = Stock6Sign202106.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202106score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202107score(request):

    signs = Stock6Sign202107.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202107score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202108score(request):

    signs = Stock6Sign202108.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202108score.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202109score(request):

    signs = Stock6Sign202109.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202109score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202110score(request):

    signs = Stock6Sign202110.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202110score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202111score(request):

    signs = Stock6Sign202111.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202111score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202112score(request):

    signs = Stock6Sign202112.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202112score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202201score(request):

    signs = Stock6Sign202201.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202201score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202202score(request):

    signs = Stock6Sign202202.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202202score.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def stock6listall202203score(request):

    signs = Stock6Sign202203.objects.all().order_by('-cAverageScore')

    
    return render(request, "stock6listall202203score.html", locals())
#############本益比區間



@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202005(request):
    segs = StockPERseg202005.objects.all().order_by('id')
    return render(request, "stockPERseglistall202005.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202006(request):
    segs = StockPERseg202006.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202006.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q2(request):
    segs = StockPERseg2020Q2.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall2020Q2.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202008(request):
    segs = StockPERseg202008.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202008.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202009(request):
    segs = StockPERseg202009.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202009.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q3(request):
    segs = StockPERseg2020Q3.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall2020Q3.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202011(request):
    segs = StockPERseg202011.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202011.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q4(request):
    segs = StockPERseg2020Q4.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall2020Q4.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202101(request):
    segs = StockPERseg202101.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202101.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202102(request):
    segs = StockPERseg202102.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202102.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202103(request):
    segs = StockPERseg202103.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202103.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202104(request):
    segs = StockPERseg202104.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202104.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202105(request):
    segs = StockPERseg202105.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202105.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202106(request):
    segs = StockPERseg202106.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202106.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202107(request):
    segs = StockPERseg202107.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202107.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202108(request):
    segs = StockPERseg202108.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202108.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202109(request):
    segs = StockPERseg202109.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202109.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202110(request):
    segs = StockPERseg202110.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202110.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202111(request):
    segs = StockPERseg202111.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202111.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202112(request):
    segs = StockPERseg202112.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202112.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202201(request):
    segs = StockPERseg202201.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202201.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202202(request):
    segs = StockPERseg202202.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202202.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202203(request):
    segs = StockPERseg202203.objects.all().order_by('cStockID')
    return render(request, "stockPERseglistall202203.html", locals())





##########################################################################
@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202005score(request):
    segs = StockPERseg202005.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202005score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202006score(request):
    segs = StockPERseg202006.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202006score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q2score(request):
    segs = StockPERseg2020Q2.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall2020Q2score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202008score(request):
    segs = StockPERseg202008.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202008score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202009score(request):
    segs = StockPERseg202009.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202009score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q3score(request):
    segs = StockPERseg2020Q3.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall2020Q3score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202011score(request):
    segs = StockPERseg202011.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202011score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall2020Q4score(request):
    segs = StockPERseg2020Q4.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall2020Q4score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202101score(request):
    segs = StockPERseg202101.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202101score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202102score(request):
    segs = StockPERseg202102.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202102score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202103score(request):
    segs = StockPERseg202103.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202103score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202104score(request):
    segs = StockPERseg202104.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202104score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202105score(request):
    segs = StockPERseg202105.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202105score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202106score(request):
    segs = StockPERseg202106.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202106score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202107score(request):
    segs = StockPERseg202107.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202107score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202108score(request):
    segs = StockPERseg202108.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202108score.html", locals())




@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202109score(request):
    segs = StockPERseg202109.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202109score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202110score(request):
    segs = StockPERseg202110.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202110score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202111score(request):
    segs = StockPERseg202111.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202111score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202112score(request):
    segs = StockPERseg202112.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202112score.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202201score(request):
    segs = StockPERseg202201.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202201score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202202score(request):
    segs = StockPERseg202202.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202202score.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERseglistall202203score(request):
    segs = StockPERseg202203.objects.all().order_by('-cRisk_reward')
    return render(request, "stockPERseglistall202203score.html", locals())
###################





@permission_required('myapp.Can_enter_All', login_url='/login2/')
def Epsachiever(request):   #EPS達成率

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        eps1, epsq1, epsAchieveRate, stock_name, epsq2, epsq3, epsq1N = func4.EPSach(mess)
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #if (round((float(epsq1)+float(epsq2))/float(eps1),4) > 0.6):        
            #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
                #eps = models.EPSachieve2020Q2.objects.get(cStockID=mess)

            #except:  #針對沒有的股票，抓取資料存入資料庫
                #eps = models.EPSachieve2020Q2.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPSQ1=epsq1, cEPSQ2=epsq2, cEPSAchieveRate=epsAchieveRate, pubtime=realtime)
                #eps.save()
               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "Epsachiever.html", locals())

@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def EpsachieverAdmin(request):   #EPS達成率

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容

        eps1, epsq1, epsAchieveRate, stock_name, epsq2, epsq3, epsq1N = func4.EPSach(mess)
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        if (epsq1N[-2:] == "1Q" and round(float(epsq1)/float(eps1),4) >= 0.33):        
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
                eps = models.EPSachieve2021Q1.objects.get(cStockID=mess)

            except:  #針對沒有的股票，抓取資料存入資料庫
                eps = models.EPSachieve2021Q1.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPSQ1=epsq1, cEPSAchieveRate=epsAchieveRate, pubtime=realtime)
                eps.save()

        elif (epsq1N[-2:] == "2Q" and round((float(epsq1) + float(epsq2))/float(eps1),4) >= 0.66):        
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
                eps = models.EPSachieve2021Q2.objects.get(cStockID=mess)

            except:  #針對沒有的股票，抓取資料存入資料庫
                eps = models.EPSachieve2021Q2.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPSQ1=epsq1, cEPSQ2=epsq2, cEPSAchieveRate=epsAchieveRate, pubtime=realtime)
                eps.save()                

        elif (epsq1N[-2:] == "3Q" and round((float(epsq1) + float(epsq2) + float(epsq3))/float(eps1),4) >= 1):        
            try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
                eps = models.EPSachieve2021Q3.objects.get(cStockID=mess)

            except:  #針對沒有的股票，抓取資料存入資料庫
                eps = models.EPSachieve2021Q3.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPSQ1=epsq1, cEPSQ2=epsq2, cEPSQ3=epsq3, cEPSAchieveRate=epsAchieveRate, pubtime=realtime)
                eps.save() 
        else:
            pass

        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "EpsachieverAdmin.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapGetter(request):    #股本變動率

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name, cap1, cap2, cap3, cap4, cap5, cap6, cap7, cap8, latest_cap_YoY, latest_cap_MoM = func4x.StockCap(mess)
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
                
        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #cap = models.StockCapVar.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #cap = models.StockCapVar.objects.create(cStockID=mess, cStockName=stock_name, cCap1=cap1, cCap2=cap2, cCap3=cap3, cCap4=cap4, cCap5=cap5, cCap6=cap6, cCap7=cap7, cCap8=cap8, cLatestYoY=latest_cap_YoY, cLatestMoM=latest_cap_MoM, pubtime=realtime)
            #cap.save()
               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "StockCapGetter.html", locals())



@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def StockCapGetterAdmin(request):    #股本變動率

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容

        stock_name, cap1, cap2, cap3, cap4, cap5, cap6, cap7, cap8, latest_cap_YoY, latest_cap_MoM = func4x.StockCap(mess)
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
                
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            cap = models.StockCapVar2021Q4.objects.get(cStockID=mess)

        except:  #針對沒有的股票，抓取資料存入資料庫
            cap = models.StockCapVar2021Q4.objects.create(cStockID=mess, cStockName=stock_name, cCap1=cap1, cCap2=cap2, cCap3=cap3, cCap4=cap4, cCap5=cap5, cCap6=cap6, cCap7=cap7, cCap8=cap8, cLatestYoY=latest_cap_YoY, cLatestMoM=latest_cap_MoM, pubtime=realtime)
            cap.save()
               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "StockCapGetterAdmin.html", locals())


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfitGetter(request):   #EPS和營益率創新高？

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        eps1, eps2, eps3, eps4, eps5, eps6, eps7, eps8, Prof1N, Prof2N, Prof3N, Prof4N, Prof5N, Prof6N, Prof7N, Prof8N, Prof1, Prof2, Prof3, Prof4, Prof5, Prof6, Prof7, Prof8, pProf1, pProf2, pProf3, pProf4, pProf5, pProf6, pProf7, pProf8, eps8max, Prof8max, stock_name, epsNewHigh, ProfNewHigh = func4x.EPSnProfit(mess)
        #import datetime
        #wholetime = str(datetime.datetime.now()) 
        #realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        #if (epsNewHigh == 'Yes' or ProfNewHigh == 'Yes'):
            #try:
                #EpsP = models.EpsProfit2020Q1.objects.get(cStockID=mess)
            #except:
                #EpsP = models.EpsProfit2020Q1.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cEPS6=eps6, cEPS7=eps7, cEPS8=eps8, cProf1=Prof1, cProf2=Prof2, cProf3=Prof3, cProf4=Prof4, cProf5=Prof5, cProf6=Prof6, cProf7=Prof7, cProf8=Prof8)
                #EpsP.save()

    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "EPSnProfitGetter.html", locals())


@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def EPSnProfitGetterAdmin(request):   #EPS和營益率創新高？

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容



        eps1, eps2, eps3, eps4, eps5, eps6, eps7, eps8, Prof1N, Prof2N, Prof3N, Prof4N, Prof5N, Prof6N, Prof7N, Prof8N, Prof1, Prof2, Prof3, Prof4, Prof5, Prof6, Prof7, Prof8, pProf1, pProf2, pProf3, pProf4, pProf5, pProf6, pProf7, pProf8, eps8max, Prof8max, stock_name, epsNewHigh, ProfNewHigh = func4x.EPSnProfit(mess)
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        #取得股票名稱
        if (epsNewHigh == 'Yes' or ProfNewHigh == 'Yes'):
            try:
                EpsP = models.EpsProfit2021Q4.objects.get(cStockID=mess)
            except:
                EpsP = models.EpsProfit2021Q4.objects.create(cStockID=mess, cStockName=stock_name, cEPS1=eps1, cEPS2=eps2, cEPS3=eps3, cEPS4=eps4, cEPS5=eps5, cEPS6=eps6, cEPS7=eps7, cEPS8=eps8, cProf1=Prof1, cProf2=Prof2, cProf3=Prof3, cProf4=Prof4, cProf5=Prof5, cProf6=Prof6, cProf7=Prof7, cProf8=Prof8)
                EpsP.save()

    else:
        mess = "台股代號尚未送出！"
        
    return render(request, "EPSnProfitGetterAdmin.html", locals())

    #url_pool = ['http://dj.mybank.com.tw','http://jdata.yuanta.com.tw','http://jsjustweb.jihsun.com.tw','http://stockchannel.sinotrade.com.tw','http://www.emega.com.tw','http://djfubonholdingfund.fbs.com.tw','http://stocks.ftsi.com.tw','http://www.esunsec.com.tw','http://tcfhcsec.moneydj.com','http://kgieworld.moneydj.com','http://pscnetinvest.moneydj.com','http://web.tcsc.com.tw','http://just.honsec.com.tw','http://ycsc.moneydj.com','http://easyfun.concords.com.tw','http://just2.entrust.com.tw','http://newjust.masterlink.com.tw','http://jsinfo.wls.com.tw','http://stock.capital.com.tw']

    #url_chosen = random.choice(url_pool)
##################下載區#############################################################    
@permission_required('myapp.Can_enter_PaidUsersOnly', login_url='/login2/')
def AREAdownloads(request):
    return render(request,"AREAdownloads.html")


   
@permission_required('myapp.Can_enter_stock6', login_url='/login2/')
def stock6downloads(request):
    return render(request,"stock6downloads.html")


@permission_required('myapp.Can_enter_stockPERseg', login_url='/login2/')
def stockPERsegdownloads(request):
    return render(request,"stockPERsegdownloads.html")



@permission_required('myapp.Can_enter_All', login_url='/login2/')
def stockEnterAlldownloads(request):
    return render(request,"stockEnterAlldownloads.html")

##################EPS達成率區##################################################
@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSachieve2020Q2listall(request):
    alleps = EPSachieve2020Q2.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "EPSachieve2020Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSachieve2020Q3listall(request):
    alleps = EPSachieve2020Q3.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "EPSachieve2020Q3listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSachieve2021Q1listall(request):
    alleps = EPSachieve2021Q1.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "EPSachieve2021Q1listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSachieve2021Q2listall(request):
    alleps = EPSachieve2021Q2.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "EPSachieve2021Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSachieve2021Q3listall(request):
    alleps = EPSachieve2021Q3.objects.all().order_by('-cEPSAchieveRate')
    return render(request, "EPSachieve2021Q3listall.html", locals())
####################################################################################




@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2020Q2listall(request):
    caps = StockCapVar2020Q2.objects.all().order_by('id')
    return render(request, "StockCapVar2020Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2020Q3listall(request):
    caps = StockCapVar2020Q3.objects.all().order_by('id')
    return render(request, "StockCapVar2020Q3listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2020Q4listall(request):
    caps = StockCapVar2020Q4.objects.all().order_by('id')
    return render(request, "StockCapVar2020Q4listall.html", locals())


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2021Q1listall(request):
    caps = StockCapVar2021Q1.objects.all().order_by('id')
    return render(request, "StockCapVar2021Q1listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2021Q2listall(request):
    caps = StockCapVar2021Q2.objects.all().order_by('id')
    return render(request, "StockCapVar2021Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2021Q3listall(request):
    caps = StockCapVar2021Q3.objects.all().order_by('id')
    return render(request, "StockCapVar2021Q3listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def StockCapVar2021Q4listall(request):
    caps = StockCapVar2021Q4.objects.all().order_by('id')
    return render(request, "StockCapVar2021Q4listall.html", locals())
######################################################################



@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfitlistall2020Q1(request):
    allepsprof = EpsProfit2020Q1.objects.all().order_by('id')
    return render(request, "EPSnProfitlistall2020Q1.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2020Q2listall(request):
    allepsprof = EpsProfit2020Q2.objects.all().order_by('id')
    return render(request, "EPSnProfit2020Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2020Q3listall(request):
    allepsprof = EpsProfit2020Q3.objects.all().order_by('id')
    return render(request, "EPSnProfit2020Q3listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2020Q4listall(request):
    allepsprof = EpsProfit2020Q4.objects.all().order_by('id')
    return render(request, "EPSnProfit2020Q4listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2021Q1listall(request):
    allepsprof = EpsProfit2021Q1.objects.all().order_by('id')
    return render(request, "EPSnProfit2021Q1listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2021Q2listall(request):
    allepsprof = EpsProfit2021Q2.objects.all().order_by('id')
    return render(request, "EPSnProfit2021Q2listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2021Q3listall(request):
    allepsprof = EpsProfit2021Q3.objects.all().order_by('id')
    return render(request, "EPSnProfit2021Q3listall.html", locals())

@permission_required('myapp.Can_enter_All', login_url='/login2/')
def EPSnProfit2021Q4listall(request):
    allepsprof = EpsProfit2021Q4.objects.all().order_by('id')
    return render(request, "EPSnProfit2021Q4listall.html", locals())

##############################################################

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2020(request):
    stas = StockPERsegStable2020.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2020.html", locals())



@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2020Q2(request):
    stas = StockPERsegStable2020Q2.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2020Q2.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2020Q3(request):
    stas = StockPERsegStable2020Q3.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2020Q3.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2020Q4(request):
    stas = StockPERsegStable2020Q4.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2020Q4.html", locals())


@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2021Q1(request):
    stas = StockPERsegStable2021Q1.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2021Q1.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2021Q2(request):
    stas = StockPERsegStable2021Q2.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2021Q2.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2021Q3(request):
    stas = StockPERsegStable2021Q3.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2021Q3.html", locals())

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2021Q4(request):
    stas = StockPERsegStable2021Q4.objects.all().order_by('id')
    return render(request, "stockPERsegStablelistall2021Q4.html", locals())
'''

@permission_required('myapp.Can_enter_stockPERseg DB', login_url='/login2/')
def stockPERsegStablelistall2020Q2(request):
    stas = StockPERsegStable2020Q2.objects.all().order_by('cStockID')
    return render(request, "StockPERsegStable2020Q2.html", locals())
'''
######################################################################


@permission_required('myapp.Can_enter_All', login_url='/login2/')
def BigMoney(request):  #查詢大戶持股比率，給付費使用者使用

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        stock_name, pBoard, pForeign, pInvest, pSecurity, pBig, pIndiv =func4.InstituRate(mess) #取得六大指標平均
        #取得股票名稱
        
        
        #try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #sign = models.Stock6Sign.objects.get(cStockID=mess)

        #except:  #針對沒有的股票，抓取資料存入資料庫
            #sign = models.Stock6Sign.objects.create(cStockID=mess, cStockName=stock_name, cSign1=result1, cSign2=result2, cSign3=result3, cSign4=result4, cSign5=result5, cSign6=result6, cAverageScore=average6stock, pubtime=realtime)
            #sign.save()
               
       
        #mess2 = request.POST['xdays']  #取得表單輸入內容
    else:
        mess = "台股代號尚未送出！"


        #mess2 = "該表單尚未送出！2"
    return render(request, "BigMoney.html", locals())
#######################################################################################################

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_Stock6Admin(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容

        stock_name = func2.GetStockName(mess)

        newest_Rev_month, newest_Fin_Q = func2.CheckNewFnR(mess)
        
        resultS1AA1, resultS1A1, resultS1A2, resultS1BB1, resultS1BB3, resultS1B1, resultS1C1, resultS1C2, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2t.DCstock_Rev(mess)
        resultS2AA1, resultS2AA2, resultS2A1, resultS2A2, resultS2BB1, resultS2BB2, resultS2BB3, resultS2B1, resultS2B2, resultS2C1, resultS2C2, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2t.DCstock_Prof(mess)
        resultS3C1, resultS3B1, resultS3B2, resultS3B3, resultS3BB1, resultS3BB2, resultS3BB3, resultS3A1, resultS3AA1, resultS3AA2, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2t.DCstock_NetInc(mess)
        resultS4C1, resultS4B1, resultS4B2, resultS4BB1, resultS4A1, resultS4AA1, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2t.DCstock_EPS(mess)
        resultS5No1, resultS5C1, resultS5B1, resultS5BB1, resultS5BB2, resultS5A1, resultS5AA1, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2t.DCstock_InvTO(mess)
        resultS6C1, resultS6B1, resultS6BB1, resultS6A1, resultS6AA1, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2t.DCstock_Cashflow(mess)

        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間




        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理

            #不存在，發生錯誤，跳到except            
            sign = models.DCStock6Sign202108.objects.get(cStockID=mess)



        except:  #針對沒有的股票，抓取資料存入資料庫

            sign = models.DCStock6Sign202108.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cS1AA1 = resultS1AA1, cS1A1 = resultS1A1, cS1A2 = resultS1A2, cS1BB1 = resultS1BB1, cS1BB3 = resultS1BB3, cS1B1 = resultS1B1, cS1C1 = resultS1C1, cS1C2 = resultS1C2, cS2AA1 = resultS2AA1, cS2AA2 = resultS2AA2, cS2A1 = resultS2A1, cS2A2 = resultS2A2, cS2BB1 = resultS2BB1, cS2BB2 = resultS2BB2, cS2BB3 = resultS2BB3, cS2B1 = resultS2B1, cS2B2 = resultS2B2, cS2C1 = resultS2C1, cS2C2 = resultS2C2, cS3AA1 = resultS3AA1, cS3AA2 = resultS3AA2, cS3A1 = resultS3A1, cS3BB1 = resultS3BB1, cS3BB2 = resultS3BB2, cS3BB3 = resultS3BB3, cS3B1 = resultS3B1, cS3B2 = resultS3B2, cS3B3 = resultS3B3, cS3C1 = resultS3C1, cS4AA1 = resultS4AA1, cS4A1 = resultS4A1, cS4BB1 = resultS4BB1, cS4B1 = resultS4B1, cS4B2 = resultS4B2, cS4C1 = resultS4C1, cS5AA1 = resultS5AA1, cS5A1 = resultS5A1, cS5BB1 = resultS5BB1, cS5BB2 = resultS5BB2, cS5B1 = resultS5B1, cS5C1 = resultS5C1, cS5No1 = resultS5No1, cS6AA1 = resultS6AA1, cS6A1 = resultS6A1, cS6BB1 = resultS6BB1, cS6B1 = resultS6B1, cS6C1 = resultS6C1, pubtime=realtime)
            
            sign.save()
            #sign11 = models.DCStock6Sign202011.objects.create(cStockID=mess, cStockName=stock_name, cNewestSeason=newest_Fin_Q, cNewestRev=newest_Rev_month, cS1AA1 = resultS1AA1, cS1A1 = resultS1A1, cS1A2 = resultS1A2, cS1BB1 = resultS1BB1, cS1BB3 = resultS1BB3, cS1B1 = resultS1B1, cS1C1 = resultS1C1, cS1C2 = resultS1C2, cS2AA1 = resultS2AA1, cS2AA2 = resultS2AA2, cS2A1 = resultS2A1, cS2A2 = resultS2A2, cS2BB1 = resultS2BB1, cS2BB2 = resultS2BB2, cS2BB3 = resultS2BB3, cS2B1 = resultS2B1, cS2B2 = resultS2B2, cS2C1 = resultS2C1, cS2C2 = resultS2C2, cS3AA1 = resultS3AA1, cS3AA2 = resultS3AA2, cS3A1 = resultS3A1, cS3BB1 = resultS3BB1, cS3BB2 = resultS3BB2, cS3BB3 = resultS3BB3, cS3B1 = resultS3B1, cS3B2 = resultS3B2, cS3B3 = resultS3B3, cS3C1 = resultS3C1)

    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_Stock6Admin.html", locals())




@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_Rev(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name = func2.GetStockName(mess)


        resultAA1, resultA1, resultA2, resultBB1, resultBB3, resultB1, resultC1, resultC2, b1N, b2N, b3N, b4N, b5N, b6N, nb1, nb2, nb3, nb4, nb5, nb6, nb9, nb10, b7N, nb7 = func2t.DCstock_Rev(mess)


    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_Rev.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_Prof(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]


        stock_name = func2.GetStockName(mess)

        resultAA1, resultAA2, resultA1, resultA2, resultBB1, resultBB2, resultBB3, resultB1, resultB2, resultC1, resultC2, a1N, a2N, a3N, a4N, a5N, a6N, a7N, a8N, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a10p = func2t.DCstock_Prof(mess)



    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_Prof.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_NetInc(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name = func2.GetStockName(mess)

        resultC1, resultB1, resultB2, resultB3, resultBB1, resultBB2, resultBB3, resultA1, resultAA1, resultAA2, c1N, c2N, c3N, c4N, c5N, c6N, c7N, c8N, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, pc9, pc10, pc11 = func2t.DCstock_NetInc(mess)



    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_NetInc.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_EPS(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name = func2.GetStockName(mess)

        resultC1, resultB1, resultB2, resultBB1, resultA1, resultAA1, EPSN, EPS, d1N, d2N, d3N, d4N, d5N, d6N, d7N, d8N, d1, d2, d3, d4, d5, d6, d7, d8 = func2t.DCstock_EPS(mess)



    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_EPS.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_InvTO(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name = func2.GetStockName(mess)

        resultNo1, resultC1, resultB1, resultBB1, resultBB2, resultA1, resultAA1, e1N, e2N, e3N, e4N, e5N, e6N, e7N, e8N, e1, e2, e3, e4, e5, e6, e7, e8 = func2t.DCstock_InvTO(mess)



    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_InvTO.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DC_Cashflow(request):  #

    if request.method == "POST":  #假如是以POST方式才處理
        #mess = request.POST['stockid']  #取得表單輸入內容
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]

        stock_name = func2.GetStockName(mess)

        resultC1, resultB1, resultBB1, resultA1, resultAA1, f1N, f2N, f3N, f4N, f5N, f6N, f7N, f8N, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 = func2t.DCstock_Cashflow(mess)



    else:
        mess = "台股代號尚未送出！"


    return render(request, "DC_Cashflow.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202011(request):

    
    signs = DCStock6Sign202011.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202011.html", locals())



@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall2020Q4(request):

    
    signs = DCStock6Sign2020Q4.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall2020Q4.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202101(request):

    
    signs = DCStock6Sign202101.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202101.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202102(request):
    '''    
    TSEAll = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958']
    OTCAll = ['1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']
    Allcompany = ['1101','1102','1103','1104','1108','1109','1110','1201','1203','1210','1213','1215','1216','1217','1218','1219','1220','1225','1227','1229','1231','1232','1233','1234','1235','1236','1256','1301','1303','1304','1305','1307','1308','1309','1310','1312','1313','1314','1315','1316','1319','1321','1323','1324','1325','1326','1337','1338','1339','1340','1341','1402','1409','1410','1413','1414','1416','1417','1418','1419','1423','1432','1434','1435','1436','1437','1438','1439','1440','1441','1442','1443','1444','1445','1446','1447','1449','1451','1452','1453','1454','1455','1456','1457','1459','1460','1463','1464','1465','1466','1467','1468','1470','1471','1472','1473','1474','1475','1476','1477','1503','1504','1506','1507','1512','1513','1514','1515','1516','1517','1519','1521','1522','1524','1525','1526','1527','1528','1529','1530','1531','1532','1533','1535','1536','1537','1538','1539','1540','1541','1558','1560','1568','1582','1583','1587','1589','1590','1592','1598','1603','1604','1605','1608','1609','1611','1612','1614','1615','1616','1617','1618','1626','1701','1702','1707','1708','1709','1710','1711','1712','1713','1714','1717','1718','1720','1721','1722','1723','1724','1725','1726','1727','1730','1731','1732','1733','1734','1735','1736','1737','1760','1762','1773','1776','1783','1786','1789','1795','1802','1805','1806','1808','1809','1810','1817','1903','1904','1905','1906','1907','1909','2002','2006','2007','2008','2009','2010','2012','2013','2014','2015','2017','2020','2022','2023','2024','2025','2027','2028','2029','2030','2031','2032','2033','2034','2038','2049','2059','2062','2069','2101','2102','2103','2104','2105','2106','2107','2108','2109','2114','2115','2201','2204','2206','2207','2208','2227','2228','2231','2233','2236','2239','2241','2243','2247','2301','2302','2303','2305','2308','2312','2313','2314','2316','2317','2321','2323','2324','2327','2328','2329','2330','2331','2332','2337','2338','2340','2342','2344','2345','2347','2348','2349','2351','2352','2353','2354','2355','2356','2357','2358','2359','2360','2362','2363','2364','2365','2367','2368','2369','2371','2373','2374','2375','2376','2377','2379','2380','2382','2383','2385','2387','2388','2390','2392','2393','2395','2397','2399','2401','2402','2404','2405','2406','2408','2409','2412','2413','2414','2415','2417','2419','2420','2421','2423','2424','2425','2426','2427','2428','2429','2430','2431','2433','2434','2436','2438','2439','2440','2441','2442','2443','2444','2448','2449','2450','2451','2453','2454','2455','2456','2457','2458','2459','2460','2461','2462','2464','2465','2466','2467','2468','2471','2472','2474','2476','2477','2478','2480','2481','2482','2483','2484','2485','2486','2488','2489','2491','2492','2493','2495','2496','2497','2498','2499','2501','2504','2505','2506','2509','2511','2514','2515','2516','2520','2524','2527','2528','2530','2534','2535','2536','2537','2538','2539','2540','2542','2543','2545','2546','2547','2548','2597','2601','2603','2605','2606','2607','2608','2609','2610','2611','2612','2613','2614','2615','2616','2617','2618','2630','2633','2634','2636','2637','2642','2701','2702','2704','2705','2706','2707','2712','2722','2723','2727','2731','2739','2748','2801','2809','2812','2816','2820','2823','2832','2834','2836','2838','2841','2845','2849','2850','2851','2852','2855','2867','2880','2881','2882','2883','2884','2885','2886','2887','2888','2889','2890','2891','2892','2897','2901','2903','2904','2905','2906','2908','2910','2911','2912','2913','2915','2923','2929','2936','2939','3002','3003','3004','3005','3006','3008','3010','3011','3013','3014','3015','3016','3017','3018','3019','3021','3022','3023','3024','3025','3026','3027','3028','3029','3030','3031','3032','3033','3034','3035','3036','3037','3038','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','3052','3054','3055','3056','3057','3058','3059','3060','3062','3090','3094','3130','3149','3164','3167','3189','3209','3229','3231','3257','3266','3296','3305','3308','3311','3312','3321','3338','3346','3356','3376','3380','3383','3406','3413','3416','3419','3432','3437','3443','3450','3454','3481','3494','3501','3504','3515','3518','3528','3530','3532','3533','3535','3536','3543','3545','3550','3557','3563','3576','3583','3588','3591','3593','3596','3605','3607','3617','3622','3645','3653','3661','3665','3669','3673','3679','3682','3686','3694','3698','3701','3702','3703','3704','3705','3706','3708','3711','3712','4104','4106','4108','4119','4133','4137','4141','4142','4148','4155','4164','4190','4306','4414','4426','4438','4439','4526','4532','4536','4540','4545','4551','4552','4555','4557','4560','4562','4564','4566','4571','4572','4576','4581','4720','4722','4725','4737','4739','4746','4755','4763','4764','4766','4807','4904','4906','4912','4915','4916','4919','4927','4930','4934','4935','4938','4942','4943','4952','4956','4958','4960','4961','4967','4968','4976','4977','4989','4994','4999','5007','5203','5215','5225','5234','5243','5258','5264','5269','5283','5284','5285','5288','5305','5388','5434','5469','5471','5484','5515','5519','5521','5522','5525','5531','5533','5534','5538','5546','5607','5608','5706','5871','5876','5880','5906','5907','6005','6024','6108','6112','6115','6116','6117','6120','6128','6131','6133','6136','6139','6141','6142','6152','6153','6155','6164','6165','6166','6168','6172','6176','6177','6183','6184','6189','6191','6192','6196','6197','6201','6202','6205','6206','6209','6213','6214','6215','6216','6224','6225','6226','6230','6235','6239','6243','6251','6257','6269','6271','6277','6278','6281','6282','6283','6285','6288','6289','6405','6409','6412','6414','6415','6416','6431','6442','6443','6449','6451','6456','6464','6477','6491','6504','6505','6525','6531','6533','6541','6552','6558','6573','6579','6581','6582','6591','6592','6598','6605','6625','6641','6655','6666','6668','6669','6670','6671','6672','6674','6698','6706','6715','6754','8011','8016','8021','8028','8033','8039','8046','8070','8072','8081','8101','8103','8104','8105','8110','8112','8114','8131','8150','8163','8201','8210','8213','8215','8222','8249','8261','8271','8341','8367','8374','8404','8411','8422','8427','8429','8442','8443','8454','8462','8463','8464','8466','8467','8473','8478','8480','8481','8482','8488','8499','8926','8940','8996','9105','912000','912398','9802','9902','9904','9905','9906','9907','9908','9910','9911','9912','9914','9917','9918','9919','9921','9924','9925','9926','9927','9928','9929','9930','9931','9933','9934','9935','9937','9938','9939','9940','9941','9942','9943','9944','9945','9946','9955','9958','1240','1258','1259','1264','1268','1333','1336','1565','1569','1570','1580','1584','1586','1591','1593','1595','1597','1599','1742','1752','1777','1781','1784','1785','1788','1796','1799','1813','1815','2035','2061','2063','2064','2065','2066','2067','2070','2221','2230','2235','2596','2640','2641','2643','2718','2719','2724','2726','2729','2732','2734','2736','2740','2743','2745','2752','2754','2916','2924','2926','2928','2937','3064','3066','3067','3071','3073','3078','3081','3083','3085','3086','3088','3089','3092','3093','3095','3105','3114','3115','3118','3122','3128','3131','3141','3144','3147','3152','3162','3163','3169','3171','3176','3178','3188','3191','3202','3205','3206','3207','3211','3213','3217','3218','3219','3221','3224','3226','3227','3228','3230','3232','3234','3236','3252','3259','3260','3264','3265','3268','3272','3276','3284','3285','3287','3288','3289','3290','3293','3294','3297','3303','3306','3310','3313','3317','3322','3323','3324','3325','3332','3339','3354','3360','3362','3363','3372','3373','3374','3379','3388','3390','3402','3426','3434','3438','3441','3444','3455','3465','3466','3479','3483','3484','3489','3490','3491','3492','3498','3499','3508','3511','3512','3516','3520','3521','3522','3523','3526','3527','3529','3531','3537','3540','3541','3546','3548','3551','3552','3555','3556','3558','3564','3567','3570','3577','3580','3581','3587','3594','3597','3609','3611','3615','3623','3624','3625','3628','3629','3630','3631','3632','3642','3646','3652','3663','3664','3666','3672','3675','3680','3684','3685','3687','3689','3691','3693','3707','3709','3710','3713','4102','4105','4107','4109','4111','4113','4114','4116','4120','4121','4123','4126','4127','4128','4129','4130','4131','4138','4139','4147','4152','4153','4154','4157','4160','4161','4162','4163','4167','4168','4171','4173','4174','4175','4183','4188','4192','4198','4205','4207','4303','4304','4305','4401','4402','4406','4413','4416','4417','4419','4420','4429','4430','4432','4433','4502','4503','4506','4510','4513','4523','4527','4528','4529','4530','4533','4534','4535','4538','4541','4542','4543','4549','4550','4554','4556','4561','4563','4568','4580','4609','4702','4706','4707','4711','4712','4714','4716','4721','4726','4728','4729','4735','4736','4741','4743','4744','4745','4747','4754','4760','4767','4803','4804','4806','4903','4905','4907','4908','4909','4911','4924','4931','4933','4939','4944','4946','4950','4953','4966','4971','4972','4973','4974','4979','4987','4991','4995','5009','5011','5013','5014','5015','5016','5102','5201','5202','5205','5206','5209','5210','5211','5212','5213','5220','5223','5227','5230','5245','5251','5263','5272','5274','5276','5278','5281','5287','5289','5291','5299','5301','5302','5304','5306','5309','5310','5312','5314','5315','5321','5324','5328','5340','5344','5345','5347','5348','5351','5353','5355','5356','5364','5371','5381','5383','5386','5392','5398','5403','5410','5425','5426','5432','5438','5439','5443','5450','5452','5455','5457','5460','5464','5465','5468','5474','5475','5478','5481','5483','5487','5488','5489','5490','5493','5498','5508','5511','5512','5514','5516','5520','5523','5529','5530','5536','5543','5601','5603','5604','5609','5701','5703','5704','5820','5864','5878','5902','5903','5904','5905','6015','6016','6020','6021','6023','6026','6101','6103','6104','6109','6111','6113','6114','6118','6121','6122','6123','6124','6125','6126','6127','6129','6130','6134','6138','6140','6143','6144','6146','6147','6148','6150','6151','6154','6156','6158','6160','6161','6163','6167','6169','6170','6171','6173','6174','6175','6179','6180','6182','6185','6186','6187','6188','6190','6194','6195','6198','6199','6203','6204','6207','6208','6210','6212','6217','6218','6219','6220','6221','6222','6223','6227','6228','6229','6231','6233','6234','6236','6237','6240','6241','6242','6244','6245','6246','6247','6248','6259','6261','6263','6264','6265','6266','6270','6274','6275','6276','6279','6284','6287','6290','6291','6292','6294','6404','6411','6417','6418','6419','6425','6426','6432','6435','6438','6441','6446','6457','6461','6462','6465','6469','6470','6472','6482','6485','6486','6488','6492','6494','6496','6499','6506','6508','6509','6510','6512','6514','6516','6523','6527','6530','6532','6535','6538','6542','6547','6548','6556','6560','6561','6568','6569','6570','6574','6576','6577','6578','6588','6589','6590','6593','6594','6596','6603','6609','6612','6613','6615','6616','6624','6629','6640','6642','6643','6649','6654','6662','6664','6667','6679','6680','6683','6690','6697','6703','6716','6732','6803','7402','7556','8024','8027','8032','8034','8038','8040','8042','8043','8044','8047','8048','8049','8050','8054','8059','8064','8066','8067','8068','8069','8071','8074','8076','8077','8080','8083','8084','8085','8086','8087','8088','8089','8091','8092','8093','8096','8097','8099','8107','8109','8111','8121','8147','8155','8171','8176','8182','8183','8234','8240','8255','8277','8279','8284','8289','8291','8299','8342','8349','8354','8358','8383','8390','8401','8403','8406','8409','8410','8415','8416','8418','8420','8421','8423','8424','8426','8431','8432','8433','8435','8436','8437','8440','8444','8446','8450','8455','8472','8476','8477','8489','8905','8906','8908','8916','8917','8921','8923','8924','8927','8928','8929','8930','8931','8932','8933','8934','8935','8936','8937','8938','8941','8942','9949','9950','9951','9960','9962']

    threeCategLength = 0
    twoCategLength = 0
    oneCategLength = 0
    zeroCategLength = 0
    
    gainCategLength = 0
    lossCategLength = 0 
    tieCategLength = 0 

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cAverageScore) >= 3):
                threeCategLength += 1
            elif (3 > float(sign.cAverageScore) >= 2):
                twoCategLength += 1
            elif (2 > float(sign.cAverageScore) >= 1):
                oneCategLength += 1
            elif (1 > float(sign.cAverageScore) >= 0):
                zeroCategLength += 1
                
        except:
            pass

    for c in Allcompany:
        try:
            sign = models.Stock6Sign202011.objects.get(cStockID = c)
            if (float(sign.cLossGain) > 0):
                gainCategLength += 1
            elif (float(sign.cLossGain) < 0):
                lossCategLength += 1
            elif (float(sign.cLossGain) == 0):
                tieCategLength += 1

                
        except:
            pass
    '''
    
    signs = DCStock6Sign202102.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202102.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202103(request):

    
    signs = DCStock6Sign202103.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202103.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202104(request):

    
    signs = DCStock6Sign202104.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202104.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202105(request):

    
    signs = DCStock6Sign202105.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202105.html", locals())

@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202106(request):

    
    signs = DCStock6Sign202106.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202106.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202107(request):

    
    signs = DCStock6Sign202107.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202107.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202108(request):

    
    signs = DCStock6Sign202108.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202108.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202109(request):

    
    signs = DCStock6Sign202109.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202109.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202110(request):

    
    signs = DCStock6Sign202110.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202110.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202111(request):

    
    signs = DCStock6Sign202111.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202111.html", locals())


@permission_required('myapp.Can_enter_stock6 DB', login_url='/login2/')
def DCstock6listall202112(request):

    
    signs = DCStock6Sign202112.objects.all().order_by('cStockID')
    return render(request, "DCstock6listall202112.html", locals())
###########各資料庫分頁########################################################
def DB_stock6sign(request):
    return render(request,"DB_stock6sign.html")


def DB_stockPERseg(request):
    return render(request,"DB_stockPERseg.html")


def DB_DCstock6sign(request):
    return render(request,"DB_DCstock6sign.html")

def DB_stockPERsegStable(request):
    return render(request,"DB_stockPERsegStable.html")

def DB_EPSachiever(request):
    return render(request,"DB_EPSachiever.html")


def DB_StockCapGetter(request):
    return render(request,"DB_StockCapGetter.html")

def DB_EPSnProfitGetter(request):
    return render(request,"DB_EPSnProfitGetter.html")
###########################

@permission_required('myapp.Can_enter_stockKn', login_url='/login2/')
def stockKn(request):  #查詢六大指標，給付費使用者使用

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess0 = request.POST['stockid']  #取得表單輸入內容
        
        if is_number(mess0) == True:  #是數字
            mess = mess0
        else:
            mess = tseotc_dict[mess0]
    
        bt1q, sh1q, bt_roe1_4sum, bt_roe1_4sump, b1q, yahoo_latest_tradePrice, pb1q, kn1_4sum, kn1_4sump, bt1qN, bt2qN, bt3qN, bt4qN, bt_roe1qp, bt_roe2qp, bt_roe3qp, bt_roe4qp = KnQuery.KnQuery(mess) 

        #bt1, sh1, bt_roe1, bt_roe1p, b1, yahoo_latest_tradePrice, pb1, kn1, kn1p = KnQuery.KnQuery(mess) 
        H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, bt1N, bt2N, bt3N, bt4N, bt5N, bt6N, bt7N, bt8N, bt1, bt2, bt3, bt4, bt5, bt6, bt7, bt8, sh1, sh2, sh3, sh4, sh5, sh6, sh7, sh8, bt_roe1p, bt_roe2p, bt_roe3p, bt_roe4p, bt_roe5p, bt_roe6p, bt_roe7p, bt_roe8p, b1, b2, b3, b4, b5, b6, b7, b8, kn1_Hp, kn1_Lp, kn2_Hp, kn2_Lp, kn3_Hp, kn3_Lp, kn4_Hp, kn4_Lp, kn5_Hp, kn5_Lp, kn6_Hp, kn6_Lp, kn7_Hp, kn7_Lp, kn8_Hp, kn8_Lp, pb1_H, pb1_L, pb2_H, pb2_L, pb3_H, pb3_L, pb4_H, pb4_L, pb5_H, pb5_L, pb6_H, pb6_L, pb7_H, pb7_L, pb8_H, pb8_L, bt_roe1_8avep, pb1_8_Have, pb1_8_Lave, kn1_8_Havep, kn1_8_Lavep, buyin_price, notbuyin_price  = Kn8yPrice.Kn8yPrice(mess) 

        stock_name = func2x.GetStockName(mess)
        
    else:
        mess = "台股代號尚未送出！"
        stock_name = "台股名稱尚未查到！"

        #mess2 = "該表單尚未送出！2"
    return render(request, "stockKn.html", locals())


###############################################################################

##################################

@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_test168(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_test168.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_test168.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_test168.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_test168.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_test168(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_test168.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_test168/')
	return render(request, "newsdelete_test168.html", locals())


def test168_StoFavlistall(request):
    segs = StockFavs_test168.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())




def test168_enterStockFav(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        #Product_name, url, itemState, ItemNumber2, buttonType, quantity_atmost = func1.pchome_checkF(mess)
        
    else:
        mess = "股票代號尚未送出！"

    return render(request, "test168_enterStockFav.html", locals())

#################每個月換資料庫
DB1 = Stock6Sign202109
DB2 = Stock6Sign202108
DB3 = Stock6Sign202107
#################
#########################iii##################
from myapp.models import StockPERsegStable2021Q2
from myapp.models import EpsProfit2021Q2
from myapp.models import StockCapVar2021Q2
from myapp.models import EPSachieve2021Q2

from myapp.models import StockPERsegStable2021Q3
from myapp.models import EpsProfit2021Q3
from myapp.models import StockCapVar2021Q3
from myapp.models import EPSachieve2021Q3

def test168_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore             
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]





        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()






        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = StockFavs_test168.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)


            try:
                epsach = EPSachieve2021Q3.objects.get(cStockID = mess)
            
                #cOld.cEPSach = str(epsach.cEPSAchieveRate)

                if len(str(epsach.cEPSAchieveRate)) > 4:
                    cOld.cEPSach = str(epsach.cEPSAchieveRate)[:5] + "%"
                else:
                    cOld.cEPSach = str(epsach.cEPSAchieveRate)
                    
            
            except:
                cOld.cEPSach = "No"

            try:
                stacap = StockCapVar2021Q3.objects.get(cStockID = mess)
            
                cOld.cStCap = str(stacap.cLatestMoM)
            
            except:
                cOld.cStCap = "No"
                
            try:
                epsprf = EpsProfit2021Q3.objects.get(cStockID = mess)
            
                cOld.cEPSnPrf = "Yes"
            
            except:
                cOld.cEPSnPrf = "No"                
                
            
            try:
                stab = StockPERsegStable2021Q3.objects.get(cStockID = mess)
            
                cOld.cPERstab = "Yes"
            except:
                cOld.cPERstab = "No"                
            
            
            
            
            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld2 = StockFavs_test168.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()

            cOld = StockFavs_test168.objects.get(cStockID = mess)

            try:
                epsach = EPSachieve2021Q3.objects.get(cStockID = mess)
            
                #cOld.cEPSach = str(epsach.cEPSAchieveRate)

                if len(str(epsach.cEPSAchieveRate)) > 4:
                    cOld.cEPSach = str(epsach.cEPSAchieveRate)[:5] + "%"
                else:
                    cOld.cEPSach = str(epsach.cEPSAchieveRate)
                    
            
            except:
                cOld.cEPSach = "No"

            try:
                stacap = StockCapVar2021Q3.objects.get(cStockID = mess)
            
                cOld.cStCap = str(stacap.cLatestMoM)
            
            except:
                cOld.cStCap = "No"
                
            try:
                epsprf = EpsProfit2021Q3.objects.get(cStockID = mess)
            
                cOld.cEPSnPrf = "Yes"
            
            except:
                cOld.cEPSnPrf = "No"                
                
            
            try:
                stab = StockPERsegStable2021Q3.objects.get(cStockID = mess)
            
                cOld.cPERstab = "Yes"
            except:
                cOld.cPERstab = "No"                
            
            
            
            
            
            cOld.pubtime =realtime      
                 
            cOld.save()
   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())



def ListallStockFavDB(request, mess=None):


    if mess == None:
        segs = StockFavDB.objects.all().order_by('-id')
    else:
        segs = StockFavDB.objects.filter(cStockID = mess).order_by('-cYearDate')        
    return render(request, "ListallStockFavDB.html", locals())



##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_bobmax(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_bobmax.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_bobmax.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_bobmax.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_bobmax.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_bobmax.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_bobmax.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_bobmax(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_bobmax.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_bobmax/')
	return render(request, "newsdelete_bobmax.html", locals())


def bobmax_StoFavlistall(request):
    segs = models.StockFavs_bobmax.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def bobmax_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore             
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_bobmax.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_bobmax.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_deno36(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_deno36.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_deno36.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_deno36.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_deno36.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_deno36.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_deno36.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_deno36(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_deno36.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_deno36/')
	return render(request, "newsdelete_deno36.html", locals())


def deno36_StoFavlistall(request):
    segs = models.StockFavs_deno36.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def deno36_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_deno36.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_deno36.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_donhonlin(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_donhonlin.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_donhonlin.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_donhonlin.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_donhonlin.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_donhonlin.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_donhonlin.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_donhonlin(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_donhonlin.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_donhonlin/')
	return render(request, "newsdelete_donhonlin.html", locals())


def donhonlin_StoFavlistall(request):
    segs = models.StockFavs_donhonlin.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def donhonlin_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_donhonlin.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_donhonlin.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_goldsilver(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_goldsilver.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_goldsilver.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_goldsilver.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_goldsilver.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_goldsilver.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_goldsilver.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_goldsilver(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_goldsilver.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_goldsilver/')
	return render(request, "newsdelete_goldsilver.html", locals())


def goldsilver_StoFavlistall(request):
    segs = models.StockFavs_goldsilver.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def goldsilver_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_goldsilver.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_goldsilver.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_hyeth(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_hyeth.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_hyeth.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_hyeth.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_hyeth.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_hyeth.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_hyeth.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_hyeth(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_hyeth.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_hyeth/')
	return render(request, "newsdelete_hyeth.html", locals())


def hyeth_StoFavlistall(request):
    segs = models.StockFavs_hyeth.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def hyeth_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_hyeth.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_hyeth.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_jonyi(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_jonyi.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_jonyi.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_jonyi.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_jonyi.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_jonyi.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_jonyi.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_jonyi(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_jonyi.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_jonyi/')
	return render(request, "newsdelete_jonyi.html", locals())


def jonyi_StoFavlistall(request):
    segs = models.StockFavs_jonyi.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def jonyi_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_jonyi.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_jonyi.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_hakkai(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_hakkai.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_hakkai.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_hakkai.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_hakkai.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_hakkai.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_hakkai.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_hakkai(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_hakkai.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_hakkai/')
	return render(request, "newsdelete_hakkai.html", locals())


def hakkai_StoFavlistall(request):
    segs = models.StockFavs_hakkai.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def hakkai_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_hakkai.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_hakkai.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
##################################

#@permission_required('myapp.Can_enter_usersmain_test168', login_url='/login2/')
def usersmain_bakylews(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_bakylews.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_bakylews.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_bakylews.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_bakylews.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_bakylews.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_bakylews.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_bakylews(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_bakylews.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_bakylews/')
	return render(request, "newsdelete_bakylews.html", locals())


def bakylews_StoFavlistall(request):
    segs = models.StockFavs_bakylews.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def bakylews_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_bakylews.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_bakylews.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
def usersmain_chenchi(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_chenchi.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_chenchi.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_chenchi.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_chenchi.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_chenchi.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_chenchi.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_chenchi(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_chenchi.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_chenchi/')
	return render(request, "newsdelete_chenchi.html", locals())


def chenchi_StoFavlistall(request):
    segs = models.StockFavs_chenchi.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def chenchi_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_chenchi.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_chenchi.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################

def usersmain_kevinlee(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_kevinlee.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_kevinlee.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_kevinlee.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_kevinlee.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_kevinlee.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_kevinlee.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_kevinlee(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_kevinlee.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_kevinlee/')
	return render(request, "newsdelete_kevinlee.html", locals())


def kevinlee_StoFavlistall(request):
    segs = models.StockFavs_kevinlee.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def kevinlee_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_kevinlee.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_kevinlee.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
#############################################################################

def usersmain_liusnow(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_liusnow.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_liusnow.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_liusnow.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_liusnow.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_liusnow.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_liusnow.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_liusnow(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_liusnow.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_liusnow/')
	return render(request, "newsdelete_liusnow.html", locals())


def liusnow_StoFavlistall(request):
    segs = models.StockFavs_liusnow.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def liusnow_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_liusnow.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_liusnow.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
#############################################################################

def usersmain_yuhuahsiao(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_yuhuahsiao.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_yuhuahsiao.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_yuhuahsiao.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_yuhuahsiao.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_yuhuahsiao.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_yuhuahsiao.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_yuhuahsiao(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_yuhuahsiao.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_yuhuahsiao/')
	return render(request, "newsdelete_yuhuahsiao.html", locals())


def yuhuahsiao_StoFavlistall(request):
    segs = models.StockFavs_yuhuahsiao.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def yuhuahsiao_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_yuhuahsiao.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_yuhuahsiao.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())

#############################################################################
#############################################################################

def usersmain_magicjohn(request, pageindex=None):  #使用者功能首頁
	global page1u
	pagesize = 20  #8
	newsall = models.NewsUnit.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1u = 1
		newsunits0 = models.NewsUnit.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1u-2)*pagesize
		if start >= 0:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u -= 1
	elif pageindex=='2':
		start = page1u*pagesize
		if start < datasize:
			newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
			page1u += 1
	elif pageindex=='3':
		start = (page1u-1)*pagesize
		newsunits0 = models.NewsUnit.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1u

######################################################
	global page1
	pagesize = 20  #8
	newsall = models.StockFavs_magicjohn.objects.all().order_by('-id')
	datasize = len(newsall)
	totpage = math.ceil(datasize / pagesize)
	if pageindex==None:
		page1 = 1
		newsunits = models.StockFavs_magicjohn.objects.order_by('-id')[:pagesize]
	elif pageindex=='1':
		start = (page1-2)*pagesize
		if start >= 0:
			newsunits = models.StockFavs_magicjohn.objects.order_by('-id')[start:(start+pagesize)]
			page1 -= 1
	elif pageindex=='2':
		start = page1*pagesize
		if start < datasize:
			newsunits = models.StockFavs_magicjohn.objects.order_by('-id')[start:(start+pagesize)]
			page1 += 1
	elif pageindex=='3':
		start = (page1-1)*pagesize
		newsunits = models.StockFavs_magicjohn.objects.order_by('-id')[start:(start+pagesize)]
	currentpage = page1
	return render(request, "usersmain_magicjohn.html", locals())




#@permission_required('myapp.Can_enter_AdminOnly', login_url='/login/')
def newsdelete_magicjohn(request, newsid=None, deletetype=None):  #刪除資料
	unit = models.StockFavs_magicjohn.objects.get(id=newsid)  #讀取指定資料
	if deletetype == None:  #進入刪除頁面,顯示原有資料
		type = str(unit.cStockID.strip())
		#subject = unit.title
		#editor = unit.nickname
		#content = unit.message
		#date = unit.pubtime
	elif deletetype == '1':  #按刪除鈕
		unit.delete()
		return redirect('/usersmain_magicjohn/')
	return render(request, "newsdelete_magicjohn.html", locals())


def magicjohn_StoFavlistall(request):
    segs = models.StockFavs_magicjohn.objects.all().order_by('-cStockID')
    return render(request, "common_StoFavlistall.html", locals())


def magicjohn_enterStockFavAdmin(request):  

        
    if request.method == "POST":  #假如是以POST方式才處理
        mess = request.POST['stockid']  #取得表單輸入內容
        mess2 = request.POST['monthid']
        
        stock_name = func2.GetStockName(mess)

        H1, H2, H3, H4, H5, L1, L2, L3, L4, L5, eps1, eps2, eps3, eps4, eps5, PER_H1, PER_H2, PER_H3, PER_H4, PER_H5, PER_L1, PER_L2, PER_L3, PER_L4, PER_L5, PER_H_average, PER_L_average, PER_H, PER_L, rYoY1N, rYoY2N, rYoY3N, rYoY4N, rYoY5N, rYoY6N, rYoY1, rYoY2, rYoY3, rYoY4, rYoY5, rYoY6, RevYoY, rYoY6Average, r1N, r2N, r3N, r4N, r5N, r6N, r7N, r8N, r9N, r10N, r11N, r12N, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, Rev_Predict, Net1N, Net2N, Net3N, Net4N, Net1, Net2, Net3, Net4, Net4Average, Net_Predict, capital_stock, Predict_EPS, Predict_high_price, Predict_low_price, yahoo_latest_tradePrice, New_up_profit, New_down_loss, risk_reward, pYoY1, pYoY2, pYoY3, pYoY4, pYoY5, pYoY6, pRevYoY, pYoY6Average, pNet1, pNet2, pNet3, pNet4, pNet4Average, H0, thisYear_Sum, theRest_Predict, H6, L6, Predict_EPS0, eps1N =PERsegx.PERsegx(mess, mess2)

        xUrl = "/ListallStockFavDB/" + str(mess) + "/"        

        c1 = DB1.objects.get(cStockID = mess)
        ScoreAve1 = c1.cAverageScore
        c2 = DB2.objects.get(cStockID = mess)
        ScoreAve2 = c2.cAverageScore        
        c3 = DB3.objects.get(cStockID = mess)
        ScoreAve3 = c3.cAverageScore            
        #收集資料創建時間
        import datetime
        wholetime = str(datetime.datetime.now()) 
        realtime = wholetime[:16]  #取得獲取資料時間
        
        yeardateOnly = wholetime[:10]

        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld2 = StockFavDB.objects.get(cStockID = mess, cYearDate = yeardateOnly)#(cYearDate = yeardateOnly)
            
            #if str(cOld2.cYearDate) != str(yeardateOnly):
                
            #cDB = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            #cDB.save()
                
            #else:
                
            cOld2.cStockID = mess
            cOld2.cStockName = stock_name
            cOld2.cYearDate = yeardateOnly

          
            cOld2.cPredict_EPS = Predict_EPS  
            cOld2.cPredict_high_price = Predict_high_price              
            cOld2.cPredict_low_price = Predict_low_price
            cOld2.cNew_up_profit = New_up_profit          
            cOld2.cNew_down_loss = New_down_loss    
            cOld2.cRisk_reward = risk_reward 
            cOld2.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld2.pubtime =realtime      
                 
            cOld2.save() 
            
        except:  #針對沒有的，抓取資料存入資料庫 有兩筆資料以上
            
            cOld2 = StockFavDB.objects.create(cStockID = mess,cStockName = stock_name,cYearDate = yeardateOnly,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld2.save()


        #以下寫入資料庫
        try:  #先試著看料庫有沒有這個股票，若沒有 跳到except處理
            #不存在，發生錯誤，跳到except            
            cOld = models.StockFavs_magicjohn.objects.get(cStockID = mess)

        #cOld.cItemName = Product_name
            cOld.cStockID = mess
            cOld.cStockName = stock_name
            cOld.cDBURL = xUrl

            cOld.cScore1st = ScoreAve1
            cOld.cScore2nd = ScoreAve2            
            cOld.cScore3rd = ScoreAve3            
            
            cOld.cPredict_EPS = Predict_EPS  
            cOld.cPredict_high_price = Predict_high_price              
            cOld.cPredict_low_price = Predict_low_price
            cOld.cNew_up_profit = New_up_profit          
            cOld.cNew_down_loss = New_down_loss    
            cOld.cRisk_reward = risk_reward 
            cOld.cTodayClose = float(yahoo_latest_tradePrice)

            
            cOld.pubtime =realtime      
                 
            cOld.save()
            
            ###################
        except:  #針對沒有的，抓取資料存入資料庫

            cOld = models.StockFavs_magicjohn.objects.create(cStockID = mess,cStockName = stock_name,cDBURL = xUrl,cScore1st = ScoreAve1,cScore2nd = ScoreAve2,cScore3rd = ScoreAve3,cPredict_EPS = Predict_EPS,cPredict_high_price = Predict_high_price,cPredict_low_price = Predict_low_price,cNew_up_profit = New_up_profit,cNew_down_loss = New_down_loss,cRisk_reward = risk_reward,cTodayClose = float(yahoo_latest_tradePrice),pubtime =realtime)              

            cOld.save()


   
    else:
        mess = "股票代號尚未送出！"


    return render(request, "common_enterStockFavAdmin.html", locals())